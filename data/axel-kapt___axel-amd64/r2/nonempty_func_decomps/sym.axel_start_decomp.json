"{\"annotations\":[{\"start\":57,\"end\":57,\"offset\":4206070,\"type\":\"offset\"},{\"start\":102,\"end\":102,\"offset\":4206070,\"type\":\"offset\"},{\"start\":122,\"end\":122,\"offset\":4206072,\"type\":\"offset\"},{\"start\":142,\"end\":142,\"offset\":4206074,\"type\":\"offset\"},{\"start\":172,\"end\":172,\"offset\":4206078,\"type\":\"offset\"},{\"start\":192,\"end\":192,\"offset\":4206079,\"type\":\"offset\"},{\"start\":212,\"end\":212,\"offset\":4206080,\"type\":\"offset\"},{\"start\":229,\"end\":229,\"offset\":4206083,\"type\":\"offset\"},{\"start\":259,\"end\":259,\"offset\":4206086,\"type\":\"offset\"},{\"start\":314,\"end\":314,\"offset\":4206090,\"type\":\"offset\"},{\"start\":369,\"end\":369,\"offset\":4206090,\"type\":\"offset\"},{\"start\":410,\"end\":410,\"offset\":4206097,\"type\":\"offset\"},{\"start\":534,\"end\":534,\"offset\":4206099,\"type\":\"offset\"},{\"start\":561,\"end\":561,\"offset\":4206106,\"type\":\"offset\"},{\"start\":596,\"end\":596,\"offset\":4206113,\"type\":\"offset\"},{\"start\":630,\"end\":630,\"offset\":4206117,\"type\":\"offset\"},{\"start\":648,\"end\":648,\"offset\":4206120,\"type\":\"offset\"},{\"start\":691,\"end\":691,\"offset\":4206123,\"type\":\"offset\"},{\"start\":742,\"end\":742,\"offset\":4206128,\"type\":\"offset\"},{\"start\":777,\"end\":777,\"offset\":4206135,\"type\":\"offset\"},{\"start\":811,\"end\":811,\"offset\":4206142,\"type\":\"offset\"},{\"start\":837,\"end\":837,\"offset\":4206145,\"type\":\"offset\"},{\"start\":859,\"end\":859,\"offset\":4206149,\"type\":\"offset\"},{\"start\":885,\"end\":885,\"offset\":4206152,\"type\":\"offset\"},{\"start\":920,\"end\":920,\"offset\":4206159,\"type\":\"offset\"},{\"start\":938,\"end\":938,\"offset\":4206162,\"type\":\"offset\"},{\"start\":965,\"end\":965,\"offset\":4206165,\"type\":\"offset\"},{\"start\":991,\"end\":991,\"offset\":4206168,\"type\":\"offset\"},{\"start\":1026,\"end\":1026,\"offset\":4206175,\"type\":\"offset\"},{\"start\":1060,\"end\":1060,\"offset\":4206182,\"type\":\"offset\"},{\"start\":1086,\"end\":1086,\"offset\":4206185,\"type\":\"offset\"},{\"start\":1164,\"end\":1164,\"offset\":4206197,\"type\":\"offset\"},{\"start\":1219,\"end\":1219,\"offset\":4206197,\"type\":\"offset\"},{\"start\":1232,\"end\":1232,\"offset\":4206200,\"type\":\"offset\"},{\"start\":1258,\"end\":1296,\"offset\":4206200,\"type\":\"offset\"},{\"start\":1365,\"end\":1512,\"offset\":4206200,\"type\":\"offset\"},{\"start\":1690,\"end\":2056,\"offset\":4206200,\"type\":\"offset\"},{\"start\":2453,\"end\":2527,\"offset\":4206200,\"type\":\"offset\"},{\"start\":2632,\"end\":2782,\"offset\":4206200,\"type\":\"offset\"},{\"start\":2963,\"end\":3167,\"offset\":4206200,\"type\":\"offset\"},{\"start\":3402,\"end\":3493,\"offset\":4206200,\"type\":\"offset\"},{\"start\":3615,\"end\":4318,\"offset\":4206200,\"type\":\"offset\"},{\"start\":5052,\"end\":5466,\"offset\":4206200,\"type\":\"offset\"},{\"start\":5911,\"end\":6372,\"offset\":4206200,\"type\":\"offset\"},{\"start\":6864,\"end\":7053,\"offset\":4206200,\"type\":\"offset\"},{\"start\":7273,\"end\":7384,\"offset\":4206200,\"type\":\"offset\"},{\"start\":7526,\"end\":7838,\"offset\":4206200,\"type\":\"offset\"}],\"code\":\"int sym.axel_start (int esi, int edx) {\\n    loc_0x402df6:\\n        // CALL XREF from main @ 0x401f76(x)\\n        push  (r13)\\n        push  (r12)\\n        r13 = rdi + 8 // arg1\\n        push  (rbp)\\n        push  (rbx)\\n        r12d = 0\\n        rbx = rdi     // arg1\\n        rsp -= 0x18\\n         // do {\\n    loc_0x402e0a:\\n        // CODE XREF from sym.axel_start @ 0x402e78(x)\\n        var = r12d - dword [rbx + 0xc18]\\n        if  (var >= 0) goto loc_0x402e7a // likely\\n         // } while (?);\\n        }\\n        return eax;\\n    loc_0x402e13:\\n        rbp = r12 * 0x30a8\\n        rax = qword [rbx + 0x3c90]\\n        rsi = rax + 8 // char *s1\\n        rdi = rbp\\n        rdi += qword [rbx] // int64_t arg1\\n        sym.conn_set  () // sym.conn_set(0x0, 0x8)\\n        rax = qword [rbx + 0x3c90]\\n        rdx = qword [rbx + 0xc30]\\n        rax = qword [rax]\\n        rcx = rdx + 8\\n        rdx = qword [rdx]\\n        qword [rbx + 0x3c90] = rax\\n        rax = rbp\\n        rax += qword [rbx]\\n        var = r12d & r12d\\n        qword [rax + 0x3090] = rcx\\n        qword [rbx + 0xc30] = rdx\\n        qword [rax] = r13\\n        if  (!var) goto loc_0x402e75 // likely\\n            \\n    loc_0x402e75:\\n        // CODE XREF from sym.axel_start @ 0x402e69(x)\\n        r12+\\n        goto loc_0x402e0a             dword [rax + 0x3080] = 1\\n\\n    loc_0x00402e6b: // orphan\\n             dword [rax + 0x3080] = 1\\n         // CODE XREF from sym.axel_start @ 0x402e11(x)\\n         var = dword [rbx + 0xc24] - 0\\n         if  (var <= 0) goto loc_0x402ea1 // likely\\n\\n    loc_0x00402e7a: // orphan\\n         // CODE XREF from sym.axel_start @ 0x402e11(x)\\n         var = dword [rbx + 0xc24] - 0\\n         if  (var <= 0) goto loc_0x402ea1 // likely\\n         esi = str.Starting_download // 0x406384 // \\\"Starting download\\\"\\n         edi = 0\\n         edx = 5\\n         sym.imp.dcgettext  ()\\n         rdi = rbx                // int64_t arg1\\n         rsi = rax                // int64_t arg2\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n\\n    loc_0x00402e83: // orphan\\n         esi = str.Starting_download // 0x406384 // \\\"Starting download\\\"\\n         edi = 0\\n         edx = 5\\n         sym.imp.dcgettext  ()\\n         rdi = rbx                // int64_t arg1\\n         rsi = rax                // int64_t arg2\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         // CODE XREF from sym.axel_start @ 0x402e81(x)\\n         r12d = 0\\n\\n    loc_0x00402ea1: // orphan\\n         // CODE XREF from sym.axel_start @ 0x402e81(x)\\n         r12d = 0\\n         // CODE XREF from sym.axel_start @ 0x402f88(x)\\n         var = r12d - dword [rbx + 0xc18]\\n         if  (var >= 0) goto loc_0x402f8d // likely\\n\\n    loc_0x00402ea4: // orphan\\n         // CODE XREF from sym.axel_start @ 0x402f88(x)\\n         var = r12d - dword [rbx + 0xc18]\\n         if  (var >= 0) goto loc_0x402f8d // likely\\n         r13 = r12 * 0x30a8\\n         rbp = r13\\n         rbp += qword [rbx]\\n         rax = qword [rbp + 0x3070]\\n         var = qword [rbp + 0x3068] - rax\\n         if  (var > 0) goto loc_0x402f85 // likely\\n\\n    loc_0x00402eb1: // orphan\\n         r13 = r12 * 0x30a8\\n         rbp = r13\\n         rbp += qword [rbx]\\n         rax = qword [rbp + 0x3070]\\n         var = qword [rbp + 0x3068] - rax\\n         if  (var > 0) goto loc_0x402f85 // likely\\n         var = dword [rbx + 0xc24] - 1\\n         if  (var <= 0) goto loc_0x402f1f // likely\\n\\n    loc_0x00402ed2: // orphan\\n         var = dword [rbx + 0xc24] - 1\\n         if  (var <= 0) goto loc_0x402f1f // likely\\n         r9 = qword [rbp + 0x3090]\\n         r8d = dword [arg_ch]\\n         edx = 5\\n         esi = str.Connection__i_downloading_from__s:_i_using_interface__s // 0x406396 // \\\"Connection %i downloading from %s:%i using interface %s\\\"\\n         edi = 0\\n         qword [var_8h] = r9\\n         dword [var_4h] = r8d\\n         sym.imp.dcgettext  ()\\n         r9 = qword [var_8h]\\n         r8d = dword [var_4h]\\n         rcx = arg_14h\\n         rsi = rax                // int64_t arg2\\n         edx = r12d               // int64_t arg3\\n         rdi = rbx                // int64_t arg1\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x0, 0x178014, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n\\n    loc_0x00402edb: // orphan\\n         r9 = qword [rbp + 0x3090]\\n         r8d = dword [arg_ch]\\n         edx = 5\\n         esi = str.Connection__i_downloading_from__s:_i_using_interface__s // 0x406396 // \\\"Connection %i downloading from %s:%i using interface %s\\\"\\n         edi = 0\\n         qword [var_8h] = r9\\n         dword [var_4h] = r8d\\n         sym.imp.dcgettext  ()\\n         r9 = qword [var_8h]\\n         r8d = dword [var_4h]\\n         rcx = arg_14h\\n         rsi = rax                // int64_t arg2\\n         edx = r12d               // int64_t arg3\\n         rdi = rbx                // int64_t arg1\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x0, 0x178014, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         // CODE XREF from sym.axel_start @ 0x402ed9(x)\\n         rcx = r13\\n         rcx += qword [rbx]\\n         esi = 0\\n         edx = sym.setup_thread   // 0x402fb1 // \\\"SH\\\\x89\\\\xfb1\\\\xffH\\\\x83\\\\xec\\\\x10H\\\\x8dt$\\\\f\\\\xe8k\\\\xe5\\\\xff\\\\xffH\\\\x8dt$\\\\f\\\\xbf\\\\x01\\\"\\n         rdi = rcx + 0x30a0\\n         dword [rcx + 0x3098] = 1\\n         sym.imp.pthread_create  ()\\n         var = eax & eax\\n         if  (!var) goto loc_0x402f70 // likely\\n\\n    loc_0x00402f1f: // orphan\\n         // CODE XREF from sym.axel_start @ 0x402ed9(x)\\n         rcx = r13\\n         rcx += qword [rbx]\\n         esi = 0\\n         edx = sym.setup_thread   // 0x402fb1 // \\\"SH\\\\x89\\\\xfb1\\\\xffH\\\\x83\\\\xec\\\\x10H\\\\x8dt$\\\\f\\\\xe8k\\\\xe5\\\\xff\\\\xffH\\\\x8dt$\\\\f\\\\xbf\\\\x01\\\"\\n         rdi = rcx + 0x30a0\\n         dword [rcx + 0x3098] = 1\\n         sym.imp.pthread_create  ()\\n         var = eax & eax\\n         if  (!var) goto loc_0x402f70 // likely\\n         edx = 5\\n         esi = str.pthread_error___ // 0x4063ce // \\\"pthread error!!!\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         rdi = rbx                // int64_t arg1\\n         rsi = rax                // int64_t arg2\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         dword [rbx + 0x3c84] = 0xffffffff // [0xffffffff:4]=-1 // -1\\n         goto loc_0x402f85\\n\\n    loc_0x00402f46: // orphan\\n         edx = 5\\n         esi = str.pthread_error___ // 0x4063ce // \\\"pthread error!!!\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         rdi = rbx                // int64_t arg1\\n         rsi = rax                // int64_t arg2\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         dword [rbx + 0x3c84] = 0xffffffff // [0xffffffff:4]=-1 // -1\\n         goto loc_0x402f85\\n         // CODE XREF from sym.axel_start @ 0x402f44(x)\\n         eax = 0\\n         r13 += qword [rbx]\\n         sym.gettime  ()\\n         cvttsd2si eax,mm0\\n         dword [r13 + 0x3084] = eax\\n\\n    loc_0x00402f70: // orphan\\n         // CODE XREF from sym.axel_start @ 0x402f44(x)\\n         eax = 0\\n         r13 += qword [rbx]\\n         sym.gettime  ()\\n         cvttsd2si eax,mm0\\n         dword [r13 + 0x3084] = eax\\n         // CODE XREFS from sym.axel_start @ 0x402ecc(x), 0x402f6e(x)\\n         r12+\\n         goto loc_0x402ea4\\n\\n    loc_0x00402f85: // orphan\\n         // CODE XREFS from sym.axel_start @ 0x402ecc(x), 0x402f6e(x)\\n         r12+\\n         goto loc_0x402ea4\\n         // CODE XREF from sym.axel_start @ 0x402eab(x)\\n         eax = 0\\n         sym.gettime  ()\\n         dword [rbx + 0x3c84] = 0\\n         qword [rbx + 0x3c50] = xmm0\\n         rsp += 0x18\\n         rbx = pop  ()\\n         rbp = pop  ()\\n         r12 = pop  ()            // rsp\\n         r13 = pop  ()\\n         re\\n\\n    loc_0x00402f8d: // orphan\\n         // CODE XREF from sym.axel_start @ 0x402eab(x)\\n         eax = 0\\n         sym.gettime  ()\\n         dword [rbx + 0x3c84] = 0\\n         qword [rbx + 0x3c50] = xmm0\\n         rsp += 0x18\\n         rbx = pop  ()\\n         rbp = pop  ()\\n         r12 = pop  ()            // rsp\\n         r13 = pop  ()\\n         re\\n\\n}\\n\"}\n"