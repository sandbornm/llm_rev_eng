"{\"annotations\":[{\"start\":55,\"end\":55,\"offset\":4210309,\"type\":\"offset\"},{\"start\":123,\"end\":123,\"offset\":4210309,\"type\":\"offset\"},{\"start\":191,\"end\":191,\"offset\":4210309,\"type\":\"offset\"},{\"start\":242,\"end\":242,\"offset\":4210309,\"type\":\"offset\"},{\"start\":262,\"end\":262,\"offset\":4210311,\"type\":\"offset\"},{\"start\":282,\"end\":282,\"offset\":4210313,\"type\":\"offset\"},{\"start\":302,\"end\":302,\"offset\":4210314,\"type\":\"offset\"},{\"start\":322,\"end\":322,\"offset\":4210315,\"type\":\"offset\"},{\"start\":352,\"end\":352,\"offset\":4210318,\"type\":\"offset\"},{\"start\":382,\"end\":382,\"offset\":4210321,\"type\":\"offset\"},{\"start\":441,\"end\":441,\"offset\":4210326,\"type\":\"offset\"},{\"start\":481,\"end\":481,\"offset\":4210329,\"type\":\"offset\"},{\"start\":502,\"end\":502,\"offset\":4210336,\"type\":\"offset\"},{\"start\":529,\"end\":529,\"offset\":4210336,\"type\":\"offset\"},{\"start\":564,\"end\":564,\"offset\":4210341,\"type\":\"offset\"},{\"start\":588,\"end\":588,\"offset\":4210344,\"type\":\"offset\"},{\"start\":606,\"end\":606,\"offset\":4210347,\"type\":\"offset\"},{\"start\":685,\"end\":685,\"offset\":4210365,\"type\":\"offset\"},{\"start\":738,\"end\":738,\"offset\":4210365,\"type\":\"offset\"},{\"start\":762,\"end\":762,\"offset\":4210368,\"type\":\"offset\"},{\"start\":786,\"end\":786,\"offset\":4210371,\"type\":\"offset\"},{\"start\":863,\"end\":863,\"offset\":4210382,\"type\":\"offset\"},{\"start\":916,\"end\":916,\"offset\":4210382,\"type\":\"offset\"},{\"start\":932,\"end\":932,\"offset\":4210384,\"type\":\"offset\"},{\"start\":956,\"end\":956,\"offset\":4210387,\"type\":\"offset\"},{\"start\":1033,\"end\":1033,\"offset\":4210894,\"type\":\"offset\"},{\"start\":1086,\"end\":1086,\"offset\":4210894,\"type\":\"offset\"},{\"start\":1107,\"end\":1107,\"offset\":4210901,\"type\":\"offset\"},{\"start\":1129,\"end\":1129,\"offset\":4210902,\"type\":\"offset\"},{\"start\":1151,\"end\":1151,\"offset\":4210903,\"type\":\"offset\"},{\"start\":1173,\"end\":1173,\"offset\":4210905,\"type\":\"offset\"},{\"start\":1195,\"end\":1195,\"offset\":4210907,\"type\":\"offset\"},{\"start\":1245,\"end\":1245,\"offset\":4210393,\"type\":\"offset\"},{\"start\":1345,\"end\":1476,\"offset\":4210393,\"type\":\"offset\"},{\"start\":1638,\"end\":2128,\"offset\":4210393,\"type\":\"offset\"},{\"start\":2649,\"end\":2887,\"offset\":4210393,\"type\":\"offset\"},{\"start\":3156,\"end\":3664,\"offset\":4210393,\"type\":\"offset\"},{\"start\":4203,\"end\":4323,\"offset\":4210393,\"type\":\"offset\"},{\"start\":4474,\"end\":5118,\"offset\":4210393,\"type\":\"offset\"},{\"start\":5793,\"end\":5817,\"offset\":4210393,\"type\":\"offset\"},{\"start\":5872,\"end\":6227,\"offset\":4210393,\"type\":\"offset\"},{\"start\":6613,\"end\":6702,\"offset\":4210393,\"type\":\"offset\"},{\"start\":6822,\"end\":7798,\"offset\":4210393,\"type\":\"offset\"},{\"start\":8805,\"end\":9736,\"offset\":4210393,\"type\":\"offset\"},{\"start\":10698,\"end\":10836,\"offset\":4210393,\"type\":\"offset\"},{\"start\":11005,\"end\":11576,\"offset\":4210393,\"type\":\"offset\"},{\"start\":12178,\"end\":12297,\"offset\":4210393,\"type\":\"offset\"},{\"start\":12447,\"end\":12790,\"offset\":4210393,\"type\":\"offset\"},{\"start\":13164,\"end\":13444,\"offset\":4210393,\"type\":\"offset\"},{\"start\":13755,\"end\":14077,\"offset\":4210393,\"type\":\"offset\"},{\"start\":14430,\"end\":14754,\"offset\":4210393,\"type\":\"offset\"},{\"start\":15109,\"end\":15351,\"offset\":4210393,\"type\":\"offset\"},{\"start\":15624,\"end\":15676,\"offset\":4210393,\"type\":\"offset\"},{\"start\":15759,\"end\":15921,\"offset\":4210393,\"type\":\"offset\"},{\"start\":16114,\"end\":16209,\"offset\":4210393,\"type\":\"offset\"},{\"start\":16335,\"end\":16515,\"offset\":4210393,\"type\":\"offset\"},{\"start\":16726,\"end\":16813,\"offset\":4210393,\"type\":\"offset\"},{\"start\":16931,\"end\":17056,\"offset\":4210393,\"type\":\"offset\"}],\"code\":\"int sym.conn_set (int esi, int edx) {\\n    loc_0x403e85:\\n        // XREFS: CALL 0x004028b4  CALL 0x00402e2b  CALL 0x00403433\\n        // XREFS: CALL 0x00404688  CALL 0x004051b8  CALL 0x0040582b\\n        // XREFS: CALL 0x004058ef  CALL 0x004059bd\\n        push  (r13)\\n        push  (r12)\\n        push  (rbp)\\n        push  (rbx)\\n        rbp = rsi     // arg2\\n        rbx = rdi     // arg1\\n        esi = 0x406667 // 'gf@' // \\\"://\\\" // const char *s2\\n        rdi = rbp     // const char *s1\\n        rsp -= 0x408\\n        sym.imp.strstr  ()\\n        // char *strstr(-1, \\\"://\\\")\\n        var = rax & rax\\n        rdx = rax\\n        if  (var) goto loc_0x403ebd // unlikely\\n            \\n    loc_0x403ebd:\\n        // CODE XREF from sym.conn_set @ 0x403eab(x)\\n        cl = byte [rbp]\\n        var = cl - 0x66\\n        if  (var) goto loc_0x403ece // likely\\n            \\n    loc_0x403ece:\\n        // CODE XREF from sym.conn_set @ 0x403ec3(x)\\n        eax = 0\\n        var = cl - 0x68\\n        if  (var) goto loc_0x4040ce // likely\\n            \\n    loc_0x4040ce:\\n        // CODE XREF from sym.conn_set @ 0x403ed3(x)\\n        rsp += 0x408\\n        rbx = pop  ()\\n        rbp = pop  ()\\n        r12 = pop  ()\\n        r13 = pop  ()\\n        re\\n         // } else {\\n    loc_0x403ed9:\\n        dword [rbx + 8] = 2\\n         // } else {\\n         // } else {\\n        }\\n        return eax;             // CODE XREF from sym.conn_set @ 0x403ecc(x)\\n             rsi = rdx + 3\\n             edx = 0x400              // 1024\\n\\n    loc_0x00403ee0: // orphan\\n             // CODE XREF from sym.conn_set @ 0x403ecc(x)\\n             rsi = rdx + 3\\n             edx = 0x400              // 1024\\n         // CODE XREF from sym.conn_set @ 0x403ebb(x)\\n         rdi = rsp                // char *dest\\n         rbp = rbx + 0x414\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\", -1, -1)\\n         esi = 0x2f               // '/' // int c\\n         rdi = rsp                // const char *s\\n         sym.imp.strchr  ()\\n                                  // char *strchr(\\\"\\\", 0x00000000)\\n         var = rax & rax\\n         if  (var) goto loc_0x403f19 // unlikely\\n\\n    loc_0x00403ee9: // orphan\\n         // CODE XREF from sym.conn_set @ 0x403ebb(x)\\n         rdi = rsp                // char *dest\\n         rbp = rbx + 0x414\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\", -1, -1)\\n         esi = 0x2f               // '/' // int c\\n         rdi = rsp                // const char *s\\n         sym.imp.strchr  ()\\n                                  // char *strchr(\\\"\\\", 0x00000000)\\n         var = rax & rax\\n         if  (var) goto loc_0x403f19 // unlikely\\n         esi = 0x406669           // 'if@' // \\\"/\\\" // const char *src\\n         rdi = rbp                // char *dest // rsp\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(\\\"\\\", \\\"/\\\")\\n         goto loc_0x403f42\\n\\n    loc_0x00403f0a: // orphan\\n         esi = 0x406669           // 'if@' // \\\"/\\\" // const char *src\\n         rdi = rbp                // char *dest // rsp\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(\\\"\\\", \\\"/\\\")\\n         goto loc_0x403f42\\n         // CODE XREF from sym.conn_set @ 0x403f08(x)\\n         rcx = rax + 1            //  ...\\n         byte [rax] = 0\\n         edx = 0x406620           // ' f@' // \\\"/%s\\\" // const char *format\\n         eax = 0\\n         esi = 0x400              // 1024 // size_t size\\n         rdi = rbp                // char *s // rsp\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(\\\"\\\", 0x00000000, \\\"/%s\\\", ?)\\n         var = dword [rbx + 8] - 2\\n         if  (var) goto loc_0x403f42 // likely\\n\\n    loc_0x00403f19: // orphan\\n         // CODE XREF from sym.conn_set @ 0x403f08(x)\\n         rcx = rax + 1            //  ...\\n         byte [rax] = 0\\n         edx = 0x406620           // ' f@' // \\\"/%s\\\" // const char *format\\n         eax = 0\\n         esi = 0x400              // 1024 // size_t size\\n         rdi = rbp                // char *s // rsp\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(\\\"\\\", 0x00000000, \\\"/%s\\\", ?)\\n         var = dword [rbx + 8] - 2\\n         if  (var) goto loc_0x403f42 // likely\\n         rdi = rbp                // int64_t arg1 // rsp\\n         sym.http_encode  ()      // sym.http_encode(0x178000)\\n\\n    loc_0x00403f3a: // orphan\\n         rdi = rbp                // int64_t arg1 // rsp\\n         sym.http_encode  ()      // sym.http_encode(0x178000)\\n         // CODE XREFS from sym.conn_set @ 0x403f17(x), 0x403f38(x)\\n         r12 = rbx + 0x14\\n         edx = 0x400              // 1024 // size_t  n\\n         rsi = rsp                // const char *src\\n         rdi = r12                // char *dest\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\", \\\"\\\", 0x00000000)\\n         esi = 0x3f               // '?' // int c\\n         rdi = rbp                // const char *s // rsp\\n         sym.imp.strchr  ()\\n                                  // char *strchr(\\\"\\\", 0x00000000)\\n         var = rax & rax\\n         r13 = rax\\n         if  (!var) goto loc_0x403f6e // likely\\n\\n    loc_0x00403f42: // orphan\\n         // CODE XREFS from sym.conn_set @ 0x403f17(x), 0x403f38(x)\\n         r12 = rbx + 0x14\\n         edx = 0x400              // 1024 // size_t  n\\n         rsi = rsp                // const char *src\\n         rdi = r12                // char *dest\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\", \\\"\\\", 0x00000000)\\n         esi = 0x3f               // '?' // int c\\n         rdi = rbp                // const char *s // rsp\\n         sym.imp.strchr  ()\\n                                  // char *strchr(\\\"\\\", 0x00000000)\\n         var = rax & rax\\n         r13 = rax\\n         if  (!var) goto loc_0x403f6e // likely\\n         byte [rax] = 0\\n\\n    loc_0x00403f6b: // orphan\\n         byte [rax] = 0\\n         // CODE XREF from sym.conn_set @ 0x403f69(x)\\n         esi = 0x2f               // '/' // int c\\n         rdi = rbp                // const char *s // rsp\\n         sym.imp.strrchr  ()\\n                                  // char *strrchr(\\\"\\\", 0x00000000)\\n         var = r13 & r13\\n         byte [rax] = 0\\n         if  (!var) goto loc_0x403f88 // likely\\n\\n    loc_0x00403f6e: // orphan\\n         // CODE XREF from sym.conn_set @ 0x403f69(x)\\n         esi = 0x2f               // '/' // int c\\n         rdi = rbp                // const char *s // rsp\\n         sym.imp.strrchr  ()\\n                                  // char *strrchr(\\\"\\\", 0x00000000)\\n         var = r13 & r13\\n         byte [rax] = 0\\n         if  (!var) goto loc_0x403f88 // likely\\n         byte [r13] = 0x3f        // '?'\\n                                  // [0x3f:1]=0\\n\\n    loc_0x00403f83: // orphan\\n         byte [r13] = 0x3f        // '?'\\n                                  // [0x3f:1]=0\\n         // CODE XREF from sym.conn_set @ 0x403f81(x)\\n         rsi = rax + 1            // const char *src // (pstr 0x00000000) \\\"?\\\"\\n         rdi = rbx + 0x814        // char *dest\\n         edx = 0x400              // 1024 // size_t  n // (pstr 0x00000000) \\\"?\\\"\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\", \\\"\\\", 0x00000000)\\n         rdi = rbp                // char *s1 // (cstr 0x00000000) \\\"?\\\" rsp\\n         esi = 0x406669           // 'if@' // \\\"/\\\" // const char *s2\\n         rbp = rbx + 0xc14\\n         sym.imp.strcat  ()\\n                                  // char *strcat(\\\"\\\", \\\"/\\\")\\n         esi = 0x40               // elf_phdr // int c // (cstr 0x00000000) \\\"?\\\"\\n         rdi = r12                // const char *s\\n         sym.imp.strrchr  ()\\n                                  // char *strrchr(-1, 0x00000000)\\n         var = rax & rax          // (pstr 0x00000000) \\\"?\\\" // (pstr 0x00000000) \\\"?\\\"\\n         if  (!var) goto loc_0x403ffd // likely\\n\\n    loc_0x00403f88: // orphan\\n         // CODE XREF from sym.conn_set @ 0x403f81(x)\\n         rsi = rax + 1            // const char *src // (pstr 0x00000000) \\\"?\\\"\\n         rdi = rbx + 0x814        // char *dest\\n         edx = 0x400              // 1024 // size_t  n // (pstr 0x00000000) \\\"?\\\"\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\", \\\"\\\", 0x00000000)\\n         rdi = rbp                // char *s1 // (cstr 0x00000000) \\\"?\\\" rsp\\n         esi = 0x406669           // 'if@' // \\\"/\\\" // const char *s2\\n         rbp = rbx + 0xc14\\n         sym.imp.strcat  ()\\n                                  // char *strcat(\\\"\\\", \\\"/\\\")\\n         esi = 0x40               // elf_phdr // int c // (cstr 0x00000000) \\\"?\\\"\\n         rdi = r12                // const char *s\\n         sym.imp.strrchr  ()\\n                                  // char *strrchr(-1, 0x00000000)\\n         var = rax & rax          // (pstr 0x00000000) \\\"?\\\" // (pstr 0x00000000) \\\"?\\\"\\n         if  (!var) goto loc_0x403ffd // likely\\n         edx = 0x400              // 1024 // size_t  n // (pstr 0x00000000) \\\"?\\\"\\n         rsi = r12                // const char *src\\n         rdi = rbp                // char *dest // (cstr 0x00000000) \\\"?\\\" rsp\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\", -1, 0x00000000)\\n         esi = 0x40               // elf_phdr // int c // (cstr 0x00000000) \\\"?\\\"\\n         rdi = rbp                // const char *s // (cstr 0x00000000) \\\"?\\\" rsp\\n         sym.imp.strrchr  ()\\n                                  // char *strrchr(\\\"\\\", 0x00000000)\\n         rsi = rax + 1            // const char *src // (pstr 0x00000000) \\\"?\\\"\\n         byte [rax] = 0\\n         edx = 0x400              // 1024 // size_t  n\\n         rdi = r12                // char *dest\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(-1, \\\"\\\", 0x00000000)\\n         byte [rbx + 0x1014] = 0\\n         goto loc_0x404031\\n\\n    loc_0x00403fc3: // orphan\\n         edx = 0x400              // 1024 // size_t  n // (pstr 0x00000000) \\\"?\\\"\\n         rsi = r12                // const char *src\\n         rdi = rbp                // char *dest // (cstr 0x00000000) \\\"?\\\" rsp\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\", -1, 0x00000000)\\n         esi = 0x40               // elf_phdr // int c // (cstr 0x00000000) \\\"?\\\"\\n         rdi = rbp                // const char *s // (cstr 0x00000000) \\\"?\\\" rsp\\n         sym.imp.strrchr  ()\\n                                  // char *strrchr(\\\"\\\", 0x00000000)\\n         rsi = rax + 1            // const char *src // (pstr 0x00000000) \\\"?\\\"\\n         byte [rax] = 0\\n         edx = 0x400              // 1024 // size_t  n\\n         rdi = r12                // char *dest\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(-1, \\\"\\\", 0x00000000)\\n         byte [rbx + 0x1014] = 0\\n         goto loc_0x404031\\n         // CODE XREF from sym.conn_set @ 0x403fc1(x)\\n         var = dword [rbx + 8] - 1\\n         if  (var) goto loc_0x404023 // unlikely\\n\\n    loc_0x00403ffd: // orphan\\n         // CODE XREF from sym.conn_set @ 0x403fc1(x)\\n         var = dword [rbx + 8] - 1\\n         if  (var) goto loc_0x404023 // unlikely\\n         rdi = rbp                // char *dest // rsp\\n         esi = str.anonymous      // 0x406624 // \\\"anonymous\\\" // const char *src\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(\\\"\\\", \\\"anonymous\\\")\\n         rdi = rbx + 0x1014       // char *dest\\n         esi = str.mailto:axel_devel_lists.alioth.debian.org // 0x40662e // \\\"mailto:axel-devel@lists.alioth.debian.org\\\" // const char *src\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(\\\"\\\", \\\"mailto:axel-devel@lists.alioth.debian.org\\\")\\n         goto loc_0x404031\\n\\n    loc_0x00404003: // orphan\\n         rdi = rbp                // char *dest // rsp\\n         esi = str.anonymous      // 0x406624 // \\\"anonymous\\\" // const char *src\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(\\\"\\\", \\\"anonymous\\\")\\n         rdi = rbx + 0x1014       // char *dest\\n         esi = str.mailto:axel_devel_lists.alioth.debian.org // 0x40662e // \\\"mailto:axel-devel@lists.alioth.debian.org\\\" // const char *src\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(\\\"\\\", \\\"mailto:axel-devel@lists.alioth.debian.org\\\")\\n         goto loc_0x404031\\n         // CODE XREF from sym.conn_set @ 0x404001(x)\\n         byte [rbx + 0x1014] = 0\\n         byte [rbx + 0xc14] = 0\\n\\n    loc_0x00404023: // orphan\\n         // CODE XREF from sym.conn_set @ 0x404001(x)\\n         byte [rbx + 0x1014] = 0\\n         byte [rbx + 0xc14] = 0\\n         // CODE XREFS from sym.conn_set @ 0x403ffb(x), 0x404021(x)\\n         esi = 0x3a               // ':' // int c\\n         rdi = rbp                // const char *s // rsp\\n         sym.imp.strchr  ()\\n                                  // char *strchr(\\\"\\\", 0x00000000)\\n         var = rax & rax\\n         if  (!var) goto loc_0x40405b // likely\\n\\n    loc_0x00404031: // orphan\\n         // CODE XREFS from sym.conn_set @ 0x403ffb(x), 0x404021(x)\\n         esi = 0x3a               // ':' // int c\\n         rdi = rbp                // const char *s // rsp\\n         sym.imp.strchr  ()\\n                                  // char *strchr(\\\"\\\", 0x00000000)\\n         var = rax & rax\\n         if  (!var) goto loc_0x40405b // likely\\n         rsi = rax + 1            // const char *src\\n         rdi = rbx + 0x1014       // char *dest\\n         byte [rax] = 0\\n         edx = 0x400              // 1024 // size_t  n\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\", \\\"\\\", 0x00000000)\\n\\n    loc_0x00404043: // orphan\\n         rsi = rax + 1            // const char *src\\n         rdi = rbx + 0x1014       // char *dest\\n         byte [rax] = 0\\n         edx = 0x400              // 1024 // size_t  n\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\", \\\"\\\", 0x00000000)\\n         // CODE XREF from sym.conn_set @ 0x404041(x)\\n         esi = 0x3a               // ':' // int c\\n         rdi = r12                // const char *s\\n         sym.imp.strchr  ()\\n                                  // char *strchr(-1, 0x00000000)\\n         var = rax & rax\\n         if  (!var) goto loc_0x404086 // likely\\n\\n    loc_0x0040405b: // orphan\\n         // CODE XREF from sym.conn_set @ 0x404041(x)\\n         esi = 0x3a               // ':' // int c\\n         rdi = r12                // const char *s\\n         sym.imp.strchr  ()\\n                                  // char *strchr(-1, 0x00000000)\\n         var = rax & rax\\n         if  (!var) goto loc_0x404086 // likely\\n         rdi = rax + 1            // const char *s\\n         rdx = rbx + 0xc          //   ...\\n         byte [rax] = 0\\n         esi = 0x4066fd           // \\\"%i\\\" // const char *format\\n         eax = 0\\n         sym.imp.__isoc99_sscanf  ()\\n                                  // int sscanf(\\\"\\\", \\\"%i\\\", ?)\\n         goto loc_0x4040c5\\n\\n    loc_0x0040406d: // orphan\\n         rdi = rax + 1            // const char *s\\n         rdx = rbx + 0xc          //   ...\\n         byte [rax] = 0\\n         esi = 0x4066fd           // \\\"%i\\\" // const char *format\\n         eax = 0\\n         sym.imp.__isoc99_sscanf  ()\\n                                  // int sscanf(\\\"\\\", \\\"%i\\\", ?)\\n         goto loc_0x4040c5\\n         // CODE XREF from sym.conn_set @ 0x40406b(x)\\n         var = dword [rbx + 8] - 1\\n         esi = 0x406658           // 'Xf@' // \\\"tcp\\\"\\n         edi = 0x40665c           // '\\\\\\\\f@' // \\\"ftp\\\"\\n         if  (!var) goto loc_0x40409b // likely\\n\\n    loc_0x00404086: // orphan\\n         // CODE XREF from sym.conn_set @ 0x40406b(x)\\n         var = dword [rbx + 8] - 1\\n         esi = 0x406658           // 'Xf@' // \\\"tcp\\\"\\n         edi = 0x40665c           // '\\\\\\\\f@' // \\\"ftp\\\"\\n         if  (!var) goto loc_0x40409b // likely\\n         edi = 0x406660           // '`f@' // \\\"www\\\"\\n\\n    loc_0x00404096: // orphan\\n         edi = 0x406660           // '`f@' // \\\"www\\\"\\n         // CODE XREF from sym.conn_set @ 0x404094(x)\\n         sym.imp.getservbyname  ()\\n         var = rax & rax\\n         if  (!var) goto loc_0x4040b1 // likely\\n\\n    loc_0x0040409b: // orphan\\n         // CODE XREF from sym.conn_set @ 0x404094(x)\\n         sym.imp.getservbyname  ()\\n         var = rax & rax\\n         if  (!var) goto loc_0x4040b1 // likely\\n         eax = dword [rax + 0x10]\\n         ror ax\\n         eax = ax\\n         goto loc_0x4040c2\\n\\n    loc_0x004040a5: // orphan\\n         eax = dword [rax + 0x10]\\n         ror ax\\n         eax = ax\\n         goto loc_0x4040c2\\n         // CODE XREF from sym.conn_set @ 0x4040a3(x)\\n         var = dword [rbx + 8] - 2\\n         edx = 0x50               // 'P'\\n         eax = 0x15\\n         if  (!var) eax = edx\\n\\n    loc_0x004040b1: // orphan\\n         // CODE XREF from sym.conn_set @ 0x4040a3(x)\\n         var = dword [rbx + 8] - 2\\n         edx = 0x50               // 'P'\\n         eax = 0x15\\n         if  (!var) eax = edx\\n         // CODE XREF from sym.conn_set @ 0x4040af(x)\\n         dword [rbx + 0xc] = eax\\n\\n    loc_0x004040c2: // orphan\\n         // CODE XREF from sym.conn_set @ 0x4040af(x)\\n         dword [rbx + 0xc] = eax\\n         // CODE XREF from sym.conn_set @ 0x404084(x)\\n         eax = 0\\n         var = dword [rbx + 0xc] - 0\\n         setg al\\n\\n    loc_0x004040c5: // orphan\\n         // CODE XREF from sym.conn_set @ 0x404084(x)\\n         eax = 0\\n         var = dword [rbx + 0xc] - 0\\n         setg al\\n\\n}\\n\"}\n"