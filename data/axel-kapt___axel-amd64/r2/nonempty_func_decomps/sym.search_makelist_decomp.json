"{\"annotations\":[{\"start\":62,\"end\":62,\"offset\":4216998,\"type\":\"offset\"},{\"start\":107,\"end\":107,\"offset\":4216998,\"type\":\"offset\"},{\"start\":127,\"end\":127,\"offset\":4217000,\"type\":\"offset\"},{\"start\":147,\"end\":147,\"offset\":4217002,\"type\":\"offset\"},{\"start\":186,\"end\":186,\"offset\":4217007,\"type\":\"offset\"},{\"start\":206,\"end\":206,\"offset\":4217009,\"type\":\"offset\"},{\"start\":226,\"end\":226,\"offset\":4217011,\"type\":\"offset\"},{\"start\":256,\"end\":256,\"offset\":4217014,\"type\":\"offset\"},{\"start\":276,\"end\":276,\"offset\":4217015,\"type\":\"offset\"},{\"start\":296,\"end\":296,\"offset\":4217016,\"type\":\"offset\"},{\"start\":312,\"end\":312,\"offset\":4217018,\"type\":\"offset\"},{\"start\":330,\"end\":330,\"offset\":4217020,\"type\":\"offset\"},{\"start\":360,\"end\":360,\"offset\":4217023,\"type\":\"offset\"},{\"start\":382,\"end\":382,\"offset\":4217030,\"type\":\"offset\"},{\"start\":407,\"end\":407,\"offset\":4217035,\"type\":\"offset\"},{\"start\":425,\"end\":425,\"offset\":4217038,\"type\":\"offset\"},{\"start\":458,\"end\":458,\"offset\":4217040,\"type\":\"offset\"},{\"start\":492,\"end\":492,\"offset\":4217047,\"type\":\"offset\"},{\"start\":525,\"end\":525,\"offset\":4217052,\"type\":\"offset\"},{\"start\":541,\"end\":541,\"offset\":4217054,\"type\":\"offset\"},{\"start\":565,\"end\":565,\"offset\":4217059,\"type\":\"offset\"},{\"start\":603,\"end\":603,\"offset\":4217062,\"type\":\"offset\"},{\"start\":641,\"end\":641,\"offset\":4217065,\"type\":\"offset\"},{\"start\":672,\"end\":672,\"offset\":4217071,\"type\":\"offset\"},{\"start\":728,\"end\":728,\"offset\":4217076,\"type\":\"offset\"},{\"start\":752,\"end\":752,\"offset\":4217078,\"type\":\"offset\"},{\"start\":831,\"end\":831,\"offset\":4217088,\"type\":\"offset\"},{\"start\":891,\"end\":891,\"offset\":4217088,\"type\":\"offset\"},{\"start\":929,\"end\":929,\"offset\":4217091,\"type\":\"offset\"},{\"start\":987,\"end\":987,\"offset\":4217096,\"type\":\"offset\"},{\"start\":1011,\"end\":1011,\"offset\":4217098,\"type\":\"offset\"},{\"start\":1076,\"end\":1076,\"offset\":4217100,\"type\":\"offset\"},{\"start\":1114,\"end\":1114,\"offset\":4217103,\"type\":\"offset\"},{\"start\":1162,\"end\":1162,\"offset\":4217108,\"type\":\"offset\"},{\"start\":1186,\"end\":1186,\"offset\":4217110,\"type\":\"offset\"},{\"start\":1251,\"end\":1251,\"offset\":4217112,\"type\":\"offset\"},{\"start\":1292,\"end\":1292,\"offset\":4217115,\"type\":\"offset\"},{\"start\":1328,\"end\":1328,\"offset\":4217118,\"type\":\"offset\"},{\"start\":1355,\"end\":1355,\"offset\":4217118,\"type\":\"offset\"},{\"start\":1387,\"end\":1387,\"offset\":4217123,\"type\":\"offset\"},{\"start\":1403,\"end\":1403,\"offset\":4217125,\"type\":\"offset\"},{\"start\":1427,\"end\":1427,\"offset\":4217130,\"type\":\"offset\"},{\"start\":1460,\"end\":1460,\"offset\":4217136,\"type\":\"offset\"},{\"start\":1494,\"end\":1494,\"offset\":4217144,\"type\":\"offset\"},{\"start\":1531,\"end\":1531,\"offset\":4217149,\"type\":\"offset\"},{\"start\":1565,\"end\":1565,\"offset\":4217156,\"type\":\"offset\"},{\"start\":1593,\"end\":1593,\"offset\":4217161,\"type\":\"offset\"},{\"start\":1617,\"end\":1617,\"offset\":4217169,\"type\":\"offset\"},{\"start\":1654,\"end\":1654,\"offset\":4217177,\"type\":\"offset\"},{\"start\":1680,\"end\":1680,\"offset\":4217181,\"type\":\"offset\"},{\"start\":1714,\"end\":1714,\"offset\":4217188,\"type\":\"offset\"},{\"start\":1741,\"end\":1741,\"offset\":4217188,\"type\":\"offset\"},{\"start\":1770,\"end\":1770,\"offset\":4217193,\"type\":\"offset\"},{\"start\":1788,\"end\":1788,\"offset\":4217196,\"type\":\"offset\"},{\"start\":1822,\"end\":1822,\"offset\":4217203,\"type\":\"offset\"},{\"start\":1850,\"end\":1850,\"offset\":4217208,\"type\":\"offset\"},{\"start\":1876,\"end\":1876,\"offset\":4217215,\"type\":\"offset\"},{\"start\":2106,\"end\":2106,\"offset\":4217220,\"type\":\"offset\"},{\"start\":2139,\"end\":2139,\"offset\":4217223,\"type\":\"offset\"},{\"start\":2173,\"end\":2173,\"offset\":4217229,\"type\":\"offset\"},{\"start\":2189,\"end\":2189,\"offset\":4217232,\"type\":\"offset\"},{\"start\":2205,\"end\":2205,\"offset\":4217234,\"type\":\"offset\"},{\"start\":2233,\"end\":2233,\"offset\":4217234,\"type\":\"offset\"},{\"start\":2363,\"end\":2363,\"offset\":4217239,\"type\":\"offset\"},{\"start\":2401,\"end\":2401,\"offset\":4217242,\"type\":\"offset\"},{\"start\":2461,\"end\":2461,\"offset\":4217247,\"type\":\"offset\"},{\"start\":2490,\"end\":2490,\"offset\":4217249,\"type\":\"offset\"},{\"start\":2529,\"end\":2529,\"offset\":4217254,\"type\":\"offset\"},{\"start\":2547,\"end\":2547,\"offset\":4217257,\"type\":\"offset\"},{\"start\":2592,\"end\":2592,\"offset\":4217259,\"type\":\"offset\"},{\"start\":2626,\"end\":2626,\"offset\":4217266,\"type\":\"offset\"},{\"start\":2664,\"end\":2664,\"offset\":4217269,\"type\":\"offset\"},{\"start\":2702,\"end\":2702,\"offset\":4217272,\"type\":\"offset\"},{\"start\":2732,\"end\":2732,\"offset\":4217277,\"type\":\"offset\"},{\"start\":2783,\"end\":2783,\"offset\":4217282,\"type\":\"offset\"},{\"start\":2807,\"end\":2807,\"offset\":4217284,\"type\":\"offset\"},{\"start\":2885,\"end\":2885,\"offset\":4217474,\"type\":\"offset\"},{\"start\":2972,\"end\":2972,\"offset\":4217474,\"type\":\"offset\"},{\"start\":3007,\"end\":3007,\"offset\":4217477,\"type\":\"offset\"},{\"start\":3032,\"end\":3032,\"offset\":4217477,\"type\":\"offset\"},{\"start\":3057,\"end\":3057,\"offset\":4217482,\"type\":\"offset\"},{\"start\":3073,\"end\":3073,\"offset\":4217487,\"type\":\"offset\"},{\"start\":3134,\"end\":3134,\"offset\":4217800,\"type\":\"offset\"},{\"start\":3221,\"end\":3221,\"offset\":4217800,\"type\":\"offset\"},{\"start\":3243,\"end\":3243,\"offset\":4217807,\"type\":\"offset\"},{\"start\":3265,\"end\":3265,\"offset\":4217808,\"type\":\"offset\"},{\"start\":3287,\"end\":3287,\"offset\":4217809,\"type\":\"offset\"},{\"start\":3309,\"end\":3309,\"offset\":4217811,\"type\":\"offset\"},{\"start\":3331,\"end\":3331,\"offset\":4217813,\"type\":\"offset\"},{\"start\":3353,\"end\":3353,\"offset\":4217815,\"type\":\"offset\"},{\"start\":3375,\"end\":3375,\"offset\":4217817,\"type\":\"offset\"},{\"start\":3491,\"end\":3729,\"offset\":4217817,\"type\":\"offset\"},{\"start\":3998,\"end\":4038,\"offset\":4217817,\"type\":\"offset\"},{\"start\":4109,\"end\":4613,\"offset\":4217817,\"type\":\"offset\"},{\"start\":5148,\"end\":5263,\"offset\":4217817,\"type\":\"offset\"},{\"start\":5409,\"end\":5907,\"offset\":4217817,\"type\":\"offset\"},{\"start\":6436,\"end\":7377,\"offset\":4217817,\"type\":\"offset\"},{\"start\":8349,\"end\":8538,\"offset\":4217817,\"type\":\"offset\"},{\"start\":8758,\"end\":8836,\"offset\":4217817,\"type\":\"offset\"},{\"start\":8945,\"end\":9354,\"offset\":4217817,\"type\":\"offset\"},{\"start\":9794,\"end\":9975,\"offset\":4217817,\"type\":\"offset\"},{\"start\":10187,\"end\":10259,\"offset\":4217817,\"type\":\"offset\"},{\"start\":10362,\"end\":10568,\"offset\":4217817,\"type\":\"offset\"},{\"start\":10805,\"end\":10954,\"offset\":4217817,\"type\":\"offset\"},{\"start\":11134,\"end\":11174,\"offset\":4217817,\"type\":\"offset\"},{\"start\":11245,\"end\":11847,\"offset\":4217817,\"type\":\"offset\"},{\"start\":12480,\"end\":12969,\"offset\":4217817,\"type\":\"offset\"},{\"start\":13489,\"end\":13666,\"offset\":4217817,\"type\":\"offset\"},{\"start\":13874,\"end\":13888,\"offset\":4217817,\"type\":\"offset\"},{\"start\":13933,\"end\":14346,\"offset\":4217817,\"type\":\"offset\"},{\"start\":14790,\"end\":15057,\"offset\":4217817,\"type\":\"offset\"},{\"start\":15355,\"end\":15519,\"offset\":4217817,\"type\":\"offset\"},{\"start\":15714,\"end\":15741,\"offset\":4217817,\"type\":\"offset\"},{\"start\":15799,\"end\":15904,\"offset\":4217817,\"type\":\"offset\"},{\"start\":16040,\"end\":16142,\"offset\":4217817,\"type\":\"offset\"}],\"code\":\"int sym.search_makelist (int esi, int edx) {\\n    loc_0x4058a6:\\n        // CALL XREF from main @ 0x401b8b(x)\\n        push  (r15)\\n        push  (r14)\\n        ecx = 0xc2a   // '*\\\\f' // 3114\\n        push  (r13)\\n        push  (r12)\\n        r13 = rdi     // arg1\\n        push  (rbp)\\n        push  (rbx)\\n        ebp = 0\\n        eax = ebp\\n        r12 = rsi     // arg2\\n        rsp -= 0x30c8\\n        rbx = rsp + 0x18\\n        rdi = rbx\\n        rep stosd dword [rdi],ax\\n        rax = qword [r13 + 0x418]\\n        qword [rsp + 0x18] = rax\\n        eax = 0\\n        sym.gettime  ()\\n        rsi = r12     // int64_t arg2\\n        rdi = rbx     // int64_t arg1\\n        qword [rsp + 8] = xmm0\\n        sym.conn_set  () // sym.conn_set(0x174f20, 0x0)\\n        var = eax & eax\\n        if  (var) goto loc_0x405900 // unlikely\\n            \\n    loc_0x405900:\\n        // CODE XREF from sym.search_makelist @ 0x4058f6(x)\\n        rdi = rbx     // int64_t arg1\\n        sym.conn_init  () // sym.conn_init(0x0, 0x0, 0x0)\\n        var = eax & eax\\n        if  (!var) goto loc_0x4058f8 // likely\\n    loc_0x40590c:\\n        rdi = rbx     // int64_t arg1\\n        sym.conn_info  () // sym.conn_info(0x0)\\n        var = eax & eax\\n        if  (!var) goto loc_0x4058f8 // likely\\n    loc_0x405918:\\n        rsi = r12     // const char *src\\n        rdi = r13     // char *dest\\n        sym.imp.strcpy  ()\\n        // char *strcpy(-1, -1)\\n        eax = 0\\n        sym.gettime  ()\\n        subsd xmm0,word [var_8h]\\n        r8 = qword [rsp + 0x3078]\\n        edi = 0x2000  // size_t size\\n        dword [r13 + 0x40c] = r8d\\n        qword [var_8h] = r8\\n        mulsd xmm0,xmm0\\n        addsd xmm0,word [0x00406a18]\\n        cvttsd2si edx,mm0\\n        dword [r13 + 0x408] = edx\\n        sym.imp.malloc  ()\\n        //  void *malloc(-1)\\n        r12 = rax\\n        rax = qword [r13 + 0x418]\\n        r8 = qword [var_8h]\\n        rdx = rbx + 0x814\\n        esi = str.http:__www.filesearching.com_cgi_bin_s_q_swalentfeonm_ions1_llds2_lldx15y15 // 0x40698d // \\\"http://www.filesearching.com/cgi-bin/s?q=%s&w=a&l=en&t=f&e=on&m=%i&o=n&s1=%lld&s2=%lld&x=15&y=15\\\" // const char *format\\n        rdi = r12     // char *s\\n        ecx = dword [rax + 0xc38]\\n        r9 = r8\\n        eax = 0\\n        sym.imp.sprintf  ()\\n        // int sprintf(-1, \\\"http://www.filesearching.com/cgi-bin/s?q=%s&w=a&l=en&t=f&e=on&m=%i&o=n&s1=%lld&s2=%lld&x=15&y=15\\\", ?)\\n        rdi = rbx     // int64_t arg1\\n        sym.conn_disconnect  () // sym.conn_disconnect(0x0)\\n        eax = ebp     // rsp\\n        ecx = 0xc2a   // '*\\\\f' // 3114\\n        rdi = rbx\\n        rep stosd dword [rdi],ax // elf_phdr\\n        rax = qword [r13 + 0x418]\\n        rsi = r12     // int64_t arg2\\n        rdi = rbx     // int64_t arg1\\n        qword [var_18h] = rax\\n        sym.conn_set  () // sym.conn_set(0x0, 0x0)\\n        var = eax & eax\\n        if  (!var) goto loc_0x405a82 // likely\\n            \\n    loc_0x405a82:\\n        // CODE XREFS from sym.search_makelist @ 0x4059c4(x), 0x4059d4(x), 0x4059e4(x)\\n        rdi = r12     // void *ptr\\n        sym.imp.free  ()\\n        // void free(-1)\\n        eax = 1\\n        goto loc_0x405bc8\\n         // do {\\n    loc_0x405bc8:\\n        // CODE XREFS from sym.search_makelist @ 0x4058fb(x), 0x405a8f(x), 0x405ba8(x)\\n        rsp += 0x30c8\\n        rbx = pop  ()\\n        rbp = pop  ()\\n        r12 = pop  ()\\n        r13 = pop  ()\\n        r14 = pop  ()\\n        r15 = pop  ()\\n        re\\n         // } while (?);\\n         // } while (?);\\n         // } while (?);\\n        }\\n        return eax;             rdi = rbx                // int64_t arg1\\n             sym.conn_exec  ()        // sym.conn_exec(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1)\\n             var = eax & eax\\n             if  (!var) goto loc_0x405a82 // likely\\n\\n    loc_0x004059da: // orphan\\n             rdi = rbx                // int64_t arg1\\n             sym.conn_exec  ()        // sym.conn_exec(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1)\\n             var = eax & eax\\n             if  (!var) goto loc_0x405a82 // likely\\n         r15d = 0\\n         ebp = 0x2000\\n\\n    loc_0x004059ea: // orphan\\n         r15d = 0\\n         ebp = 0x2000\\n         // CODE XREFS from sym.search_makelist @ 0x405a19(x), 0x405a3f(x)\\n         edx = ebp                // rsp\\n         edi = dword [rsp + 0x3090] // int fildes\\n         rsi = r15d\\n         edx -= r15d              // rsp\\n         rsi += r12               // void *buf\\n         rdx = edx                // size_t nbyte // rsp\\n         sym.imp.read  ()\\n                                  // ssize_t read(-1, -1, 0x00000000)\\n         var = eax & eax\\n         if  (var <= 0) goto loc_0x405a41 // likely\\n\\n    loc_0x004059f2: // orphan\\n         // CODE XREFS from sym.search_makelist @ 0x405a19(x), 0x405a3f(x)\\n         edx = ebp                // rsp\\n         edi = dword [rsp + 0x3090] // int fildes\\n         rsi = r15d\\n         edx -= r15d              // rsp\\n         rsi += r12               // void *buf\\n         rdx = edx                // size_t nbyte // rsp\\n         sym.imp.read  ()\\n                                  // ssize_t read(-1, -1, 0x00000000)\\n         var = eax & eax\\n         if  (var <= 0) goto loc_0x405a41 // likely\\n         r15d += eax\\n         eax = r15 + 0xa\\n         var = eax - ebp\\n         jl 0x4059f2              // likely\\n\\n    loc_0x00405a10: // orphan\\n         r15d += eax\\n         eax = r15 + 0xa\\n         var = eax - ebp\\n         jl 0x4059f2              // likely\\n         r14d = rbp + rbp\\n         rdi = r12                // void *ptr\\n         rsi = r14d               // size_t size\\n         sym.imp.realloc  ()\\n                                  // void *realloc(-1, -1)\\n         rcx = ebp                // rsp\\n         r12 = rax\\n         ebp = r14d\\n         rsi = rax + rcx          // rsp\\n         eax = 0\\n         rdi = rsi                // rsp\\n         rep stosb byte [rdi],l   // \\\"Z@\\\" // \\\"Y@\\\" // \\\"Y@\\\" // \\\"J@\\\" // \\\"^@\\\" // \\\"_@\\\"\\n         goto loc_0x4059f2\\n\\n    loc_0x00405a1b: // orphan\\n         r14d = rbp + rbp\\n         rdi = r12                // void *ptr\\n         rsi = r14d               // size_t size\\n         sym.imp.realloc  ()\\n                                  // void *realloc(-1, -1)\\n         rcx = ebp                // rsp\\n         r12 = rax\\n         ebp = r14d\\n         rsi = rax + rcx          // rsp\\n         eax = 0\\n         rdi = rsi                // rsp\\n         rep stosb byte [rdi],l   // \\\"Z@\\\" // \\\"Y@\\\" // \\\"Y@\\\" // \\\"J@\\\" // \\\"^@\\\" // \\\"_@\\\"\\n         goto loc_0x4059f2\\n         // CODE XREF from sym.search_makelist @ 0x405a0e(x)\\n         rdi = rbx                // int64_t arg1\\n         ebp = 1\\n         sym.conn_disconnect  ()  // sym.conn_disconnect(0x0)\\n         esi = str._pre_classlist // 0x4069ee // \\\"<pre class=list\\\" // const char *s2\\n         rdi = r12                // const char *s1\\n         sym.imp.strstr  ()\\n                                  // char *strstr(-1, \\\"<pre class=list\\\")\\n         esi = 0xa                // int c\\n         rdi = rax                // const char *s\\n         sym.imp.strchr  ()\\n                                  // char *strchr(-1, 0x80000017)\\n         rbx = rax + 1\\n         esi = str.__pre_         // 0x4069fe // \\\"</pre>\\\" // const char *s2\\n         rdi = rbx                // const char *s1\\n         sym.imp.strstr  ()\\n                                  // char *strstr(\\\"\\\\x80\\\\x17\\\", \\\"</pre>\\\")\\n         var = rax & rax\\n         if  (var) goto loc_0x405b84 // unlikely\\n\\n    loc_0x00405a41: // orphan\\n         // CODE XREF from sym.search_makelist @ 0x405a0e(x)\\n         rdi = rbx                // int64_t arg1\\n         ebp = 1\\n         sym.conn_disconnect  ()  // sym.conn_disconnect(0x0)\\n         esi = str._pre_classlist // 0x4069ee // \\\"<pre class=list\\\" // const char *s2\\n         rdi = r12                // const char *s1\\n         sym.imp.strstr  ()\\n                                  // char *strstr(-1, \\\"<pre class=list\\\")\\n         esi = 0xa                // int c\\n         rdi = rax                // const char *s\\n         sym.imp.strchr  ()\\n                                  // char *strchr(-1, 0x80000017)\\n         rbx = rax + 1\\n         esi = str.__pre_         // 0x4069fe // \\\"</pre>\\\" // const char *s2\\n         rdi = rbx                // const char *s1\\n         sym.imp.strstr  ()\\n                                  // char *strstr(\\\"\\\\x80\\\\x17\\\", \\\"</pre>\\\")\\n         var = rax & rax\\n         if  (var) goto loc_0x405b84 // unlikely\\n         // CODE XREF from sym.search_makelist @ 0x405b98(x)\\n         rax = qword [r13 + 0x418]\\n         var = ebp - dword [rax + 0xc38]\\n         if  (var >= 0) goto loc_0x405b9e // likely\\n\\n    loc_0x00405a94: // orphan\\n         // CODE XREF from sym.search_makelist @ 0x405b98(x)\\n         rax = qword [r13 + 0x418]\\n         var = ebp - dword [rax + 0xc38]\\n         if  (var >= 0) goto loc_0x405b9e // likely\\n         var = byte [rbx] - 0\\n         if  (!var) goto loc_0x405b9e // likely\\n\\n    loc_0x00405aa7: // orphan\\n         var = byte [rbx] - 0\\n         if  (!var) goto loc_0x405b9e // likely\\n         esi = 0xa                // int c\\n         rdi = rbx                // const char *s\\n         sym.imp.strchr  ()\\n                                  // char *strchr(-1, 0x80000017)\\n         rcx |= 0xffffffffffffffff\\n         byte [rax] = 0\\n         rsi = rax\\n         rdi = rbx\\n         eax = 0\\n         repne scasb al,yte [rdi]\\n         eax = 0\\n         rcx = !rcx\\n         ecx -= 9\\n         r9 = ecx\\n\\n    loc_0x00405ab0: // orphan\\n         esi = 0xa                // int c\\n         rdi = rbx                // const char *s\\n         sym.imp.strchr  ()\\n                                  // char *strchr(-1, 0x80000017)\\n         rcx |= 0xffffffffffffffff\\n         byte [rax] = 0\\n         rsi = rax\\n         rdi = rbx\\n         eax = 0\\n         repne scasb al,yte [rdi]\\n         eax = 0\\n         rcx = !rcx\\n         ecx -= 9\\n         r9 = ecx\\n         // CODE XREF from sym.search_makelist @ 0x405b09(x)\\n         r14d = ecx\\n         r14d -= eax\\n         var = r14d & r14d\\n         if  (var <= 0) goto loc_0x405bbd // likely\\n\\n    loc_0x00405ad9: // orphan\\n         // CODE XREF from sym.search_makelist @ 0x405b09(x)\\n         r14d = ecx\\n         r14d -= eax\\n         var = r14d & r14d\\n         if  (var <= 0) goto loc_0x405bbd // likely\\n         r8 = r9\\n         edx = 0\\n         r8 -= rax\\n         r8 += rbx\\n\\n    loc_0x00405ae8: // orphan\\n         r8 = r9\\n         edx = 0\\n         r8 -= rax\\n         r8 += rbx\\n         // CODE XREF from sym.search_makelist @ 0x405bb2(x)\\n         dil = byte [rdx + str._a_href] // [0x406a05:1]=60 // \\\"<a href=\\\"\\n         var = dil & dil\\n         if  (var) goto loc_0x405baa // likely\\n\\n    loc_0x00405af3: // orphan\\n         // CODE XREF from sym.search_makelist @ 0x405bb2(x)\\n         dil = byte [rdx + str._a_href] // [0x406a05:1]=60 // \\\"<a href=\\\"\\n         var = dil & dil\\n         if  (var) goto loc_0x405baa // likely\\n         // CODE XREF from sym.search_makelist @ 0x405bb8(x)\\n         rax+\\n         var = dil & dil\\n         if  (var) goto loc_0x405ad9 // unlikely\\n\\n    loc_0x00405b03: // orphan\\n         // CODE XREF from sym.search_makelist @ 0x405bb8(x)\\n         rax+\\n         var = dil & dil\\n         if  (var) goto loc_0x405ad9 // unlikely\\n         r14 = r14d\\n         rbx += r14\\n\\n    loc_0x00405b0b: // orphan\\n         r14 = r14d\\n         rbx += r14\\n         // CODE XREF from sym.search_makelist @ 0x405bbf(x)\\n         r14 = rbx + 8\\n         byte [rsi] = 0xa\\n         esi = 0x20               // int c\\n         rdi = r14                // const char *s\\n         sym.imp.strchr  ()\\n                                  // char *strchr(\\\"\\\", 0x00178000)\\n         rsi = r14                // const char *s2\\n         byte [rax] = 0\\n         rdi = r13                // const char *s1\\n         rbx = rax\\n         sym.imp.strcmp  ()\\n                                  // int strcmp(-1, \\\"\\\")\\n         var = eax & eax\\n         if  (!var) goto loc_0x405bc4 // likely\\n\\n    loc_0x00405b11: // orphan\\n         // CODE XREF from sym.search_makelist @ 0x405bbf(x)\\n         r14 = rbx + 8\\n         byte [rsi] = 0xa\\n         esi = 0x20               // int c\\n         rdi = r14                // const char *s\\n         sym.imp.strchr  ()\\n                                  // char *strchr(\\\"\\\", 0x00178000)\\n         rsi = r14                // const char *s2\\n         byte [rax] = 0\\n         rdi = r13                // const char *s1\\n         rbx = rax\\n         sym.imp.strcmp  ()\\n                                  // int strcmp(-1, \\\"\\\")\\n         var = eax & eax\\n         if  (!var) goto loc_0x405bc4 // likely\\n         rcx = ebp                // rsp\\n         edx = 0x400              // 1024 // size_t  n\\n         rsi = r14                // const char *src\\n         rcx = rcx * 0x420\\n         r15 = r13 + rcx\\n         rdi = r15                // char *dest\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\", -1, 0x00000000)\\n         eax = dword [r13 + 0x40c]\\n         dword [r15 + 0x40c] = eax\\n         rax = qword [r13 + 0x418]\\n         qword [r15 + 0x418] = rax\\n\\n    loc_0x00405b3e: // orphan\\n         rcx = ebp                // rsp\\n         edx = 0x400              // 1024 // size_t  n\\n         rsi = r14                // const char *src\\n         rcx = rcx * 0x420\\n         r15 = r13 + rcx\\n         rdi = r15                // char *dest\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\", -1, 0x00000000)\\n         eax = dword [r13 + 0x40c]\\n         dword [r15 + 0x40c] = eax\\n         rax = qword [r13 + 0x418]\\n         qword [r15 + 0x418] = rax\\n         // CODE XREFS from sym.search_makelist @ 0x405b80(x), 0x405bc6(x)\\n         var = byte [rbx] - 0xa\\n         rbx = rbx + 1\\n         if  (var) goto loc_0x405b79 // likely\\n\\n    loc_0x00405b79: // orphan\\n         // CODE XREFS from sym.search_makelist @ 0x405b80(x), 0x405bc6(x)\\n         var = byte [rbx] - 0xa\\n         rbx = rbx + 1\\n         if  (var) goto loc_0x405b79 // likely\\n         ebp+\\n\\n    loc_0x00405b82: // orphan\\n         ebp+\\n         // CODE XREF from sym.search_makelist @ 0x405a7c(x)\\n         edx = 6                  // size_t n\\n         esi = str.__pre_         // 0x4069fe // \\\"</pre>\\\" // const char *s2\\n         rdi = rbx                // const char *s1\\n         sym.imp.strncmp  ()\\n                                  // int strncmp(-1, \\\"</pre>\\\", 0x80000017)\\n         var = eax & eax\\n         if  (var) goto loc_0x405a94 // unlikely\\n\\n    loc_0x00405b84: // orphan\\n         // CODE XREF from sym.search_makelist @ 0x405a7c(x)\\n         edx = 6                  // size_t n\\n         esi = str.__pre_         // 0x4069fe // \\\"</pre>\\\" // const char *s2\\n         rdi = rbx                // const char *s1\\n         sym.imp.strncmp  ()\\n                                  // int strncmp(-1, \\\"</pre>\\\", 0x80000017)\\n         var = eax & eax\\n         if  (var) goto loc_0x405a94 // unlikely\\n         // CODE XREFS from sym.search_makelist @ 0x405aa1(x), 0x405aaa(x)\\n         rdi = r12                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         eax = ebp                // rsp\\n         goto loc_0x405bc8\\n\\n    loc_0x00405b9e: // orphan\\n         // CODE XREFS from sym.search_makelist @ 0x405aa1(x), 0x405aaa(x)\\n         rdi = r12                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         eax = ebp                // rsp\\n         goto loc_0x405bc8\\n         // CODE XREF from sym.search_makelist @ 0x405afd(x)\\n         rdx+\\n         var = byte [r8 + rdx - 1] - dil\\n         if  (!var) goto loc_0x405af3 // likely\\n\\n    loc_0x00405baa: // orphan\\n         // CODE XREF from sym.search_makelist @ 0x405afd(x)\\n         rdx+\\n         var = byte [r8 + rdx - 1] - dil\\n         if  (!var) goto loc_0x405af3 // likely\\n         goto loc_0x405b03\\n\\n    loc_0x00405bb8: // orphan\\n         goto loc_0x405b03\\n         // CODE XREF from sym.search_makelist @ 0x405ae2(x)\\n         ebx = 0\\n         goto loc_0x405b11\\n\\n    loc_0x00405bbd: // orphan\\n         // CODE XREF from sym.search_makelist @ 0x405ae2(x)\\n         ebx = 0\\n         goto loc_0x405b11\\n         // CODE XREF from sym.search_makelist @ 0x405b38(x)\\n         ebp-\\n         goto loc_0x405b79\\n\\n    loc_0x00405bc4: // orphan\\n         // CODE XREF from sym.search_makelist @ 0x405b38(x)\\n         ebp-\\n         goto loc_0x405b79\\n\\n}\\n\"}\n"