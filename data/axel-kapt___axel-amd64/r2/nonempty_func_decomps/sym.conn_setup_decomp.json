"{\"annotations\":[{\"start\":57,\"end\":57,\"offset\":4211487,\"type\":\"offset\"},{\"start\":114,\"end\":114,\"offset\":4211487,\"type\":\"offset\"},{\"start\":168,\"end\":168,\"offset\":4211487,\"type\":\"offset\"},{\"start\":228,\"end\":228,\"offset\":4211487,\"type\":\"offset\"},{\"start\":248,\"end\":248,\"offset\":4211489,\"type\":\"offset\"},{\"start\":268,\"end\":268,\"offset\":4211490,\"type\":\"offset\"},{\"start\":288,\"end\":288,\"offset\":4211491,\"type\":\"offset\"},{\"start\":318,\"end\":318,\"offset\":4211494,\"type\":\"offset\"},{\"start\":339,\"end\":339,\"offset\":4211501,\"type\":\"offset\"},{\"start\":386,\"end\":386,\"offset\":4211508,\"type\":\"offset\"},{\"start\":468,\"end\":468,\"offset\":4211524,\"type\":\"offset\"},{\"start\":523,\"end\":523,\"offset\":4211524,\"type\":\"offset\"},{\"start\":570,\"end\":570,\"offset\":4211531,\"type\":\"offset\"},{\"start\":640,\"end\":640,\"offset\":4211533,\"type\":\"offset\"},{\"start\":698,\"end\":698,\"offset\":4211538,\"type\":\"offset\"},{\"start\":722,\"end\":722,\"offset\":4211540,\"type\":\"offset\"},{\"start\":788,\"end\":788,\"offset\":4211542,\"type\":\"offset\"},{\"start\":843,\"end\":843,\"offset\":4211542,\"type\":\"offset\"},{\"start\":859,\"end\":859,\"offset\":4211544,\"type\":\"offset\"},{\"start\":920,\"end\":920,\"offset\":4211821,\"type\":\"offset\"},{\"start\":1015,\"end\":1015,\"offset\":4211821,\"type\":\"offset\"},{\"start\":1036,\"end\":1036,\"offset\":4211828,\"type\":\"offset\"},{\"start\":1065,\"end\":1065,\"offset\":4211830,\"type\":\"offset\"},{\"start\":1087,\"end\":1087,\"offset\":4211831,\"type\":\"offset\"},{\"start\":1109,\"end\":1109,\"offset\":4211832,\"type\":\"offset\"},{\"start\":1131,\"end\":1131,\"offset\":4211834,\"type\":\"offset\"},{\"start\":1266,\"end\":1266,\"offset\":4211522,\"type\":\"offset\"},{\"start\":1327,\"end\":1327,\"offset\":4211549,\"type\":\"offset\"},{\"start\":1382,\"end\":1382,\"offset\":4211549,\"type\":\"offset\"},{\"start\":1419,\"end\":1419,\"offset\":4211553,\"type\":\"offset\"},{\"start\":1540,\"end\":1540,\"offset\":4211555,\"type\":\"offset\"},{\"start\":1567,\"end\":1567,\"offset\":4211562,\"type\":\"offset\"},{\"start\":1612,\"end\":1612,\"offset\":4211565,\"type\":\"offset\"},{\"start\":1661,\"end\":1661,\"offset\":4211570,\"type\":\"offset\"},{\"start\":1685,\"end\":1685,\"offset\":4211572,\"type\":\"offset\"},{\"start\":1750,\"end\":1750,\"offset\":4211574,\"type\":\"offset\"},{\"start\":1785,\"end\":1785,\"offset\":4211581,\"type\":\"offset\"},{\"start\":1820,\"end\":1820,\"offset\":4211587,\"type\":\"offset\"},{\"start\":1844,\"end\":1844,\"offset\":4211590,\"type\":\"offset\"},{\"start\":1879,\"end\":1879,\"offset\":4211596,\"type\":\"offset\"},{\"start\":1944,\"end\":1944,\"offset\":4211602,\"type\":\"offset\"},{\"start\":2015,\"end\":2015,\"offset\":4211607,\"type\":\"offset\"},{\"start\":2053,\"end\":2053,\"offset\":4211610,\"type\":\"offset\"},{\"start\":2069,\"end\":2069,\"offset\":4211612,\"type\":\"offset\"},{\"start\":2179,\"end\":2179,\"offset\":4211617,\"type\":\"offset\"},{\"start\":2215,\"end\":2215,\"offset\":4211620,\"type\":\"offset\"},{\"start\":2271,\"end\":2271,\"offset\":4211625,\"type\":\"offset\"},{\"start\":2292,\"end\":2292,\"offset\":4211630,\"type\":\"offset\"},{\"start\":2317,\"end\":2317,\"offset\":4211633,\"type\":\"offset\"},{\"start\":2397,\"end\":2397,\"offset\":4211639,\"type\":\"offset\"},{\"start\":2432,\"end\":2432,\"offset\":4211645,\"type\":\"offset\"},{\"start\":2448,\"end\":2448,\"offset\":4211647,\"type\":\"offset\"},{\"start\":2468,\"end\":2468,\"offset\":4211652,\"type\":\"offset\"},{\"start\":2493,\"end\":2493,\"offset\":4211655,\"type\":\"offset\"},{\"start\":2511,\"end\":2511,\"offset\":4211659,\"type\":\"offset\"},{\"start\":2537,\"end\":3805,\"offset\":4211659,\"type\":\"offset\"},{\"start\":5104,\"end\":5280,\"offset\":4211659,\"type\":\"offset\"},{\"start\":5487,\"end\":5892,\"offset\":4211659,\"type\":\"offset\"},{\"start\":6328,\"end\":6401,\"offset\":4211659,\"type\":\"offset\"}],\"code\":\"int sym.conn_setup (int esi, int edx) {\\n    loc_0x40431f:\\n        // CALL XREF from sym.setup_thread @ 0x402fd7(x)\\n        // CALL XREF from sym.conn_info @ 0x4046b1(x)\\n        // CALL XREF from sym.search_makelist @ 0x4059cd(x)\\n        push  (r12)\\n        push  (rbp)\\n        push  (rbx)\\n        rbx = rdi     // arg1\\n        rsp -= 0x400\\n        var = dword [rdi + 0x1824] - 0 // arg1\\n        if  (var <= 0) goto loc_0x404344 // likely\\n            \\n    loc_0x404344:\\n        // CODE XREF from sym.conn_setup @ 0x404334(x)\\n        var = dword [rdi + 0x3054] - 0 // arg1\\n        if  (var > 0) goto loc_0x404336 // unlikely\\n    loc_0x40434d:\\n        sym.conn_init  () // sym.conn_init(0x0, 0x0, 0x0)\\n        var = eax & eax\\n        if  (var) goto loc_0x404336 // unlikely\\n    loc_0x404356:\\n        // CODE XREF from sym.conn_setup @ 0x404374(x)\\n        ebp = 0\\n        goto loc_0x40446d\\n         // do {\\n    loc_0x40446d:\\n        // CODE XREFS from sym.conn_setup @ 0x404358(x), 0x40438c(x), 0x4043b1(x), 0x4043cb(x)\\n        rsp += 0x400\\n        eax = ebp     // rsp\\n        rbx = pop  ()\\n        rbp = pop  ()\\n        r12 = pop  ()\\n        re\\n         // } while (?);\\n         // } while (?);\\n        }\\n        return eax;\\n        goto loc_0x404336\\n    loc_0x404342:\\n        goto loc_0x40435d\\n         // do {\\n    loc_0x40435d:\\n        // CODE XREF from sym.conn_setup @ 0x404342(x)\\n        var = dword [rbx + 0x10] - 0\\n        if  (var) goto loc_0x4043d0 // unlikely\\n         // } while (?);\\n        }\\n        return eax;\\n    loc_0x404363:\\n        r12 = rbx + 0x1418\\n        rdi = r12     // signed int64_t arg1\\n        sym.ftp_data  () // sym.ftp_data(0x1418)\\n        var = eax & eax\\n        if  (!var) goto loc_0x404356 // likely\\n    loc_0x404376:\\n        rdx = qword [rbx + 0x3068]\\n        eax = dword [rbx + 0x1828]\\n        var = rdx & rdx\\n        dword [rbx + 0x3078] = eax\\n        if  (!var) goto loc_0x40446d // likely\\n    loc_0x404392:\\n        esi = str.REST__lld // 0x406684 // \\\"REST %lld\\\" // int64_t arg2\\n        rdi = r12     // int64_t arg1\\n        eax = 0\\n        sym.ftp_command  () // sym.ftp_command(0x0, 0x406684, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n        rdi = r12     // void **ptr\\n        sym.ftp_wait  () // sym.ftp_wait(0x0, 0x406684)\\n        eax -= 0x12c\\n        var = eax - 0x63\\n        if  (((unsigned) var) <= 0) goto 0x40446d // unlikely\\n    loc_0x4043b7:\\n        eax = dword [rbx + 0x1820]\\n        ebp = 0\\n        eax -= 0xc8\\n        var = eax - 0x63\\n        setbe bpl\\n        goto loc_0x40446d             // CODE XREFS from sym.conn_setup @ 0x40433c(x), 0x404361(x)\\n             rcx = rbx + 0x414        //  ...\\n             r8 = rbx + 0x814\\n             edx = 0x40667f           // '\\\\x7ff@' // \\\"%s%s\\\" // const char *format\\n             esi = 0x400              // 1024 // size_t size\\n             rdi = rsp                // char *s\\n             eax = 0\\n             sym.imp.snprintf  ()\\n                                      // int snprintf(\\\"\\\", -1, \\\"%s%s\\\", ?)\\n             rax = qword [rbx + 0x3068]\\n             r12 = rbx + 0x1838\\n             rsi = rsp                // int64_t arg2\\n             ebp = 0\\n             rdi = r12                // uint32_t arg1\\n             qword [rbx + 0x3040] = rax\\n             rax = qword [rbx + 0x3070]\\n             qword [rbx + 0x3048] = rax\\n             sym.http_get  ()         // sym.http_get(0x1838, 0x178000, 0x40667f, 0x414, 0x814, 0x0, 0x0, 0x0, -1, -1)\\n             rax = qword [rbx]\\n             esi = str.User_Agent:__s // 0x40668e // \\\"User-Agent: %s\\\" // char *format\\n             rdi = r12                // int64_t arg1\\n             rdx = rax + 0x3444\\n             eax = 0\\n             sym.http_addheader  ()   // sym.http_addheader(0x1838, 0x40668e, 0x3444, 0x414, 0x814, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n\\n    loc_0x004043d0: // orphan\\n             // CODE XREFS from sym.conn_setup @ 0x40433c(x), 0x404361(x)\\n             rcx = rbx + 0x414        //  ...\\n             r8 = rbx + 0x814\\n             edx = 0x40667f           // '\\\\x7ff@' // \\\"%s%s\\\" // const char *format\\n             esi = 0x400              // 1024 // size_t size\\n             rdi = rsp                // char *s\\n             eax = 0\\n             sym.imp.snprintf  ()\\n                                      // int snprintf(\\\"\\\", -1, \\\"%s%s\\\", ?)\\n             rax = qword [rbx + 0x3068]\\n             r12 = rbx + 0x1838\\n             rsi = rsp                // int64_t arg2\\n             ebp = 0\\n             rdi = r12                // uint32_t arg1\\n             qword [rbx + 0x3040] = rax\\n             rax = qword [rbx + 0x3070]\\n             qword [rbx + 0x3048] = rax\\n             sym.http_get  ()         // sym.http_get(0x1838, 0x178000, 0x40667f, 0x414, 0x814, 0x0, 0x0, 0x0, -1, -1)\\n             rax = qword [rbx]\\n             esi = str.User_Agent:__s // 0x40668e // \\\"User-Agent: %s\\\" // char *format\\n             rdi = r12                // int64_t arg1\\n             rdx = rax + 0x3444\\n             eax = 0\\n             sym.http_addheader  ()   // sym.http_addheader(0x1838, 0x40668e, 0x3444, 0x414, 0x814, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         // CODE XREF from sym.conn_setup @ 0x404466(x)\\n         rdx = qword [rbx]\\n         var = ebp - dword [rdx + 0xc40]\\n         if  (var >= 0) goto loc_0x404468 // likely\\n\\n    loc_0x0040443b: // orphan\\n         // CODE XREF from sym.conn_setup @ 0x404466(x)\\n         rdx = qword [rbx]\\n         var = ebp - dword [rdx + 0xc40]\\n         if  (var >= 0) goto loc_0x404468 // likely\\n         rax = ebp                // rsp\\n         esi = 0x40669a           // \\\"%s\\\" // char *format\\n         rdi = r12                // int64_t arg1\\n         rax <<<= 0xa\\n         ebp+\\n         rdx = rdx + rax + 0xc44  // int64_t arg3\\n         eax = 0\\n         sym.http_addheader  ()   // sym.http_addheader(0x0, 0x40669a, 0x5e000c44, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         goto loc_0x40443b\\n\\n    loc_0x00404446: // orphan\\n         rax = ebp                // rsp\\n         esi = 0x40669a           // \\\"%s\\\" // char *format\\n         rdi = r12                // int64_t arg1\\n         rax <<<= 0xa\\n         ebp+\\n         rdx = rdx + rax + 0xc44  // int64_t arg3\\n         eax = 0\\n         sym.http_addheader  ()   // sym.http_addheader(0x0, 0x40669a, 0x5e000c44, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         goto loc_0x40443b\\n         // CODE XREF from sym.conn_setup @ 0x404444(x)\\n         ebp = 1\\n\\n    loc_0x00404468: // orphan\\n         // CODE XREF from sym.conn_setup @ 0x404444(x)\\n         ebp = 1\\n\\n}\\n\"}\n"