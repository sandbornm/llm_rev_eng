"{\"annotations\":[{\"start\":57,\"end\":57,\"offset\":4205817,\"type\":\"offset\"},{\"start\":116,\"end\":116,\"offset\":4205817,\"type\":\"offset\"},{\"start\":136,\"end\":136,\"offset\":4205818,\"type\":\"offset\"},{\"start\":156,\"end\":156,\"offset\":4205819,\"type\":\"offset\"},{\"start\":172,\"end\":172,\"offset\":4205821,\"type\":\"offset\"},{\"start\":202,\"end\":202,\"offset\":4205822,\"type\":\"offset\"},{\"start\":267,\"end\":267,\"offset\":4205825,\"type\":\"offset\"},{\"start\":322,\"end\":322,\"offset\":4205825,\"type\":\"offset\"},{\"start\":362,\"end\":362,\"offset\":4205831,\"type\":\"offset\"},{\"start\":486,\"end\":486,\"offset\":4205833,\"type\":\"offset\"},{\"start\":513,\"end\":513,\"offset\":4205840,\"type\":\"offset\"},{\"start\":540,\"end\":540,\"offset\":4205843,\"type\":\"offset\"},{\"start\":575,\"end\":575,\"offset\":4205850,\"type\":\"offset\"},{\"start\":599,\"end\":599,\"offset\":4205853,\"type\":\"offset\"},{\"start\":679,\"end\":679,\"offset\":4205860,\"type\":\"offset\"},{\"start\":734,\"end\":734,\"offset\":4205860,\"type\":\"offset\"},{\"start\":747,\"end\":747,\"offset\":4205863,\"type\":\"offset\"},{\"start\":773,\"end\":813,\"offset\":4205863,\"type\":\"offset\"},{\"start\":884,\"end\":1027,\"offset\":4205863,\"type\":\"offset\"},{\"start\":1201,\"end\":1732,\"offset\":4205863,\"type\":\"offset\"},{\"start\":2294,\"end\":2442,\"offset\":4205863,\"type\":\"offset\"},{\"start\":2621,\"end\":2728,\"offset\":4205863,\"type\":\"offset\"},{\"start\":2866,\"end\":3058,\"offset\":4205863,\"type\":\"offset\"},{\"start\":3281,\"end\":3448,\"offset\":4205863,\"type\":\"offset\"},{\"start\":3646,\"end\":3847,\"offset\":4205863,\"type\":\"offset\"},{\"start\":4079,\"end\":4228,\"offset\":4205863,\"type\":\"offset\"},{\"start\":4408,\"end\":4597,\"offset\":4205863,\"type\":\"offset\"},{\"start\":4817,\"end\":5202,\"offset\":4205863,\"type\":\"offset\"}],\"code\":\"int sym.axel_close (int esi, int edx) {\\n    loc_0x402cf9:\\n        // CALL XREFS from main @ 0x401d4a(x), 0x4023b6(x)\\n        push  (rbp)\\n        push  (rbx)\\n        ebp = 0\\n        push  (rdx)   // arg3\\n        rbx = rdi     // arg1\\n         // do {\\n    loc_0x402d01:\\n        // CODE XREF from sym.axel_close @ 0x402d27(x)\\n        var = dword [rbx + 0xc18] - ebp\\n        if  (var <= 0) goto loc_0x402d29 // likely\\n         // } while (?);\\n        }\\n        return eax;\\n    loc_0x402d09:\\n        rax = rbp * 0x30a8\\n        rax += qword [rbx]\\n        rdi = qword [rax + 0x30a0]\\n        var = rdi & rdi\\n        if  (!var) goto loc_0x402d24 // unlikely\\n            \\n    loc_0x402d24:\\n        // CODE XREF from sym.axel_close @ 0x402d1d(x)\\n        rbp+\\n        goto loc_0x402d01             sym.imp.pthread_cancel  ()\\n\\n    loc_0x00402d1f: // orphan\\n             sym.imp.pthread_cancel  ()\\n         // CODE XREF from sym.axel_close @ 0x402d07(x)\\n         var = dword [rbx + 0x3c84] - 1\\n         if  (var) goto loc_0x402d5f // likely\\n\\n    loc_0x00402d29: // orphan\\n         // CODE XREF from sym.axel_close @ 0x402d07(x)\\n         var = dword [rbx + 0x3c84] - 1\\n         if  (var) goto loc_0x402d5f // likely\\n         rdi = qword [obj.buffer] // [0x608670:8]=0 // char *s\\n         rcx = rbx + 0x3850\\n         edx = str._s.st          // 0x406264 // \\\"%s.st\\\" // const char *format\\n         esi = 0x400              // 1024 // size_t size\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, 0x00000000, \\\"%s.st\\\", ?)\\n         rdi = qword [obj.buffer] // [0x608670:8]=0 // const char *path\\n         sym.imp.unlink  ()\\n                                  // int unlink(-1)\\n         goto loc_0x402d71\\n\\n    loc_0x00402d32: // orphan\\n         rdi = qword [obj.buffer] // [0x608670:8]=0 // char *s\\n         rcx = rbx + 0x3850\\n         edx = str._s.st          // 0x406264 // \\\"%s.st\\\" // const char *format\\n         esi = 0x400              // 1024 // size_t size\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, 0x00000000, \\\"%s.st\\\", ?)\\n         rdi = qword [obj.buffer] // [0x608670:8]=0 // const char *path\\n         sym.imp.unlink  ()\\n                                  // int unlink(-1)\\n         goto loc_0x402d71\\n         // CODE XREF from sym.axel_close @ 0x402d30(x)\\n         var = qword [rbx + 0x3c60] - 0\\n         if  (var <= 0) goto loc_0x402d71 // likely\\n\\n    loc_0x00402d5f: // orphan\\n         // CODE XREF from sym.axel_close @ 0x402d30(x)\\n         var = qword [rbx + 0x3c60] - 0\\n         if  (var <= 0) goto loc_0x402d71 // likely\\n         rdi = rbx                // int64_t arg1\\n         sym.save_state  ()       // sym.save_state(0x0)\\n\\n    loc_0x00402d69: // orphan\\n         rdi = rbx                // int64_t arg1\\n         sym.save_state  ()       // sym.save_state(0x0)\\n         // CODE XREFS from sym.axel_close @ 0x402d5d(x), 0x402d67(x), 0x402d8c(x)\\n         rdi = qword [rbx + 0x3c88]\\n         var = rdi & rdi\\n         if  (!var) goto loc_0x402d8e // likely\\n\\n    loc_0x00402d71: // orphan\\n         // CODE XREFS from sym.axel_close @ 0x402d5d(x), 0x402d67(x), 0x402d8c(x)\\n         rdi = qword [rbx + 0x3c88]\\n         var = rdi & rdi\\n         if  (!var) goto loc_0x402d8e // likely\\n         rax = qword [rdi]\\n         qword [rbx + 0x3c88] = rax\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         goto loc_0x402d71\\n\\n    loc_0x00402d7d: // orphan\\n         rax = qword [rdi]\\n         qword [rbx + 0x3c88] = rax\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         goto loc_0x402d71\\n         // CODE XREF from sym.axel_close @ 0x402d7b(x)\\n         edi = dword [rbx + 0x3c80] // int fildes\\n         ebp = 0\\n         sym.imp.close  ()\\n                                  // int close(-1)\\n\\n    loc_0x00402d8e: // orphan\\n         // CODE XREF from sym.axel_close @ 0x402d7b(x)\\n         edi = dword [rbx + 0x3c80] // int fildes\\n         ebp = 0\\n         sym.imp.close  ()\\n                                  // int close(-1)\\n         // CODE XREF from sym.axel_close @ 0x402db5(x)\\n         var = dword [rbx + 0xc18] - ebp\\n         if  (var <= 0) goto loc_0x402db7 // likely\\n\\n    loc_0x00402d9b: // orphan\\n         // CODE XREF from sym.axel_close @ 0x402db5(x)\\n         var = dword [rbx + 0xc18] - ebp\\n         if  (var <= 0) goto loc_0x402db7 // likely\\n         rdi = rbp * 0x30a8\\n         rbp+\\n         rdi += qword [rbx]       // int64_t arg1\\n         sym.conn_disconnect  ()  // sym.conn_disconnect(0x4776c0000)\\n         goto loc_0x402d9b\\n\\n    loc_0x00402da3: // orphan\\n         rdi = rbp * 0x30a8\\n         rbp+\\n         rdi += qword [rbx]       // int64_t arg1\\n         sym.conn_disconnect  ()  // sym.conn_disconnect(0x4776c0000)\\n         goto loc_0x402d9b\\n         // CODE XREF from sym.axel_close @ 0x402da1(x)\\n         rdi = qword [rbx]        // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         rax = pop  ()\\n         rdi = rbx\\n         rbx = pop  ()\\n         rbp = pop  ()\\n         goto loc_0x4013e0        // sym.imp.free // sym.imp.free\\n                                  // void free(-1)\\n\\n    loc_0x00402db7: // orphan\\n         // CODE XREF from sym.axel_close @ 0x402da1(x)\\n         rdi = qword [rbx]        // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         rax = pop  ()\\n         rdi = rbx\\n         rbx = pop  ()\\n         rbp = pop  ()\\n         goto loc_0x4013e0        // sym.imp.free // sym.imp.free\\n                                  // void free(-1)\\n\\n}\\n\"}\n"