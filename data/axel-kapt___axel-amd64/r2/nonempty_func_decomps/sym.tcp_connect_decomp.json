"{\"annotations\":[{\"start\":58,\"end\":58,\"offset\":4218237,\"type\":\"offset\"},{\"start\":118,\"end\":118,\"offset\":4218237,\"type\":\"offset\"},{\"start\":174,\"end\":174,\"offset\":4218237,\"type\":\"offset\"},{\"start\":231,\"end\":231,\"offset\":4218237,\"type\":\"offset\"},{\"start\":251,\"end\":251,\"offset\":4218239,\"type\":\"offset\"},{\"start\":271,\"end\":271,\"offset\":4218241,\"type\":\"offset\"},{\"start\":301,\"end\":301,\"offset\":4218244,\"type\":\"offset\"},{\"start\":321,\"end\":321,\"offset\":4218246,\"type\":\"offset\"},{\"start\":341,\"end\":341,\"offset\":4218247,\"type\":\"offset\"},{\"start\":371,\"end\":371,\"offset\":4218250,\"type\":\"offset\"},{\"start\":391,\"end\":391,\"offset\":4218251,\"type\":\"offset\"},{\"start\":407,\"end\":407,\"offset\":4218256,\"type\":\"offset\"},{\"start\":437,\"end\":437,\"offset\":4218259,\"type\":\"offset\"},{\"start\":492,\"end\":492,\"offset\":4218263,\"type\":\"offset\"},{\"start\":548,\"end\":548,\"offset\":4218263,\"type\":\"offset\"},{\"start\":566,\"end\":566,\"offset\":4218266,\"type\":\"offset\"},{\"start\":600,\"end\":600,\"offset\":4218271,\"type\":\"offset\"},{\"start\":624,\"end\":624,\"offset\":4218274,\"type\":\"offset\"},{\"start\":642,\"end\":642,\"offset\":4218277,\"type\":\"offset\"},{\"start\":763,\"end\":763,\"offset\":4218279,\"type\":\"offset\"},{\"start\":833,\"end\":833,\"offset\":4218279,\"type\":\"offset\"},{\"start\":865,\"end\":865,\"offset\":4218282,\"type\":\"offset\"},{\"start\":926,\"end\":926,\"offset\":4218450,\"type\":\"offset\"},{\"start\":996,\"end\":996,\"offset\":4218450,\"type\":\"offset\"},{\"start\":1016,\"end\":1016,\"offset\":4218454,\"type\":\"offset\"},{\"start\":1034,\"end\":1034,\"offset\":4218456,\"type\":\"offset\"},{\"start\":1056,\"end\":1056,\"offset\":4218457,\"type\":\"offset\"},{\"start\":1078,\"end\":1078,\"offset\":4218458,\"type\":\"offset\"},{\"start\":1100,\"end\":1100,\"offset\":4218460,\"type\":\"offset\"},{\"start\":1122,\"end\":1122,\"offset\":4218462,\"type\":\"offset\"},{\"start\":1144,\"end\":1144,\"offset\":4218464,\"type\":\"offset\"},{\"start\":1210,\"end\":1389,\"offset\":4218464,\"type\":\"offset\"},{\"start\":1599,\"end\":1660,\"offset\":4218464,\"type\":\"offset\"},{\"start\":1752,\"end\":1779,\"offset\":4218464,\"type\":\"offset\"},{\"start\":1837,\"end\":2243,\"offset\":4218464,\"type\":\"offset\"},{\"start\":2680,\"end\":2753,\"offset\":4218464,\"type\":\"offset\"},{\"start\":2857,\"end\":2935,\"offset\":4218464,\"type\":\"offset\"},{\"start\":3044,\"end\":3547,\"offset\":4218464,\"type\":\"offset\"},{\"start\":4081,\"end\":4737,\"offset\":4218464,\"type\":\"offset\"},{\"start\":5424,\"end\":5649,\"offset\":4218464,\"type\":\"offset\"},{\"start\":5905,\"end\":6003,\"offset\":4218464,\"type\":\"offset\"}],\"code\":\"int sym.tcp_connect (int esi, int edx) {\\n    loc_0x405d7d:\\n        // CALL XREF from sym.ftp_data.part.0 @ 0x404861(x)\\n        // CALL XREF from sym.ftp_connect @ 0x404c27(x)\\n        // CALL XREF from sym.http_connect @ 0x405220(x)\\n        push  (r14)\\n        push  (r13)\\n        r14 = rdi     // arg1\\n        push  (r12)\\n        push  (rbp)\\n        r13d = esi    // arg2\\n        push  (rbx)\\n        ebp = 5\\n        rbx = rdx     // arg3\\n        rsp -= 0x20\\n         // do {\\n    loc_0x405d97:\\n        // CODE XREF from sym.tcp_connect @ 0x405db9(x)\\n        rdi = r14\\n        sym.imp.gethostbyname  ()\\n        var = rax & rax\\n        r12 = rax\\n        if  (var) goto loc_0x405daf // unlikely\\n         // } while (?);\\n        }\\n        return eax;\\n    loc_0x405da7:\\n        // CODE XREFS from sym.tcp_connect @ 0x405dbb(x), 0x405dd3(x)\\n        ebx |= 0xffffffff // -1\\n        goto loc_0x405e52\\n         // do {\\n    loc_0x405e52:\\n        // CODE XREFS from sym.tcp_connect @ 0x405daa(x), 0x405e4e(x)\\n        rsp += 0x20\\n        eax = ebx\\n        rbx = pop  ()\\n        rbp = pop  ()\\n        r12 = pop  ()\\n        r13 = pop  ()\\n        r14 = pop  ()\\n        re\\n         // } while (?);\\n        }\\n        return eax;             // CODE XREF from sym.tcp_connect @ 0x405da5(x)\\n             rax = qword [rax]\\n             var = byte [rax] - 0\\n             if  (var) goto loc_0x405dbd // unlikely\\n\\n    loc_0x00405daf: // orphan\\n             // CODE XREF from sym.tcp_connect @ 0x405da5(x)\\n             rax = qword [rax]\\n             var = byte [rax] - 0\\n             if  (var) goto loc_0x405dbd // unlikely\\n         ebp-\\n         if  (var) goto loc_0x405d97 // likely\\n\\n    loc_0x00405db7: // orphan\\n         ebp-\\n         if  (var) goto loc_0x405d97 // likely\\n         goto loc_0x405da7\\n\\n    loc_0x00405dbb: // orphan\\n         goto loc_0x405da7\\n         // CODE XREF from sym.tcp_connect @ 0x405db5(x)\\n         edx = 0                  // int protocol\\n         esi = 1                  // int type\\n         edi = 2                  // int domain\\n         sym.imp.socket  ()\\n                                  // int socket(0x00000000, 0x00000000, -1)\\n         var = eax - 0xffffffff\\n         ebp = eax\\n         if  (!var) goto loc_0x405da7 // unlikely\\n\\n    loc_0x00405dbd: // orphan\\n         // CODE XREF from sym.tcp_connect @ 0x405db5(x)\\n         edx = 0                  // int protocol\\n         esi = 1                  // int type\\n         edi = 2                  // int domain\\n         sym.imp.socket  ()\\n                                  // int socket(0x00000000, 0x00000000, -1)\\n         var = eax - 0xffffffff\\n         ebp = eax\\n         if  (!var) goto loc_0x405da7 // unlikely\\n         var = rbx & rbx\\n         if  (!var) goto loc_0x405e11 // likely\\n\\n    loc_0x00405dd5: // orphan\\n         var = rbx & rbx\\n         if  (!var) goto loc_0x405e11 // likely\\n         var = byte [rbx] - 0\\n         if  (!var) goto loc_0x405e11 // likely\\n\\n    loc_0x00405dda: // orphan\\n         var = byte [rbx] - 0\\n         if  (!var) goto loc_0x405e11 // likely\\n         rdi = rbx\\n         word [address] = 2\\n         word [var_12h] = 0\\n         sym.imp.inet_addr  ()\\n         rsi = address            // struct sockaddr*address\\n         edx = 0x10               // socklen_t address_len\\n         edi = ebp                // int socket // rsp\\n         dword [var_14h] = eax\\n         sym.imp.bind  ()\\n                                  // int bind(0x00000000, ?, ?)\\n         var = eax - 0xffffffff\\n         ebx = eax\\n         if  (!var) goto loc_0x405e47 // unlikely\\n\\n    loc_0x00405ddf: // orphan\\n         rdi = rbx\\n         word [address] = 2\\n         word [var_12h] = 0\\n         sym.imp.inet_addr  ()\\n         rsi = address            // struct sockaddr*address\\n         edx = 0x10               // socklen_t address_len\\n         edi = ebp                // int socket // rsp\\n         dword [var_14h] = eax\\n         sym.imp.bind  ()\\n                                  // int bind(0x00000000, ?, ?)\\n         var = eax - 0xffffffff\\n         ebx = eax\\n         if  (!var) goto loc_0x405e47 // unlikely\\n         // CODE XREFS from sym.tcp_connect @ 0x405dd8(x), 0x405ddd(x)\\n         rax = qword [r12 + 0x18]\\n         esi = r13d\\n         edx = 0x10               // size_t addrlen\\n         ror si\\n         edi = ebp                // int socket // rsp\\n         word [var_2h] = si\\n         rsi = rsp                // void *addr\\n         rax = qword [rax]\\n         word [rsp] = 2\\n         eax = dword [rax]\\n         dword [var_4h] = eax\\n         sym.imp.connect  ()\\n                                  // ssize_t connect(0x00000002, 0x0000000000000002, 0x00000000)\\n         var = eax - 0xffffffff\\n         ebx = eax\\n         if  (var) goto loc_0x405e50 // likely\\n\\n    loc_0x00405e11: // orphan\\n         // CODE XREFS from sym.tcp_connect @ 0x405dd8(x), 0x405ddd(x)\\n         rax = qword [r12 + 0x18]\\n         esi = r13d\\n         edx = 0x10               // size_t addrlen\\n         ror si\\n         edi = ebp                // int socket // rsp\\n         word [var_2h] = si\\n         rsi = rsp                // void *addr\\n         rax = qword [rax]\\n         word [rsp] = 2\\n         eax = dword [rax]\\n         dword [var_4h] = eax\\n         sym.imp.connect  ()\\n                                  // ssize_t connect(0x00000002, 0x0000000000000002, 0x00000000)\\n         var = eax - 0xffffffff\\n         ebx = eax\\n         if  (var) goto loc_0x405e50 // likely\\n         // CODE XREF from sym.tcp_connect @ 0x405e0f(x)\\n         edi = ebp                // int fildes // rsp\\n         sym.imp.close  ()\\n                                  // int close(0x00000002)\\n         goto loc_0x405e52\\n\\n    loc_0x00405e47: // orphan\\n         // CODE XREF from sym.tcp_connect @ 0x405e0f(x)\\n         edi = ebp                // int fildes // rsp\\n         sym.imp.close  ()\\n                                  // int close(0x00000002)\\n         goto loc_0x405e52\\n         // CODE XREF from sym.tcp_connect @ 0x405e45(x)\\n         ebx = ebp                // rsp\\n\\n    loc_0x00405e50: // orphan\\n         // CODE XREF from sym.tcp_connect @ 0x405e45(x)\\n         ebx = ebp                // rsp\\n\\n}\\n\"}\n"