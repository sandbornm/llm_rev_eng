"{\"annotations\":[{\"start\":56,\"end\":56,\"offset\":4218465,\"type\":\"offset\"},{\"start\":117,\"end\":117,\"offset\":4218465,\"type\":\"offset\"},{\"start\":137,\"end\":137,\"offset\":4218467,\"type\":\"offset\"},{\"start\":157,\"end\":157,\"offset\":4218468,\"type\":\"offset\"},{\"start\":195,\"end\":195,\"offset\":4218470,\"type\":\"offset\"},{\"start\":215,\"end\":215,\"offset\":4218471,\"type\":\"offset\"},{\"start\":245,\"end\":245,\"offset\":4218474,\"type\":\"offset\"},{\"start\":275,\"end\":275,\"offset\":4218477,\"type\":\"offset\"},{\"start\":311,\"end\":311,\"offset\":4218482,\"type\":\"offset\"},{\"start\":345,\"end\":345,\"offset\":4218487,\"type\":\"offset\"},{\"start\":365,\"end\":365,\"offset\":4218491,\"type\":\"offset\"},{\"start\":392,\"end\":392,\"offset\":4218491,\"type\":\"offset\"},{\"start\":442,\"end\":442,\"offset\":4218496,\"type\":\"offset\"},{\"start\":460,\"end\":460,\"offset\":4218501,\"type\":\"offset\"},{\"start\":478,\"end\":478,\"offset\":4218503,\"type\":\"offset\"},{\"start\":496,\"end\":496,\"offset\":4218506,\"type\":\"offset\"},{\"start\":512,\"end\":512,\"offset\":4218508,\"type\":\"offset\"},{\"start\":553,\"end\":553,\"offset\":4218511,\"type\":\"offset\"},{\"start\":586,\"end\":586,\"offset\":4218513,\"type\":\"offset\"},{\"start\":622,\"end\":622,\"offset\":4218516,\"type\":\"offset\"},{\"start\":649,\"end\":649,\"offset\":4218516,\"type\":\"offset\"},{\"start\":681,\"end\":681,\"offset\":4218521,\"type\":\"offset\"},{\"start\":699,\"end\":699,\"offset\":4218524,\"type\":\"offset\"},{\"start\":715,\"end\":715,\"offset\":4218526,\"type\":\"offset\"},{\"start\":762,\"end\":762,\"offset\":4218531,\"type\":\"offset\"},{\"start\":794,\"end\":794,\"offset\":4218533,\"type\":\"offset\"},{\"start\":821,\"end\":821,\"offset\":4218540,\"type\":\"offset\"},{\"start\":847,\"end\":847,\"offset\":4218540,\"type\":\"offset\"},{\"start\":875,\"end\":875,\"offset\":4218545,\"type\":\"offset\"},{\"start\":891,\"end\":891,\"offset\":4218547,\"type\":\"offset\"},{\"start\":915,\"end\":915,\"offset\":4218549,\"type\":\"offset\"},{\"start\":994,\"end\":994,\"offset\":4218576,\"type\":\"offset\"},{\"start\":1048,\"end\":1048,\"offset\":4218576,\"type\":\"offset\"},{\"start\":1068,\"end\":1068,\"offset\":4218580,\"type\":\"offset\"},{\"start\":1086,\"end\":1086,\"offset\":4218582,\"type\":\"offset\"},{\"start\":1108,\"end\":1108,\"offset\":4218583,\"type\":\"offset\"},{\"start\":1130,\"end\":1130,\"offset\":4218584,\"type\":\"offset\"},{\"start\":1152,\"end\":1152,\"offset\":4218586,\"type\":\"offset\"},{\"start\":1202,\"end\":1202,\"offset\":4218551,\"type\":\"offset\"},{\"start\":1239,\"end\":1239,\"offset\":4218555,\"type\":\"offset\"},{\"start\":1269,\"end\":1269,\"offset\":4218555,\"type\":\"offset\"},{\"start\":1300,\"end\":1300,\"offset\":4218560,\"type\":\"offset\"},{\"start\":1336,\"end\":1336,\"offset\":4218563,\"type\":\"offset\"},{\"start\":1377,\"end\":1377,\"offset\":4218566,\"type\":\"offset\"},{\"start\":1404,\"end\":1404,\"offset\":4218566,\"type\":\"offset\"},{\"start\":1436,\"end\":1436,\"offset\":4218571,\"type\":\"offset\"}],\"code\":\"int sym.get_if_ip (int esi, int edx) {\\n    loc_0x405e61:\\n        // CALL XREF from sym.parse_interfaces @ 0x403726(x)\\n        push  (r12)\\n        push  (rbp)\\n        edx = 0       // int protocol\\n        push  (rbx)\\n        r12 = rdi     // arg1\\n        rbx = rsi     // arg2\\n        edi = 2       // int domain\\n        esi = 2       // int type\\n        rsp -= 0x30\\n        sym.imp.socket  ()\\n        // int socket(0x00000000, 0x00000000, -1)\\n        ecx = 0xa\\n        ebp = eax\\n        rdi = rsp\\n        eax = 0\\n        rsi = r12     // const char *src\\n        rep stosd dword [rdi],ax\\n        rdi = rsp     // char *dest\\n        sym.imp.strcpy  ()\\n        // char *strcpy(\\\"\\\", -1)\\n        rdx = rsp\\n        eax = 0\\n        esi = 0x8915  // unsigned long request\\n        edi = ebp     // int fd\\n        word [var_10h] = 2\\n        sym.imp.ioctl  ()\\n        // int ioctl(-1, ?)\\n        edx = 0\\n        var = eax & eax\\n        if  (var) goto loc_0x405ed0 // unlikely\\n            \\n    loc_0x405ed0:\\n        // CODE XREF from sym.get_if_ip @ 0x405eb5(x)\\n        rsp += 0x30\\n        eax = edx\\n        rbx = pop  ()\\n        rbp = pop  ()\\n        r12 = pop  ()\\n        re\\n         // } else {\\n    loc_0x405eb7:\\n        edi = dword [in] // void *in\\n        sym.imp.inet_ntoa  ()\\n        // char *inet_ntoa(-1)\\n        rdi = rbx     // char *dest\\n        rsi = rax     // const char *src\\n        sym.imp.strcpy  ()\\n        // char *strcpy(-1, -1)\\n        edx = 1\\n        }\\n        return eax;\\n}\\n\"}\n"