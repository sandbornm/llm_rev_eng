"{\"annotations\":[{\"start\":55,\"end\":55,\"offset\":4214214,\"type\":\"offset\"},{\"start\":109,\"end\":109,\"offset\":4214214,\"type\":\"offset\"},{\"start\":162,\"end\":162,\"offset\":4214214,\"type\":\"offset\"},{\"start\":182,\"end\":182,\"offset\":4214216,\"type\":\"offset\"},{\"start\":202,\"end\":202,\"offset\":4214218,\"type\":\"offset\"},{\"start\":232,\"end\":232,\"offset\":4214221,\"type\":\"offset\"},{\"start\":252,\"end\":252,\"offset\":4214223,\"type\":\"offset\"},{\"start\":272,\"end\":272,\"offset\":4214224,\"type\":\"offset\"},{\"start\":302,\"end\":302,\"offset\":4214227,\"type\":\"offset\"},{\"start\":322,\"end\":322,\"offset\":4214228,\"type\":\"offset\"},{\"start\":352,\"end\":352,\"offset\":4214231,\"type\":\"offset\"},{\"start\":390,\"end\":390,\"offset\":4214236,\"type\":\"offset\"},{\"start\":429,\"end\":429,\"offset\":4214239,\"type\":\"offset\"},{\"start\":450,\"end\":450,\"offset\":4214246,\"type\":\"offset\"},{\"start\":503,\"end\":503,\"offset\":4214255,\"type\":\"offset\"},{\"start\":530,\"end\":530,\"offset\":4214255,\"type\":\"offset\"},{\"start\":570,\"end\":570,\"offset\":4214260,\"type\":\"offset\"},{\"start\":594,\"end\":594,\"offset\":4214263,\"type\":\"offset\"},{\"start\":673,\"end\":673,\"offset\":4214376,\"type\":\"offset\"},{\"start\":753,\"end\":753,\"offset\":4214376,\"type\":\"offset\"},{\"start\":779,\"end\":779,\"offset\":4214379,\"type\":\"offset\"},{\"start\":858,\"end\":858,\"offset\":4214424,\"type\":\"offset\"},{\"start\":911,\"end\":911,\"offset\":4214424,\"type\":\"offset\"},{\"start\":963,\"end\":963,\"offset\":4214427,\"type\":\"offset\"},{\"start\":1014,\"end\":1014,\"offset\":4214432,\"type\":\"offset\"},{\"start\":1038,\"end\":1038,\"offset\":4214434,\"type\":\"offset\"},{\"start\":1116,\"end\":1116,\"offset\":4214415,\"type\":\"offset\"},{\"start\":1196,\"end\":1196,\"offset\":4214415,\"type\":\"offset\"},{\"start\":1230,\"end\":1230,\"offset\":4214419,\"type\":\"offset\"},{\"start\":1291,\"end\":1291,\"offset\":4215086,\"type\":\"offset\"},{\"start\":1384,\"end\":1384,\"offset\":4215086,\"type\":\"offset\"},{\"start\":1405,\"end\":1405,\"offset\":4215093,\"type\":\"offset\"},{\"start\":1427,\"end\":1427,\"offset\":4215094,\"type\":\"offset\"},{\"start\":1449,\"end\":1449,\"offset\":4215095,\"type\":\"offset\"},{\"start\":1471,\"end\":1471,\"offset\":4215097,\"type\":\"offset\"},{\"start\":1493,\"end\":1493,\"offset\":4215099,\"type\":\"offset\"},{\"start\":1515,\"end\":1515,\"offset\":4215101,\"type\":\"offset\"},{\"start\":1700,\"end\":1700,\"offset\":4214283,\"type\":\"offset\"},{\"start\":1738,\"end\":1738,\"offset\":4214286,\"type\":\"offset\"},{\"start\":1805,\"end\":1805,\"offset\":4214291,\"type\":\"offset\"},{\"start\":1850,\"end\":1850,\"offset\":4214294,\"type\":\"offset\"},{\"start\":1965,\"end\":1965,\"offset\":4214299,\"type\":\"offset\"},{\"start\":2008,\"end\":2008,\"offset\":4214302,\"type\":\"offset\"},{\"start\":2069,\"end\":2069,\"offset\":4214307,\"type\":\"offset\"},{\"start\":2089,\"end\":2089,\"offset\":4214312,\"type\":\"offset\"},{\"start\":2114,\"end\":2114,\"offset\":4214315,\"type\":\"offset\"},{\"start\":2204,\"end\":2204,\"offset\":4214348,\"type\":\"offset\"},{\"start\":2257,\"end\":2257,\"offset\":4214348,\"type\":\"offset\"},{\"start\":2288,\"end\":2288,\"offset\":4214354,\"type\":\"offset\"},{\"start\":2309,\"end\":2309,\"offset\":4214359,\"type\":\"offset\"},{\"start\":2331,\"end\":2331,\"offset\":4214362,\"type\":\"offset\"},{\"start\":2411,\"end\":2411,\"offset\":4214364,\"type\":\"offset\"},{\"start\":2427,\"end\":2427,\"offset\":4214369,\"type\":\"offset\"},{\"start\":2498,\"end\":2498,\"offset\":4214374,\"type\":\"offset\"},{\"start\":2559,\"end\":2559,\"offset\":4214391,\"type\":\"offset\"},{\"start\":2612,\"end\":2612,\"offset\":4214391,\"type\":\"offset\"},{\"start\":2628,\"end\":2628,\"offset\":4214393,\"type\":\"offset\"},{\"start\":2658,\"end\":2658,\"offset\":4214398,\"type\":\"offset\"},{\"start\":2700,\"end\":2700,\"offset\":4214405,\"type\":\"offset\"},{\"start\":2744,\"end\":2744,\"offset\":4214408,\"type\":\"offset\"},{\"start\":2760,\"end\":2760,\"offset\":4214410,\"type\":\"offset\"},{\"start\":2788,\"end\":2788,\"offset\":4214410,\"type\":\"offset\"},{\"start\":2902,\"end\":3294,\"offset\":4214410,\"type\":\"offset\"},{\"start\":3717,\"end\":4490,\"offset\":4214410,\"type\":\"offset\"},{\"start\":5294,\"end\":5754,\"offset\":4214410,\"type\":\"offset\"},{\"start\":6245,\"end\":6794,\"offset\":4214410,\"type\":\"offset\"},{\"start\":7374,\"end\":7949,\"offset\":4214410,\"type\":\"offset\"},{\"start\":8555,\"end\":8666,\"offset\":4214410,\"type\":\"offset\"},{\"start\":8808,\"end\":9088,\"offset\":4214410,\"type\":\"offset\"},{\"start\":9399,\"end\":9641,\"offset\":4214410,\"type\":\"offset\"},{\"start\":9914,\"end\":9941,\"offset\":4214410,\"type\":\"offset\"},{\"start\":9999,\"end\":10193,\"offset\":4214410,\"type\":\"offset\"},{\"start\":10418,\"end\":10580,\"offset\":4214410,\"type\":\"offset\"},{\"start\":10773,\"end\":10932,\"offset\":4214410,\"type\":\"offset\"},{\"start\":11122,\"end\":11263,\"offset\":4214410,\"type\":\"offset\"},{\"start\":11435,\"end\":11677,\"offset\":4214410,\"type\":\"offset\"},{\"start\":11950,\"end\":12037,\"offset\":4214410,\"type\":\"offset\"},{\"start\":12155,\"end\":12435,\"offset\":4214410,\"type\":\"offset\"},{\"start\":12746,\"end\":12864,\"offset\":4214410,\"type\":\"offset\"},{\"start\":13013,\"end\":13333,\"offset\":4214410,\"type\":\"offset\"},{\"start\":13684,\"end\":13786,\"offset\":4214410,\"type\":\"offset\"},{\"start\":13919,\"end\":14366,\"offset\":4214410,\"type\":\"offset\"},{\"start\":14844,\"end\":15049,\"offset\":4214410,\"type\":\"offset\"},{\"start\":15285,\"end\":15706,\"offset\":4214410,\"type\":\"offset\"},{\"start\":16158,\"end\":17762,\"offset\":4214410,\"type\":\"offset\"},{\"start\":19397,\"end\":19421,\"offset\":4214410,\"type\":\"offset\"},{\"start\":19476,\"end\":19795,\"offset\":4214410,\"type\":\"offset\"},{\"start\":20145,\"end\":20169,\"offset\":4214410,\"type\":\"offset\"},{\"start\":20224,\"end\":20531,\"offset\":4214410,\"type\":\"offset\"},{\"start\":20869,\"end\":21637,\"offset\":4214410,\"type\":\"offset\"},{\"start\":22436,\"end\":22861,\"offset\":4214410,\"type\":\"offset\"},{\"start\":23317,\"end\":23846,\"offset\":4214410,\"type\":\"offset\"},{\"start\":24406,\"end\":24440,\"offset\":4214410,\"type\":\"offset\"}],\"code\":\"int sym.ftp_size (int esi, int edx) {\\n    loc_0x404dc6:\\n        // CALL XREF from sym.conn_info @ 0x4045a3(x)\\n        // CALL XREF from sym.ftp_size @ 0x4050ab(x)\\n        push  (r14)\\n        push  (r13)\\n        r13d = edx    // arg3\\n        push  (r12)\\n        push  (rbp)\\n        r12 = rsi     // arg2\\n        push  (rbx)\\n        rbp = rdi     // arg1\\n        esi = 0x2a    // '*' // int c\\n        rdi = r12     // const char *s\\n        rsp -= 0x410\\n        qword [nbyte] = 0x400 // [0x400:8]=0 // 1024\\n        sym.imp.strchr  ()\\n        // char *strchr(-1, 0x00000000)\\n        var = rax & rax\\n        if  (var) goto loc_0x404e68 // unlikely\\n            \\n    loc_0x404e68:\\n        // CODE XREFS from sym.ftp_size @ 0x404df7(x), 0x404e09(x), 0x404e5a(x)\\n        var = r13d & r13d\\n        if  (var) goto loc_0x404e98 // unlikely\\n            \\n    loc_0x404e98:\\n        // CODE XREF from sym.ftp_size @ 0x404e6b(x)\\n        rdi = rbp     // signed int64_t arg1 // rsp\\n        sym.ftp_data  () // sym.ftp_data(0x178000)\\n        var = eax & eax\\n        if  (!var) goto loc_0x404e8f // likely\\n            \\n    loc_0x404e8f:\\n        // CODE XREFS from sym.ftp_size @ 0x404ea2(x), 0x404ec4(x), 0x40500a(x)\\n        rax |= 0xffffffffffffffff\\n        goto loc_0x40512e\\n         // do {\\n    loc_0x40512e:\\n        // CODE XREFS from sym.ftp_size @ 0x404e47(x), 0x404e93(x), 0x4050b0(x), 0x405101(x)\\n        rsp += 0x410\\n        rbx = pop  ()\\n        rbp = pop  ()\\n        r12 = pop  ()\\n        r13 = pop  ()\\n        r14 = pop  ()\\n        re\\n         // } while (?);\\n         // } while (?);\\n         // } while (?);\\n         // } while (?);\\n        }\\n        return eax;\\n        goto loc_0x404df9\\n    loc_0x404e0b:\\n        rdx = r12     // int64_t arg3\\n        esi = str.SIZE__s // 0x4067c7 // \\\"SIZE %s\\\" // int64_t arg2\\n        rdi = rbp     // int64_t arg1 // rsp\\n        sym.ftp_command  () // sym.ftp_command(0x178000, 0x4067c7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n        rdi = rbp     // void **ptr // rsp\\n        sym.ftp_wait  () // sym.ftp_wait(0x178000, 0x4067c7)\\n        eax -= 0xc8\\n        var = eax - 0x63\\n        if  (((unsigned) var) > 0) goto 0x404e4c // likely\\n            \\n    loc_0x404e4c:\\n        // CODE XREF from sym.ftp_size @ 0x404e2b(x)\\n        eax = dword [arg_408h]\\n        eax -= 0x1f4\\n        var = eax - 9\\n        if  (((unsigned) var) <= 0) goto 0x404e68 // unlikely\\n    loc_0x404e5c:\\n        edx = 5\\n        esi = str.File_not_found._n // 0x4067d8 // \\\"File not found.\\\\n\\\"\\n        goto loc_0x404e77\\n         // do {\\n    loc_0x404e77:\\n        // CODE XREF from sym.ftp_size @ 0x404e66(x)\\n        edi = 0\\n        sym.imp.dcgettext  ()\\n        rdi = qword [arg_400h] // char *s\\n        rsi = rax     // const char *format\\n        eax = 0\\n        sym.imp.sprintf  ()\\n        // int sprintf(-1, -1, ?)\\n         // } while (?);\\n         // } while (?);\\n        }\\n        return eax;             r14 = qword [nbyte]\\n             rdi = r14                // size_t size\\n             sym.imp.malloc  ()\\n                                      //  void *malloc(0x00000000)\\n             rbx = rax\\n             rcx = r14\\n             eax = 0\\n             rdi = rbx\\n             qword [rsp] = 1\\n             r14d = 2\\n             rep stosb byte [rdi],l\\n             byte [rbx] = 0xa\\n\\n    loc_0x00404ec6: // orphan\\n             r14 = qword [nbyte]\\n             rdi = r14                // size_t size\\n             sym.imp.malloc  ()\\n                                      //  void *malloc(0x00000000)\\n             rbx = rax\\n             rcx = r14\\n             eax = 0\\n             rdi = rbx\\n             qword [rsp] = 1\\n             r14d = 2\\n             rep stosb byte [rdi],l\\n             byte [rbx] = 0xa\\n         // CODE XREFS from sym.ftp_size @ 0x404f30(x), 0x404f5d(x)\\n         rsi = qword [rsp]        // (cstr 0x00000000) \\\"\\\\n\\\"\\n         rdx = qword [nbyte]      // (cstr 0x00000000) \\\"\\\\n\\\"\\n         edi = dword [fildes]     // int fildes\\n         rdx -= rsi               // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         rsi += rbx               // void *buf // (cstr 0x00000000) \\\"\\\\n\\\"\\n         rdx -= 3                 // size_t nbyte // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         sym.imp.read  ()\\n                                  // ssize_t read(-1, 0x0000000000000000, 0x00000000)\\n         var = rax & rax          // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (var <= 0) goto loc_0x404f5f // likely\\n\\n    loc_0x00404ef1: // orphan\\n         // CODE XREFS from sym.ftp_size @ 0x404f30(x), 0x404f5d(x)\\n         rsi = qword [rsp]        // (cstr 0x00000000) \\\"\\\\n\\\"\\n         rdx = qword [nbyte]      // (cstr 0x00000000) \\\"\\\\n\\\"\\n         edi = dword [fildes]     // int fildes\\n         rdx -= rsi               // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         rsi += rbx               // void *buf // (cstr 0x00000000) \\\"\\\\n\\\"\\n         rdx -= 3                 // size_t nbyte // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         sym.imp.read  ()\\n                                  // ssize_t read(-1, 0x0000000000000000, 0x00000000)\\n         var = rax & rax          // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (var <= 0) goto loc_0x404f5f // likely\\n         rax += qword [rsp]       // (cstr 0x00000000) \\\"\\\\n\\\"\\n         qword [rsp] = rax\\n         byte [rbx + rax] = 0\\n         rsi = qword [nbyte]      // (cstr 0x00000000) \\\"\\\\n\\\"\\n         rax = rsi                // (cstr 0x00000000) \\\"\\\\n\\\"\\n         rax -= qword [rsp]       // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         var = rax - 0xa          // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (var > 0) goto loc_0x404ef1 // likely\\n\\n    loc_0x00404f14: // orphan\\n         rax += qword [rsp]       // (cstr 0x00000000) \\\"\\\\n\\\"\\n         qword [rsp] = rax\\n         byte [rbx + rax] = 0\\n         rsi = qword [nbyte]      // (cstr 0x00000000) \\\"\\\\n\\\"\\n         rax = rsi                // (cstr 0x00000000) \\\"\\\\n\\\"\\n         rax -= qword [rsp]       // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         var = rax - 0xa          // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (var > 0) goto loc_0x404ef1 // likely\\n         rdi = rbx                // void *ptr\\n         rsi += rsi               // size_t size // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         qword [nbyte] = rsi\\n         sym.imp.realloc  ()\\n                                  // void *realloc(-1, -1)\\n         rbx = rax\\n         rax = qword [nbyte]\\n         cq\\n         r14 /=\\n         rdx = rbx + rax\\n         rcx = rax\\n         eax = 0                  // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         rdi = rdx\\n         rep stosb byte [rdi],l\\n         goto loc_0x404ef1\\n\\n    loc_0x00404f32: // orphan\\n         rdi = rbx                // void *ptr\\n         rsi += rsi               // size_t size // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         qword [nbyte] = rsi\\n         sym.imp.realloc  ()\\n                                  // void *realloc(-1, -1)\\n         rbx = rax\\n         rax = qword [nbyte]\\n         cq\\n         r14 /=\\n         rdx = rbx + rax\\n         rcx = rax\\n         eax = 0                  // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         rdi = rdx\\n         rep stosb byte [rdi],l\\n         goto loc_0x404ef1\\n         // CODE XREF from sym.ftp_size @ 0x404f12(x)\\n         edi = dword [fildes]     // int fildes\\n         sym.imp.close  ()\\n                                  // int close(-1)\\n         dword [fildes] = 0xffffffff // -1\\n         rdi = rbp                // void **ptr // rsp\\n         sym.ftp_wait  ()         // sym.ftp_wait(0x178000, 0x0)\\n         eax -= 0xc8              // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         var = eax - 0x63         // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (((unsigned) var) > 0) goto 0x405002 // likely\\n\\n    loc_0x00404f5f: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x404f12(x)\\n         edi = dword [fildes]     // int fildes\\n         sym.imp.close  ()\\n                                  // int close(-1)\\n         dword [fildes] = 0xffffffff // -1\\n         rdi = rbp                // void **ptr // rsp\\n         sym.ftp_wait  ()         // sym.ftp_wait(0x178000, 0x0)\\n         eax -= 0xc8              // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         var = eax - 0x63         // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (((unsigned) var) > 0) goto 0x405002 // likely\\n         qword [rsp] = 1\\n         eax = 0                  // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n\\n    loc_0x00404f86: // orphan\\n         qword [rsp] = 1\\n         eax = 0                  // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         // CODE XREF from sym.ftp_size @ 0x404fd4(x)\\n         rcx = qword [rsp]        // (cstr 0x00000000) \\\"\\\\n\\\"\\n         dl = byte [rbx + rcx]\\n         var = dl & dl            // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (var) goto loc_0x404fa3 // unlikely\\n\\n    loc_0x00404f90: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x404fd4(x)\\n         rcx = qword [rsp]        // (cstr 0x00000000) \\\"\\\\n\\\"\\n         dl = byte [rbx + rcx]\\n         var = dl & dl            // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (var) goto loc_0x404fa3 // unlikely\\n         // CODE XREF from sym.ftp_size @ 0x404fa8(x)\\n         var = rax - 1            // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (!var) goto loc_0x40500f // unlikely\\n\\n    loc_0x00404f9b: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x404fa8(x)\\n         var = rax - 1            // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (!var) goto loc_0x40500f // unlikely\\n         goto loc_0x404fd6\\n\\n    loc_0x00404fa1: // orphan\\n         goto loc_0x404fd6\\n         // CODE XREF from sym.ftp_size @ 0x404f99(x)\\n         var = byte [rbx + rcx + 1] - 0 // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (!var) goto loc_0x404f9b // likely\\n\\n    loc_0x00404fa3: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x404f99(x)\\n         var = byte [rbx + rcx + 1] - 0 // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (!var) goto loc_0x404f9b // likely\\n         var = dl - 0x6c          // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (!var) goto loc_0x404fb4 // unlikely\\n\\n    loc_0x00404faa: // orphan\\n         var = dl - 0x6c          // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (!var) goto loc_0x404fb4 // unlikely\\n         var = dl - 0x2d          // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (var) goto loc_0x404fc5 // likely\\n\\n    loc_0x00404faf: // orphan\\n         var = dl - 0x2d          // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (var) goto loc_0x404fc5 // likely\\n         // CODE XREF from sym.ftp_size @ 0x404fad(x)\\n         rax+                     // (cstr 0x00000000) \\\"\\\\n\\\"\\n         goto loc_0x404fd0\\n\\n    loc_0x00404fb4: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x404fad(x)\\n         rax+                     // (cstr 0x00000000) \\\"\\\\n\\\"\\n         goto loc_0x404fd0\\n         // CODE XREF from sym.ftp_size @ 0x404fce(x)\\n         var = cl - 0xa           // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (!var) goto loc_0x404fd0 // unlikely\\n\\n    loc_0x00404fb9: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x404fce(x)\\n         var = cl - 0xa           // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (!var) goto loc_0x404fd0 // unlikely\\n         rdx+                     // (cstr 0x00000000) \\\"\\\\n\\\"\\n         qword [rsp] = rdx\\n\\n    loc_0x00404fbe: // orphan\\n         rdx+                     // (cstr 0x00000000) \\\"\\\\n\\\"\\n         qword [rsp] = rdx\\n         // CODE XREF from sym.ftp_size @ 0x404fb2(x)\\n         rdx = qword [rsp]        // (cstr 0x00000000) \\\"\\\\n\\\"\\n         cl = byte [rbx + rdx]\\n         var = cl & cl            // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (var) goto loc_0x404fb9 // unlikely\\n\\n    loc_0x00404fc5: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x404fb2(x)\\n         rdx = qword [rsp]        // (cstr 0x00000000) \\\"\\\\n\\\"\\n         cl = byte [rbx + rdx]\\n         var = cl & cl            // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (var) goto loc_0x404fb9 // unlikely\\n         // CODE XREFS from sym.ftp_size @ 0x404fb7(x), 0x404fbc(x)\\n         qword [rsp]++\\n         goto loc_0x404f90\\n\\n    loc_0x00404fd0: // orphan\\n         // CODE XREFS from sym.ftp_size @ 0x404fb7(x), 0x404fbc(x)\\n         qword [rsp]++\\n         goto loc_0x404f90\\n         // CODE XREF from sym.ftp_size @ 0x404fa1(x)\\n         var = rax & rax          // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         edx = 5                  // (cstr 0x00000000) \\\"\\\\n\\\"\\n         esi = str.File_not_found._n // 0x4067d8 // \\\"File not found.\\\\n\\\"\\n         if  (!var) goto loc_0x404fea // likely\\n\\n    loc_0x00404fd6: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x404fa1(x)\\n         var = rax & rax          // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         edx = 5                  // (cstr 0x00000000) \\\"\\\\n\\\"\\n         esi = str.File_not_found._n // 0x4067d8 // \\\"File not found.\\\\n\\\"\\n         if  (!var) goto loc_0x404fea // likely\\n         esi = str.Multiple_matches_for_this_URL._n // 0x4067f1 // \\\"Multiple matches for this URL.\\\\n\\\"\\n\\n    loc_0x00404fe5: // orphan\\n         esi = str.Multiple_matches_for_this_URL._n // 0x4067f1 // \\\"Multiple matches for this URL.\\\\n\\\"\\n         // CODE XREF from sym.ftp_size @ 0x404fe3(x)\\n         edi = 0                  // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         sym.imp.dcgettext  ()\\n         rdi = qword [arg_400h]   // char *s\\n         rsi = rax                // const char *format\\n         eax = 0                  // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         sym.imp.sprintf  ()\\n                                  // int sprintf(-1, -1, ?)\\n\\n    loc_0x00404fea: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x404fe3(x)\\n         edi = 0                  // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         sym.imp.dcgettext  ()\\n         rdi = qword [arg_400h]   // char *s\\n         rsi = rax                // const char *format\\n         eax = 0                  // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         sym.imp.sprintf  ()\\n                                  // int sprintf(-1, -1, ?)\\n         // CODE XREF from sym.ftp_size @ 0x404f84(x)\\n         rdi = rbx                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         goto loc_0x404e8f\\n\\n    loc_0x00405002: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x404f84(x)\\n         rdi = rbx                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         goto loc_0x404e8f\\n         // CODE XREF from sym.ftp_size @ 0x404f9f(x)\\n         esi = 0x406811           // '\\\\x11h@' // \\\"\\\\nl\\\" // const char *s2\\n         rdi = rbx                // const char *s1\\n         sym.imp.strstr  ()\\n                                  // char *strstr(-1, \\\"\\\\nl\\\")\\n         var = rax & rax          // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         r14 = rax\\n         if  (!var) goto loc_0x4050b2 // likely\\n\\n    loc_0x0040500f: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x404f9f(x)\\n         esi = 0x406811           // '\\\\x11h@' // \\\"\\\\nl\\\" // const char *s2\\n         rdi = rbx                // const char *s1\\n         sym.imp.strstr  ()\\n                                  // char *strstr(-1, \\\"\\\\nl\\\")\\n         var = rax & rax          // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         r14 = rax\\n         if  (!var) goto loc_0x4050b2 // likely\\n         rdx = dest\\n         rdi = rax                // const char *s\\n         esi = str._s__i__s__s__i__s__i__s__100s // 0x406814 // \\\"%*s %*i %*s %*s %*i %*s %*i %*s %100s\\\" // const char *format\\n         eax = 0                  // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         sym.imp.__isoc99_sscanf  ()\\n                                  // int sscanf(-1, \\\"%*s %*i %*s %*s %*i %*s %*i %*s %100s\\\", ?)\\n         rsi = dest               // const char *src\\n         rdi = r12                // char *dest\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(-1, \\\"\\\\x02\\\")\\n         esi = 0x40683a           // ':h@' // \\\"->\\\" // const char *s2\\n         rdi = r14                // const char *s1\\n         sym.imp.strstr  ()\\n                                  // char *strstr(-1, \\\"->\\\")\\n         rdi = dest               // char *dest\\n         rsi = rax + 3            // const char *src // (cstr 0x00000000) \\\"\\\\n\\\"\\n         edx = 0x400              // 1024 // size_t  n // (pstr 0x00000000) \\\"\\\\n\\\"\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\\x02\\\", \\\"\\\", 0x00000000)\\n         rdi = rbx                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         rdi = dest               // const char *s\\n         esi = 0xd                // int c // (cstr 0x00000000) \\\"\\\\n\\\"\\n         sym.imp.strchr  ()\\n                                  // char *strchr(\\\"\\\\x02\\\", 0x00000000)\\n         var = rax & rax          // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (!var) goto loc_0x405088 // likely\\n\\n    loc_0x00405028: // orphan\\n         rdx = dest\\n         rdi = rax                // const char *s\\n         esi = str._s__i__s__s__i__s__i__s__100s // 0x406814 // \\\"%*s %*i %*s %*s %*i %*s %*i %*s %100s\\\" // const char *format\\n         eax = 0                  // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         sym.imp.__isoc99_sscanf  ()\\n                                  // int sscanf(-1, \\\"%*s %*i %*s %*s %*i %*s %*i %*s %100s\\\", ?)\\n         rsi = dest               // const char *src\\n         rdi = r12                // char *dest\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(-1, \\\"\\\\x02\\\")\\n         esi = 0x40683a           // ':h@' // \\\"->\\\" // const char *s2\\n         rdi = r14                // const char *s1\\n         sym.imp.strstr  ()\\n                                  // char *strstr(-1, \\\"->\\\")\\n         rdi = dest               // char *dest\\n         rsi = rax + 3            // const char *src // (cstr 0x00000000) \\\"\\\\n\\\"\\n         edx = 0x400              // 1024 // size_t  n // (pstr 0x00000000) \\\"\\\\n\\\"\\n         sym.imp.strncpy  ()\\n                                  // char *strncpy(\\\"\\\\x02\\\", \\\"\\\", 0x00000000)\\n         rdi = rbx                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         rdi = dest               // const char *s\\n         esi = 0xd                // int c // (cstr 0x00000000) \\\"\\\\n\\\"\\n         sym.imp.strchr  ()\\n                                  // char *strchr(\\\"\\\\x02\\\", 0x00000000)\\n         var = rax & rax          // (cstr 0x00000000) \\\"\\\\n\\\" // (cstr 0x00000000) \\\"\\\\n\\\"\\n         if  (!var) goto loc_0x405088 // likely\\n         byte [rax] = 0\\n\\n    loc_0x00405085: // orphan\\n         byte [rax] = 0\\n         // CODE XREF from sym.ftp_size @ 0x405083(x)\\n         rdi = dest               // const char *s\\n         esi = 0xa                // int c\\n         sym.imp.strchr  ()\\n                                  // char *strchr(\\\"\\\\x02\\\", 0x00000000)\\n         var = rax & rax\\n         if  (!var) goto loc_0x40509f // likely\\n\\n    loc_0x00405088: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x405083(x)\\n         rdi = dest               // const char *s\\n         esi = 0xa                // int c\\n         sym.imp.strchr  ()\\n                                  // char *strchr(\\\"\\\\x02\\\", 0x00000000)\\n         var = rax & rax\\n         if  (!var) goto loc_0x40509f // likely\\n         byte [rax] = 0\\n\\n    loc_0x0040509c: // orphan\\n         byte [rax] = 0\\n         // CODE XREF from sym.ftp_size @ 0x40509a(x)\\n         edx = r13 - 1\\n         rsi = dest               // int64_t arg2\\n         rdi = rbp                // int64_t arg1 // rsp\\n         sym.ftp_size  ()         // rip // sym.ftp_size(0x178000, 0x178010, -1, 0x0, 0x0, 0x0)\\n         goto loc_0x40512e\\n\\n    loc_0x0040509f: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x40509a(x)\\n         edx = r13 - 1\\n         rsi = dest               // int64_t arg2\\n         rdi = rbp                // int64_t arg1 // rsp\\n         sym.ftp_size  ()         // rip // sym.ftp_size(0x178000, 0x178010, -1, 0x0, 0x0, 0x0)\\n         goto loc_0x40512e\\n         // CODE XREF from sym.ftp_size @ 0x405022(x)\\n         esi = 0x40683d           // '=h@' // \\\"\\\\n-\\\" // const char *s2\\n         rdi = rbx                // const char *s1\\n         sym.imp.strstr  ()\\n                                  // char *strstr(-1, \\\"\\\\n-\\\")\\n         rdx = nbyte\\n         rcx = dest\\n         rdi = rax                // const char *s\\n         rbp = rax\\n         esi = str._s__i__s__s__lld__s__i__s__100s // 0x406840 // \\\"%*s %*i %*s %*s %lld %*s %*i %*s %100s\\\" // const char *format\\n         eax = 0\\n         sym.imp.__isoc99_sscanf  ()\\n                                  // int sscanf(-1, \\\"%*s %*i %*s %*s %lld %*s %*i %*s %100s\\\", ?)\\n         rdx = eax\\n         qword [rsp] = rdx\\n         rdx-\\n         if  (var <= 0) goto loc_0x405103 // likely\\n\\n    loc_0x004050b2: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x405022(x)\\n         esi = 0x40683d           // '=h@' // \\\"\\\\n-\\\" // const char *s2\\n         rdi = rbx                // const char *s1\\n         sym.imp.strstr  ()\\n                                  // char *strstr(-1, \\\"\\\\n-\\\")\\n         rdx = nbyte\\n         rcx = dest\\n         rdi = rax                // const char *s\\n         rbp = rax\\n         esi = str._s__i__s__s__lld__s__i__s__100s // 0x406840 // \\\"%*s %*i %*s %*s %lld %*s %*i %*s %100s\\\" // const char *format\\n         eax = 0\\n         sym.imp.__isoc99_sscanf  ()\\n                                  // int sscanf(-1, \\\"%*s %*i %*s %*s %lld %*s %*i %*s %100s\\\", ?)\\n         rdx = eax\\n         qword [rsp] = rdx\\n         rdx-\\n         if  (var <= 0) goto loc_0x405103 // likely\\n         // CODE XREF from sym.ftp_size @ 0x405125(x)\\n         rsi = dest               // const char *src\\n         rdi = r12                // char *dest\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(-1, \\\"\\\\x02\\\")\\n         rdi = rbx                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         rax = qword [nbyte]\\n         goto loc_0x40512e\\n\\n    loc_0x004050e7: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x405125(x)\\n         rsi = dest               // const char *src\\n         rdi = r12                // char *dest\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(-1, \\\"\\\\x02\\\")\\n         rdi = rbx                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         rax = qword [nbyte]\\n         goto loc_0x40512e\\n         // CODE XREF from sym.ftp_size @ 0x4050e5(x)\\n         rcx = dest\\n         rdx = nbyte\\n         eax = 0\\n         esi = str._s__i__lld__i__s__i__i__100s // 0x406867 // \\\"%*s %*i %lld %*i %*s %*i %*i %100s\\\" // const char *format\\n         rdi = rbp                // const char *s // rsp\\n         sym.imp.__isoc99_sscanf  ()\\n                                  // int sscanf(\\\"\\\", \\\"%*s %*i %lld %*i %*s %*i %*i %100s\\\", ?)\\n         cdq\\n         qword [rsp] = rax\\n         rax-\\n         if  (var > 0) goto loc_0x4050e7 // unlikely\\n\\n    loc_0x00405103: // orphan\\n         // CODE XREF from sym.ftp_size @ 0x4050e5(x)\\n         rcx = dest\\n         rdx = nbyte\\n         eax = 0\\n         esi = str._s__i__lld__i__s__i__i__100s // 0x406867 // \\\"%*s %*i %lld %*i %*s %*i %*i %100s\\\" // const char *format\\n         rdi = rbp                // const char *s // rsp\\n         sym.imp.__isoc99_sscanf  ()\\n                                  // int sscanf(\\\"\\\", \\\"%*s %*i %lld %*i %*s %*i %*i %100s\\\", ?)\\n         cdq\\n         qword [rsp] = rax\\n         rax-\\n         if  (var > 0) goto loc_0x4050e7 // unlikely\\n         rax = 0xfffffffffffffffe\\n\\n    loc_0x00405127: // orphan\\n         rax = 0xfffffffffffffffe\\n\\n}\\n\"}\n"