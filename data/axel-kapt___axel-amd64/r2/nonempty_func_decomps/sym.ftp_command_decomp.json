"{\"annotations\":[{\"start\":58,\"end\":58,\"offset\":4212985,\"type\":\"offset\"},{\"start\":126,\"end\":126,\"offset\":4212985,\"type\":\"offset\"},{\"start\":194,\"end\":194,\"offset\":4212985,\"type\":\"offset\"},{\"start\":262,\"end\":262,\"offset\":4212985,\"type\":\"offset\"},{\"start\":313,\"end\":313,\"offset\":4212985,\"type\":\"offset\"},{\"start\":333,\"end\":333,\"offset\":4212987,\"type\":\"offset\"},{\"start\":353,\"end\":353,\"offset\":4212989,\"type\":\"offset\"},{\"start\":373,\"end\":373,\"offset\":4212991,\"type\":\"offset\"},{\"start\":393,\"end\":393,\"offset\":4212992,\"type\":\"offset\"},{\"start\":423,\"end\":423,\"offset\":4212995,\"type\":\"offset\"},{\"start\":443,\"end\":443,\"offset\":4212996,\"type\":\"offset\"},{\"start\":464,\"end\":464,\"offset\":4213003,\"type\":\"offset\"},{\"start\":486,\"end\":486,\"offset\":4213005,\"type\":\"offset\"},{\"start\":525,\"end\":525,\"offset\":4213013,\"type\":\"offset\"},{\"start\":564,\"end\":564,\"offset\":4213021,\"type\":\"offset\"},{\"start\":602,\"end\":602,\"offset\":4213029,\"type\":\"offset\"},{\"start\":640,\"end\":640,\"offset\":4213037,\"type\":\"offset\"},{\"start\":718,\"end\":718,\"offset\":4213103,\"type\":\"offset\"},{\"start\":774,\"end\":774,\"offset\":4213103,\"type\":\"offset\"},{\"start\":797,\"end\":797,\"offset\":4213111,\"type\":\"offset\"},{\"start\":813,\"end\":813,\"offset\":4213116,\"type\":\"offset\"},{\"start\":850,\"end\":850,\"offset\":4213121,\"type\":\"offset\"},{\"start\":894,\"end\":894,\"offset\":4213124,\"type\":\"offset\"},{\"start\":924,\"end\":924,\"offset\":4213127,\"type\":\"offset\"},{\"start\":969,\"end\":969,\"offset\":4213132,\"type\":\"offset\"},{\"start\":1002,\"end\":1002,\"offset\":4213135,\"type\":\"offset\"},{\"start\":1036,\"end\":1036,\"offset\":4213139,\"type\":\"offset\"},{\"start\":1052,\"end\":1052,\"offset\":4213141,\"type\":\"offset\"},{\"start\":1082,\"end\":1082,\"offset\":4213146,\"type\":\"offset\"},{\"start\":1105,\"end\":1105,\"offset\":4213154,\"type\":\"offset\"},{\"start\":1146,\"end\":1146,\"offset\":4213162,\"type\":\"offset\"},{\"start\":1183,\"end\":1183,\"offset\":4213162,\"type\":\"offset\"},{\"start\":1205,\"end\":1205,\"offset\":4213170,\"type\":\"offset\"},{\"start\":1235,\"end\":1235,\"offset\":4213175,\"type\":\"offset\"},{\"start\":1265,\"end\":1265,\"offset\":4213175,\"type\":\"offset\"},{\"start\":1305,\"end\":1305,\"offset\":4213180,\"type\":\"offset\"},{\"start\":1365,\"end\":1365,\"offset\":4213185,\"type\":\"offset\"},{\"start\":1399,\"end\":1399,\"offset\":4213188,\"type\":\"offset\"},{\"start\":1426,\"end\":1426,\"offset\":4213188,\"type\":\"offset\"},{\"start\":1462,\"end\":1462,\"offset\":4213193,\"type\":\"offset\"},{\"start\":1480,\"end\":1480,\"offset\":4213196,\"type\":\"offset\"},{\"start\":1496,\"end\":1496,\"offset\":4213198,\"type\":\"offset\"},{\"start\":1514,\"end\":1514,\"offset\":4213201,\"type\":\"offset\"},{\"start\":1547,\"end\":1547,\"offset\":4213203,\"type\":\"offset\"},{\"start\":1591,\"end\":1591,\"offset\":4213211,\"type\":\"offset\"},{\"start\":1632,\"end\":1632,\"offset\":4213214,\"type\":\"offset\"},{\"start\":1650,\"end\":1650,\"offset\":4213217,\"type\":\"offset\"},{\"start\":1669,\"end\":1669,\"offset\":4213220,\"type\":\"offset\"},{\"start\":1708,\"end\":1708,\"offset\":4213223,\"type\":\"offset\"},{\"start\":1734,\"end\":1734,\"offset\":4213223,\"type\":\"offset\"},{\"start\":1771,\"end\":1771,\"offset\":4213228,\"type\":\"offset\"},{\"start\":1789,\"end\":1789,\"offset\":4213231,\"type\":\"offset\"},{\"start\":1807,\"end\":1807,\"offset\":4213234,\"type\":\"offset\"},{\"start\":1825,\"end\":1825,\"offset\":4213237,\"type\":\"offset\"},{\"start\":1841,\"end\":1841,\"offset\":4213239,\"type\":\"offset\"},{\"start\":1874,\"end\":1874,\"offset\":4213241,\"type\":\"offset\"},{\"start\":1890,\"end\":1890,\"offset\":4213246,\"type\":\"offset\"},{\"start\":1909,\"end\":1909,\"offset\":4213249,\"type\":\"offset\"},{\"start\":1928,\"end\":1928,\"offset\":4213252,\"type\":\"offset\"},{\"start\":1952,\"end\":1952,\"offset\":4213255,\"type\":\"offset\"},{\"start\":2032,\"end\":2032,\"offset\":4213297,\"type\":\"offset\"},{\"start\":2088,\"end\":2088,\"offset\":4213297,\"type\":\"offset\"},{\"start\":2109,\"end\":2109,\"offset\":4213304,\"type\":\"offset\"},{\"start\":2131,\"end\":2131,\"offset\":4213305,\"type\":\"offset\"},{\"start\":2153,\"end\":2153,\"offset\":4213306,\"type\":\"offset\"},{\"start\":2175,\"end\":2175,\"offset\":4213308,\"type\":\"offset\"},{\"start\":2197,\"end\":2197,\"offset\":4213310,\"type\":\"offset\"},{\"start\":2219,\"end\":2219,\"offset\":4213312,\"type\":\"offset\"},{\"start\":2269,\"end\":2269,\"offset\":4213257,\"type\":\"offset\"},{\"start\":2285,\"end\":2285,\"offset\":4213262,\"type\":\"offset\"},{\"start\":2374,\"end\":2374,\"offset\":4213267,\"type\":\"offset\"},{\"start\":2390,\"end\":2390,\"offset\":4213269,\"type\":\"offset\"},{\"start\":2420,\"end\":2420,\"offset\":4213274,\"type\":\"offset\"},{\"start\":2465,\"end\":2465,\"offset\":4213282,\"type\":\"offset\"},{\"start\":2509,\"end\":2509,\"offset\":4213285,\"type\":\"offset\"},{\"start\":2546,\"end\":2546,\"offset\":4213288,\"type\":\"offset\"},{\"start\":2562,\"end\":2562,\"offset\":4213290,\"type\":\"offset\"},{\"start\":2590,\"end\":2590,\"offset\":4213290,\"type\":\"offset\"},{\"start\":2624,\"end\":2624,\"offset\":4213295,\"type\":\"offset\"}],\"code\":\"int sym.ftp_command (int esi, int edx) {\\n    loc_0x4048f9:\\n        // XREFS: CALL 0x0040439c  CALL 0x004044a5  CALL 0x00404527\\n        // XREFS: CALL 0x00404564  CALL 0x00404c86  CALL 0x00404ca7\\n        // XREFS: CALL 0x00404ce1  CALL 0x00404d31  CALL 0x00404d9f\\n        // XREFS: CALL 0x00404e16  CALL 0x00404eb1\\n        push  (r14)\\n        push  (r13)\\n        push  (r12)\\n        push  (rbp)\\n        r12 = rdi     // arg1\\n        push  (rbx)\\n        rsp -= 0x4d0\\n        var = al & al\\n        qword [var_430h] = rdx // arg3\\n        qword [var_438h] = rcx // arg4\\n        qword [var_440h] = r8 // arg5\\n        qword [var_448h] = r9 // arg6\\n        if  (!var) goto loc_0x40496f // likely\\n            \\n    loc_0x40496f:\\n        // CODE XREF from sym.ftp_command @ 0x40492d(x)\\n        rax = arg_500h\\n        r13 = s\\n        rcx = arg     // va_list arg\\n        rdx = rsi     // const char *format\\n        rbp = rsi     // arg2\\n        esi = 0x3fd   // 1021 // size_t size\\n        rdi = r13     // char *s\\n        r14 |= 0xffffffffffffffff\\n        ebx = 0\\n        qword [var_10h] = rax\\n        rax = var_420h\\n        dword [arg] = 0x10 // [0x10:4]=0\\n        dword [var_ch] = 0x30 // '0'\\n        // [0x30:4]=0\\n        qword [var_18h] = rax\\n        sym.imp.vsnprintf  ()\\n        // int vsnprintf(\\\"\\\", -1, -1, ?)\\n        esi = 0x406734 // '4g@' // \\\"\\\\r\\\\n\\\" // const char *s2\\n        rdi = r13     // char *s1\\n        sym.imp.strcat  ()\\n        // char *strcat(\\\"\\\", \\\"\\\\r\\\\n\\\")\\n        rdi = r13\\n        al = bl\\n        rcx = r14\\n        repne scasb al,yte [rdi]\\n        edi = dword [r12 + 0x40c] // int fd\\n        rsi = r13     // const char *ptr\\n        rdx = rcx\\n        rdx = !rdx\\n        rdx += r14    // size_t nbytes\\n        sym.imp.write  ()\\n        // ssize_t write(-1, \\\"\\\", -1)\\n        rcx = r14\\n        rsi = rax\\n        rdi = r13\\n        al = bl\\n        repne scasb al,yte [rdi]\\n        eax = 1\\n        rcx = !rcx\\n        rcx += r14\\n        var = rsi - rcx\\n        if  (!var) goto loc_0x404a31 // unlikely\\n            \\n    loc_0x404a31:\\n        // CODE XREF from sym.ftp_command @ 0x404a07(x)\\n        rsp += 0x4d0\\n        rbx = pop  ()\\n        rbp = pop  ()\\n        r12 = pop  ()\\n        r13 = pop  ()\\n        r14 = pop  ()\\n        re\\n         // } else {\\n    loc_0x404a09:\\n        edx = 5\\n        esi = str.Error_writing_command__s_n // 0x406737 // \\\"Error writing command %s\\\\n\\\"\\n        edi = 0\\n        sym.imp.dcgettext  ()\\n        rdi = qword [r12 + 0x400] // char *s\\n        rsi = rax     // const char *format\\n        rdx = rbp     //  ... // rsp\\n        eax = 0\\n        sym.imp.sprintf  ()\\n        // int sprintf(-1, -1, ?)\\n        eax = 0\\n         // } else {\\n        }\\n        return eax;\\n}\\n\"}\n"