"{\"annotations\":[{\"start\":54,\"end\":54,\"offset\":4206644,\"type\":\"offset\"},{\"start\":99,\"end\":99,\"offset\":4206644,\"type\":\"offset\"},{\"start\":119,\"end\":119,\"offset\":4206646,\"type\":\"offset\"},{\"start\":139,\"end\":139,\"offset\":4206648,\"type\":\"offset\"},{\"start\":155,\"end\":155,\"offset\":4206650,\"type\":\"offset\"},{\"start\":175,\"end\":175,\"offset\":4206652,\"type\":\"offset\"},{\"start\":195,\"end\":195,\"offset\":4206654,\"type\":\"offset\"},{\"start\":215,\"end\":215,\"offset\":4206655,\"type\":\"offset\"},{\"start\":235,\"end\":235,\"offset\":4206656,\"type\":\"offset\"},{\"start\":265,\"end\":265,\"offset\":4206659,\"type\":\"offset\"},{\"start\":285,\"end\":285,\"offset\":4206666,\"type\":\"offset\"},{\"start\":309,\"end\":309,\"offset\":4206671,\"type\":\"offset\"},{\"start\":351,\"end\":351,\"offset\":4206679,\"type\":\"offset\"},{\"start\":376,\"end\":376,\"offset\":4206683,\"type\":\"offset\"},{\"start\":469,\"end\":469,\"offset\":4206722,\"type\":\"offset\"},{\"start\":521,\"end\":521,\"offset\":4206722,\"type\":\"offset\"},{\"start\":543,\"end\":543,\"offset\":4206727,\"type\":\"offset\"},{\"start\":562,\"end\":562,\"offset\":4206732,\"type\":\"offset\"},{\"start\":578,\"end\":578,\"offset\":4206734,\"type\":\"offset\"},{\"start\":596,\"end\":596,\"offset\":4206737,\"type\":\"offset\"},{\"start\":607,\"end\":607,\"offset\":4206738,\"type\":\"offset\"},{\"start\":640,\"end\":640,\"offset\":4206741,\"type\":\"offset\"},{\"start\":675,\"end\":675,\"offset\":4206748,\"type\":\"offset\"},{\"start\":691,\"end\":691,\"offset\":4206751,\"type\":\"offset\"},{\"start\":707,\"end\":707,\"offset\":4206754,\"type\":\"offset\"},{\"start\":741,\"end\":741,\"offset\":4206759,\"type\":\"offset\"},{\"start\":792,\"end\":792,\"offset\":4206764,\"type\":\"offset\"},{\"start\":844,\"end\":844,\"offset\":4206764,\"type\":\"offset\"},{\"start\":869,\"end\":869,\"offset\":4206767,\"type\":\"offset\"},{\"start\":1000,\"end\":1202,\"offset\":4206767,\"type\":\"offset\"},{\"start\":1435,\"end\":1638,\"offset\":4206767,\"type\":\"offset\"},{\"start\":1872,\"end\":2025,\"offset\":4206767,\"type\":\"offset\"},{\"start\":2209,\"end\":2336,\"offset\":4206767,\"type\":\"offset\"},{\"start\":2494,\"end\":2617,\"offset\":4206767,\"type\":\"offset\"},{\"start\":2771,\"end\":2869,\"offset\":4206767,\"type\":\"offset\"},{\"start\":2998,\"end\":3568,\"offset\":4206767,\"type\":\"offset\"},{\"start\":4169,\"end\":4232,\"offset\":4206767,\"type\":\"offset\"},{\"start\":4326,\"end\":4541,\"offset\":4206767,\"type\":\"offset\"},{\"start\":4787,\"end\":4894,\"offset\":4206767,\"type\":\"offset\"},{\"start\":5032,\"end\":5194,\"offset\":4206767,\"type\":\"offset\"},{\"start\":5387,\"end\":5414,\"offset\":4206767,\"type\":\"offset\"},{\"start\":5472,\"end\":5724,\"offset\":4206767,\"type\":\"offset\"},{\"start\":6007,\"end\":6496,\"offset\":4206767,\"type\":\"offset\"},{\"start\":7016,\"end\":7105,\"offset\":4206767,\"type\":\"offset\"},{\"start\":7225,\"end\":7689,\"offset\":4206767,\"type\":\"offset\"},{\"start\":8184,\"end\":8346,\"offset\":4206767,\"type\":\"offset\"},{\"start\":8539,\"end\":8693,\"offset\":4206767,\"type\":\"offset\"},{\"start\":8878,\"end\":8967,\"offset\":4206767,\"type\":\"offset\"},{\"start\":9087,\"end\":9246,\"offset\":4206767,\"type\":\"offset\"},{\"start\":9436,\"end\":9535,\"offset\":4206767,\"type\":\"offset\"},{\"start\":9665,\"end\":9864,\"offset\":4206767,\"type\":\"offset\"},{\"start\":10094,\"end\":10311,\"offset\":4206767,\"type\":\"offset\"},{\"start\":10559,\"end\":10841,\"offset\":4206767,\"type\":\"offset\"},{\"start\":11154,\"end\":11321,\"offset\":4206767,\"type\":\"offset\"},{\"start\":11519,\"end\":11553,\"offset\":4206767,\"type\":\"offset\"},{\"start\":11618,\"end\":11712,\"offset\":4206767,\"type\":\"offset\"},{\"start\":11837,\"end\":12013,\"offset\":4206767,\"type\":\"offset\"},{\"start\":12220,\"end\":12449,\"offset\":4206767,\"type\":\"offset\"},{\"start\":12709,\"end\":12798,\"offset\":4206767,\"type\":\"offset\"},{\"start\":12918,\"end\":13344,\"offset\":4206767,\"type\":\"offset\"},{\"start\":13801,\"end\":14072,\"offset\":4206767,\"type\":\"offset\"},{\"start\":14374,\"end\":14909,\"offset\":4206767,\"type\":\"offset\"},{\"start\":15475,\"end\":15930,\"offset\":4206767,\"type\":\"offset\"},{\"start\":16416,\"end\":16611,\"offset\":4206767,\"type\":\"offset\"},{\"start\":16837,\"end\":17135,\"offset\":4206767,\"type\":\"offset\"},{\"start\":17464,\"end\":17553,\"offset\":4206767,\"type\":\"offset\"},{\"start\":17673,\"end\":18101,\"offset\":4206767,\"type\":\"offset\"},{\"start\":18560,\"end\":18872,\"offset\":4206767,\"type\":\"offset\"},{\"start\":19215,\"end\":19355,\"offset\":4206767,\"type\":\"offset\"},{\"start\":19526,\"end\":19553,\"offset\":4206767,\"type\":\"offset\"},{\"start\":19611,\"end\":19827,\"offset\":4206767,\"type\":\"offset\"},{\"start\":20074,\"end\":20194,\"offset\":4206767,\"type\":\"offset\"},{\"start\":20345,\"end\":20486,\"offset\":4206767,\"type\":\"offset\"},{\"start\":20658,\"end\":20685,\"offset\":4206767,\"type\":\"offset\"},{\"start\":20743,\"end\":20926,\"offset\":4206767,\"type\":\"offset\"},{\"start\":21140,\"end\":21229,\"offset\":4206767,\"type\":\"offset\"},{\"start\":21349,\"end\":21871,\"offset\":4206767,\"type\":\"offset\"},{\"start\":22424,\"end\":23214,\"offset\":4206767,\"type\":\"offset\"},{\"start\":24035,\"end\":24482,\"offset\":4206767,\"type\":\"offset\"},{\"start\":24960,\"end\":25116,\"offset\":4206767,\"type\":\"offset\"},{\"start\":25303,\"end\":25817,\"offset\":4206767,\"type\":\"offset\"},{\"start\":26362,\"end\":26726,\"offset\":4206767,\"type\":\"offset\"},{\"start\":27121,\"end\":27287,\"offset\":4206767,\"type\":\"offset\"},{\"start\":27484,\"end\":28255,\"offset\":4206767,\"type\":\"offset\"},{\"start\":29057,\"end\":29263,\"offset\":4206767,\"type\":\"offset\"},{\"start\":29500,\"end\":29584,\"offset\":4206767,\"type\":\"offset\"},{\"start\":29699,\"end\":29939,\"offset\":4206767,\"type\":\"offset\"},{\"start\":30210,\"end\":30328,\"offset\":4206767,\"type\":\"offset\"},{\"start\":30477,\"end\":30563,\"offset\":4206767,\"type\":\"offset\"},{\"start\":30680,\"end\":30796,\"offset\":4206767,\"type\":\"offset\"},{\"start\":30943,\"end\":31030,\"offset\":4206767,\"type\":\"offset\"},{\"start\":31148,\"end\":31353,\"offset\":4206767,\"type\":\"offset\"},{\"start\":31589,\"end\":31767,\"offset\":4206767,\"type\":\"offset\"},{\"start\":31976,\"end\":32010,\"offset\":4206767,\"type\":\"offset\"},{\"start\":32075,\"end\":32339,\"offset\":4206767,\"type\":\"offset\"}],\"code\":\"int sym.axel_do (int esi, int edx) {\\n    loc_0x403034:\\n        // CALL XREF from main @ 0x402009(x)\\n        push  (r15)\\n        push  (r14)\\n        eax = 0\\n        push  (r13)\\n        push  (r12)\\n        push  (rbp)\\n        push  (rbx)\\n        rbx = rdi     // arg1\\n        rsp -= 0xa8\\n        sym.gettime  ()\\n        cvtsi2sd xmm1,word [rbx + 0x3c58]\\n        ucomisd xmm0,mm1\\n        if  (((unsigned) var) <= 0) goto 0x403082 // unlikely\\n            \\n    loc_0x403082:\\n        // CODE XREF from sym.axel_do @ 0x40305b(x)\\n        rsi = var_20h\\n        ecx = 0x10\\n        eax = 0\\n        rdi = rsi\\n        cl\\n        rep stosq qword [rdi],ax\\n        r11d = dword [rbx + 0xc18]\\n        r9d = 0\\n        r8d = 0\\n        edi = 0x40    // elf_phdr\\n        ebp = 1\\n         // do {\\n    loc_0x4030ac:\\n        // CODE XREF from sym.axel_do @ 0x4030ea(x)\\n        var = r11d - r9d\\n        if  (var <= 0) goto loc_0x4030ec // likely\\n         // } while (?);\\n         // } while (?);\\n        }\\n        return eax;             rax = r9 * 0x30a8\\n             rax += qword [rbx]\\n             var = dword [rax + 0x307c] - 0\\n             r10d = dword [rax + 0x3078]\\n             if  (!var) goto loc_0x4030e0 // unlikely\\n\\n    loc_0x004030b1: // orphan\\n             rax = r9 * 0x30a8\\n             rax += qword [rbx]\\n             var = dword [rax + 0x307c] - 0\\n             r10d = dword [rax + 0x3078]\\n             if  (!var) goto loc_0x4030e0 // unlikely\\n         eax = r10d\\n         r15 = rbp                // rsp\\n         cd\\n         edi /=\\n         cdq\\n         cl = dl\\n         r15 <<<= cl              // rsp\\n         qword [rsp + rax*8 + 0x20] |= r15\\n\\n    loc_0x004030cb: // orphan\\n         eax = r10d\\n         r15 = rbp                // rsp\\n         cd\\n         edi /=\\n         cdq\\n         cl = dl\\n         r15 <<<= cl              // rsp\\n         qword [rsp + rax*8 + 0x20] |= r15\\n         // CODE XREF from sym.axel_do @ 0x4030c9(x)\\n         var = r8d - r10d\\n         if  (var < 0) r8d = r10d\\n         r9+\\n         goto loc_0x4030ac\\n\\n    loc_0x004030e0: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4030c9(x)\\n         var = r8d - r10d\\n         if  (var < 0) r8d = r10d\\n         r9+\\n         goto loc_0x4030ac\\n         // CODE XREF from sym.axel_do @ 0x4030af(x)\\n         var = r8d & r8d\\n         if  (var) goto loc_0x403103 // unlikely\\n\\n    loc_0x004030ec: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4030af(x)\\n         var = r8d & r8d\\n         if  (var) goto loc_0x403103 // unlikely\\n         edi = 0x186a0            // int s\\n         sym.imp.usleep  ()\\n                                  // int usleep(-1)\\n\\n    loc_0x004030f1: // orphan\\n         edi = 0x186a0            // int s\\n         sym.imp.usleep  ()\\n                                  // int usleep(-1)\\n         // CODE XREF from sym.axel_do @ 0x4033cb(x)\\n         r12d = 0\\n         goto loc_0x4033e9\\n\\n    loc_0x004030fb: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4033cb(x)\\n         r12d = 0\\n         goto loc_0x4033e9\\n         // CODE XREF from sym.axel_do @ 0x4030ef(x)\\n         edi = r8 + 1\\n         r8 = timeout             // struct timeval *timeout\\n         ecx = 0                  // fd_set *exceptfds\\n         edx = 0                  // fd_set *writefds\\n         qword [timeout] = 0\\n         qword [var_18h] = 0x186a0 // [0x186a0:8]=-1\\n         r12d = 0\\n         r15d = 0x40              // elf_phdr\\n         sym.imp.select  ()\\n                                  // int select(0x00000000, ?, ?, ?, ?)\\n         var = eax - 0xffffffff\\n         if  (var) goto loc_0x40315a // likely\\n\\n    loc_0x00403103: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4030ef(x)\\n         edi = r8 + 1\\n         r8 = timeout             // struct timeval *timeout\\n         ecx = 0                  // fd_set *exceptfds\\n         edx = 0                  // fd_set *writefds\\n         qword [timeout] = 0\\n         qword [var_18h] = 0x186a0 // [0x186a0:8]=-1\\n         r12d = 0\\n         r15d = 0x40              // elf_phdr\\n         sym.imp.select  ()\\n                                  // int select(0x00000000, ?, ?, ?, ?)\\n         var = eax - 0xffffffff\\n         if  (var) goto loc_0x40315a // likely\\n         dword [rbx + 0x3c84] = eax\\n         goto loc_0x40363f\\n\\n    loc_0x00403135: // orphan\\n         dword [rbx + 0x3c84] = eax\\n         goto loc_0x40363f\\n         // CODE XREF from sym.axel_do @ 0x403164(x)\\n         rbp = r12 * 0x30a8\\n         r13 = rbp\\n         r13 += qword [rbx]\\n         var = dword [r13 + 0x307c] - 0\\n         if  (var) goto loc_0x40316b // likely\\n\\n    loc_0x00403140: // orphan\\n         // CODE XREF from sym.axel_do @ 0x403164(x)\\n         rbp = r12 * 0x30a8\\n         r13 = rbp\\n         r13 += qword [rbx]\\n         var = dword [r13 + 0x307c] - 0\\n         if  (var) goto loc_0x40316b // likely\\n         // CODE XREFS from sym.axel_do @ 0x40327f(x), 0x40334e(x), 0x403370(x), 0x4033b9(x)\\n         r12+\\n\\n    loc_0x00403157: // orphan\\n         // CODE XREFS from sym.axel_do @ 0x40327f(x), 0x40334e(x), 0x403370(x), 0x4033b9(x)\\n         r12+\\n         // CODE XREF from sym.axel_do @ 0x403133(x)\\n         var = r12d - dword [rbx + 0xc18]\\n         r14d = r12d\\n         jl 0x403140              // unlikely\\n\\n    loc_0x0040315a: // orphan\\n         // CODE XREF from sym.axel_do @ 0x403133(x)\\n         var = r12d - dword [rbx + 0xc18]\\n         r14d = r12d\\n         jl 0x403140              // unlikely\\n         goto loc_0x4033be\\n\\n    loc_0x00403166: // orphan\\n         goto loc_0x4033be\\n         // CODE XREF from sym.axel_do @ 0x403155(x)\\n         eax = dword [r13 + 0x3078]\\n         cd\\n         r15d /=\\n         cdq\\n         rax = qword [rsp + rax*8 + 0x20]\\n         bt rax,dx\\n         al = 0\\n         jae 0x403353             // likely\\n\\n    loc_0x0040316b: // orphan\\n         // CODE XREF from sym.axel_do @ 0x403155(x)\\n         eax = dword [r13 + 0x3078]\\n         cd\\n         r15d /=\\n         cdq\\n         rax = qword [rsp + rax*8 + 0x20]\\n         bt rax,dx\\n         al = 0\\n         jae 0x403353             // likely\\n         sym.gettime  ()\\n         cvttsd2si eax,mm0\\n         rdx = dword [rbx + 0xc1c] // size_t nbyte\\n         rsi = qword [obj.buffer] // [0x608670:8]=0 // void *buf\\n         dword [r13 + 0x3084] = eax\\n         rax = qword [rbx]\\n         edi = dword [rax + rbp + 0x3078] // int fildes\\n         sym.imp.read  ()\\n                                  // ssize_t read(-1, -1, 0x00000000)\\n         var = rax - 0xffffffffffffffff\\n         r13 = rax\\n         if  (var) goto loc_0x4031f1 // likely\\n\\n    loc_0x00403189: // orphan\\n         sym.gettime  ()\\n         cvttsd2si eax,mm0\\n         rdx = dword [rbx + 0xc1c] // size_t nbyte\\n         rsi = qword [obj.buffer] // [0x608670:8]=0 // void *buf\\n         dword [r13 + 0x3084] = eax\\n         rax = qword [rbx]\\n         edi = dword [rax + rbp + 0x3078] // int fildes\\n         sym.imp.read  ()\\n                                  // ssize_t read(-1, -1, 0x00000000)\\n         var = rax - 0xffffffffffffffff\\n         r13 = rax\\n         if  (var) goto loc_0x4031f1 // likely\\n         var = dword [rbx + 0xc24] - 0\\n         if  (!var) goto loc_0x4031e9 // unlikely\\n\\n    loc_0x004031bf: // orphan\\n         var = dword [rbx + 0xc24] - 0\\n         if  (!var) goto loc_0x4031e9 // unlikely\\n         edx = 5\\n         esi = str.Error_on_connection__i__Connection_closed // 0x4063df // \\\"Error on connection %i! Connection closed\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = r12d               // int64_t arg3\\n         rsi = rax                // int64_t arg2\\n         rdi = rbx                // int64_t arg1\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n\\n    loc_0x004031c8: // orphan\\n         edx = 5\\n         esi = str.Error_on_connection__i__Connection_closed // 0x4063df // \\\"Error on connection %i! Connection closed\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = r12d               // int64_t arg3\\n         rsi = rax                // int64_t arg2\\n         rdi = rbx                // int64_t arg1\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         // CODE XREF from sym.axel_do @ 0x4031c6(x)\\n         rdi = rbp                // rsp\\n         rdi += qword [rbx]       // rsp\\n         goto loc_0x403270\\n\\n    loc_0x004031e9: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4031c6(x)\\n         rdi = rbp                // rsp\\n         rdi += qword [rbx]       // rsp\\n         goto loc_0x403270\\n         // CODE XREF from sym.axel_do @ 0x4031bd(x)\\n         var = rax & rax\\n         rax = qword [rbx]\\n         if  (var) goto loc_0x403284 // unlikely\\n\\n    loc_0x004031f1: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4031bd(x)\\n         var = rax & rax\\n         rax = qword [rbx]\\n         if  (var) goto loc_0x403284 // unlikely\\n         var = dword [rbx + 0xc24] - 0\\n         if  (!var) goto loc_0x403257 // unlikely\\n\\n    loc_0x004031fd: // orphan\\n         var = dword [rbx + 0xc24] - 0\\n         if  (!var) goto loc_0x403257 // unlikely\\n         rcx = qword [rax + rbp + 0x3070]\\n         var = qword [rax + rbp + 0x3068] - rcx\\n         edx = 5\\n         if  (var >= 0) goto loc_0x40323b // likely\\n\\n    loc_0x00403206: // orphan\\n         rcx = qword [rax + rbp + 0x3070]\\n         var = qword [rax + rbp + 0x3068] - rcx\\n         edx = 5\\n         if  (var >= 0) goto loc_0x40323b // likely\\n         var = qword [rbx + 0x3c70] - 0x7fffffff\\n         if  (!var) goto loc_0x40323b // unlikely\\n\\n    loc_0x0040321d: // orphan\\n         var = qword [rbx + 0x3c70] - 0x7fffffff\\n         if  (!var) goto loc_0x40323b // unlikely\\n         esi = str.Connection__i_unexpectedly_closed // 0x406409 // \\\"Connection %i unexpectedly closed\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = r12d\\n         goto loc_0x40324a\\n\\n    loc_0x0040322a: // orphan\\n         esi = str.Connection__i_unexpectedly_closed // 0x406409 // \\\"Connection %i unexpectedly closed\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = r12d\\n         goto loc_0x40324a\\n         // CODE XREFS from sym.axel_do @ 0x40321b(x), 0x403228(x)\\n         esi = str.Connection__i_finished // 0x40642b // \\\"Connection %i finished\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = r14d\\n\\n    loc_0x0040323b: // orphan\\n         // CODE XREFS from sym.axel_do @ 0x40321b(x), 0x403228(x)\\n         esi = str.Connection__i_finished // 0x40642b // \\\"Connection %i finished\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = r14d\\n         // CODE XREF from sym.axel_do @ 0x403239(x)\\n         rsi = rax                // int64_t arg2\\n         rdi = rbx                // int64_t arg1\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n\\n    loc_0x0040324a: // orphan\\n         // CODE XREF from sym.axel_do @ 0x403239(x)\\n         rsi = rax                // int64_t arg2\\n         rdi = rbx                // int64_t arg1\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         // CODE XREF from sym.axel_do @ 0x403204(x)\\n         rdi = qword [rbx]\\n         var = dword [rdi + 0x3080] - 0\\n         if  (var) goto loc_0x40326d // likely\\n\\n    loc_0x00403257: // orphan\\n         // CODE XREF from sym.axel_do @ 0x403204(x)\\n         rdi = qword [rbx]\\n         var = dword [rdi + 0x3080] - 0\\n         if  (var) goto loc_0x40326d // likely\\n         dword [rbx + 0x3c84] = 1\\n\\n    loc_0x00403263: // orphan\\n         dword [rbx + 0x3c84] = 1\\n         // CODE XREF from sym.axel_do @ 0x403261(x)\\n         rdi += rbp               // rsp\\n\\n    loc_0x0040326d: // orphan\\n         // CODE XREF from sym.axel_do @ 0x403261(x)\\n         rdi += rbp               // rsp\\n         // CODE XREF from sym.axel_do @ 0x4031ef(x)\\n         dword [rdi + 0x307c] = 0\\n         sym.conn_disconnect  ()  // sym.conn_disconnect(0x0)\\n         goto loc_0x403157\\n\\n    loc_0x00403270: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4031ef(x)\\n         dword [rdi + 0x307c] = 0\\n         sym.conn_disconnect  ()  // sym.conn_disconnect(0x0)\\n         goto loc_0x403157\\n         // CODE XREF from sym.axel_do @ 0x4031f7(x)\\n         r14 = qword [rax + rbp + 0x3070]\\n         r14 -= qword [rax + rbp + 0x3068]\\n         r14+\\n         var = r14 - r13\\n         if  (var >= 0) goto loc_0x4032de // likely\\n\\n    loc_0x00403284: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4031f7(x)\\n         r14 = qword [rax + rbp + 0x3070]\\n         r14 -= qword [rax + rbp + 0x3068]\\n         r14+\\n         var = r14 - r13\\n         if  (var >= 0) goto loc_0x4032de // likely\\n         var = dword [rbx + 0xc24] - 0\\n         if  (!var) goto loc_0x4032c6 // unlikely\\n\\n    loc_0x0040329c: // orphan\\n         var = dword [rbx + 0xc24] - 0\\n         if  (!var) goto loc_0x4032c6 // unlikely\\n         edx = 5\\n         esi = str.Connection__i_finished // 0x40642b // \\\"Connection %i finished\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = r12d               // int64_t arg3\\n         rsi = rax                // int64_t arg2\\n         rdi = rbx                // int64_t arg1\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n\\n    loc_0x004032a5: // orphan\\n         edx = 5\\n         esi = str.Connection__i_finished // 0x40642b // \\\"Connection %i finished\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = r12d               // int64_t arg3\\n         rsi = rax                // int64_t arg2\\n         rdi = rbx                // int64_t arg1\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         // CODE XREF from sym.axel_do @ 0x4032a3(x)\\n         rdi = rbp                // rsp\\n         rdi += qword [rbx]       // int64_t arg1 // rsp\\n         r13 = r14\\n         dword [rdi + 0x307c] = 0\\n         sym.conn_disconnect  ()  // sym.conn_disconnect(0x178000)\\n\\n    loc_0x004032c6: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4032a3(x)\\n         rdi = rbp                // rsp\\n         rdi += qword [rbx]       // int64_t arg1 // rsp\\n         r13 = r14\\n         dword [rdi + 0x307c] = 0\\n         sym.conn_disconnect  ()  // sym.conn_disconnect(0x178000)\\n         // CODE XREF from sym.axel_do @ 0x40329a(x)\\n         rax = qword [rbx]\\n         edi = dword [rbx + 0x3c80]\\n         edx = 0\\n         rsi = qword [rax + rbp + 0x3068]\\n         sym.imp.lseek64  ()\\n         edi = dword [rbx + 0x3c80] // int fd\\n         rsi = qword [obj.buffer] // [0x608670:8]=0 // const char *ptr\\n         rdx = r13                // size_t nbytes\\n         sym.imp.write  ()\\n                                  // ssize_t write(-1, -1, -1)\\n         var = rax - r13\\n         if  (!var) goto loc_0x40333d // likely\\n\\n    loc_0x004032de: // orphan\\n         // CODE XREF from sym.axel_do @ 0x40329a(x)\\n         rax = qword [rbx]\\n         edi = dword [rbx + 0x3c80]\\n         edx = 0\\n         rsi = qword [rax + rbp + 0x3068]\\n         sym.imp.lseek64  ()\\n         edi = dword [rbx + 0x3c80] // int fd\\n         rsi = qword [obj.buffer] // [0x608670:8]=0 // const char *ptr\\n         rdx = r13                // size_t nbytes\\n         sym.imp.write  ()\\n                                  // ssize_t write(-1, -1, -1)\\n         var = rax - r13\\n         if  (!var) goto loc_0x40333d // likely\\n         edx = 5\\n         esi = str.Write_error_   // 0x406442 // \\\"Write error!\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         rdi = rbx                // int64_t arg1\\n         rsi = rax                // int64_t arg2\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         dword [rbx + 0x3c84] = 0xffffffff // [0xffffffff:4]=-1 // -1\\n         goto loc_0x40363f\\n\\n    loc_0x00403310: // orphan\\n         edx = 5\\n         esi = str.Write_error_   // 0x406442 // \\\"Write error!\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         rdi = rbx                // int64_t arg1\\n         rsi = rax                // int64_t arg2\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         dword [rbx + 0x3c84] = 0xffffffff // [0xffffffff:4]=-1 // -1\\n         goto loc_0x40363f\\n         // CODE XREF from sym.axel_do @ 0x40330e(x)\\n         rbp += qword [rbx]       // rsp\\n         qword [rbp + 0x3068] += r13\\n         qword [rbx + 0x3c60] += r13\\n         goto loc_0x403157\\n\\n    loc_0x0040333d: // orphan\\n         // CODE XREF from sym.axel_do @ 0x40330e(x)\\n         rbp += qword [rbx]       // rsp\\n         qword [rbp + 0x3068] += r13\\n         qword [rbx + 0x3c60] += r13\\n         goto loc_0x403157\\n         // CODE XREF from sym.axel_do @ 0x403183(x)\\n         sym.gettime  ()\\n         rdx = qword [rbx]\\n         eax = dword [rbx + 0xc10]\\n         eax += dword [rdx + rbp + 0x3084]\\n         cvtsi2sd xmm1,ax\\n         ucomisd xmm0,mm1\\n         if  (((unsigned) var) <= 0) goto 0x403157 // unlikely\\n\\n    loc_0x00403353: // orphan\\n         // CODE XREF from sym.axel_do @ 0x403183(x)\\n         sym.gettime  ()\\n         rdx = qword [rbx]\\n         eax = dword [rbx + 0xc10]\\n         eax += dword [rdx + rbp + 0x3084]\\n         cvtsi2sd xmm1,ax\\n         ucomisd xmm0,mm1\\n         if  (((unsigned) var) <= 0) goto 0x403157 // unlikely\\n         var = dword [rbx + 0xc24] - 0\\n         if  (!var) goto loc_0x4033a0 // unlikely\\n\\n    loc_0x00403376: // orphan\\n         var = dword [rbx + 0xc24] - 0\\n         if  (!var) goto loc_0x4033a0 // unlikely\\n         edx = 5\\n         esi = str.Connection__i_timed_out // 0x40644f // \\\"Connection %i timed out\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = r12d               // int64_t arg3\\n         rsi = rax                // int64_t arg2\\n         rdi = rbx                // int64_t arg1\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n\\n    loc_0x0040337f: // orphan\\n         edx = 5\\n         esi = str.Connection__i_timed_out // 0x40644f // \\\"Connection %i timed out\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = r12d               // int64_t arg3\\n         rsi = rax                // int64_t arg2\\n         rdi = rbx                // int64_t arg1\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         // CODE XREF from sym.axel_do @ 0x40337d(x)\\n         rdi = rbp                // rsp\\n         rdi += qword [rbx]       // int64_t arg1 // rsp\\n         sym.conn_disconnect  ()  // sym.conn_disconnect(0x178000)\\n         rax = qword [rbx]\\n         dword [rax + rbp + 0x307c] = 0\\n         goto loc_0x403157\\n\\n    loc_0x004033a0: // orphan\\n         // CODE XREF from sym.axel_do @ 0x40337d(x)\\n         rdi = rbp                // rsp\\n         rdi += qword [rbx]       // int64_t arg1 // rsp\\n         sym.conn_disconnect  ()  // sym.conn_disconnect(0x178000)\\n         rax = qword [rbx]\\n         dword [rax + rbp + 0x307c] = 0\\n         goto loc_0x403157\\n         // CODE XREF from sym.axel_do @ 0x403166(x)\\n         var = dword [rbx + 0x3c84] - 0\\n         if  (var) goto loc_0x40363f // likely\\n\\n    loc_0x004033be: // orphan\\n         // CODE XREF from sym.axel_do @ 0x403166(x)\\n         var = dword [rbx + 0x3c84] - 0\\n         if  (var) goto loc_0x40363f // likely\\n         goto loc_0x4030fb\\n\\n    loc_0x004033cb: // orphan\\n         goto loc_0x4030fb\\n         // CODE XREF from sym.axel_do @ 0x4033f0(x)\\n         rbp = r12 * 0x30a8\\n         rax = rbp\\n         rax += qword [rbx]\\n         var = dword [rax + 0x307c] - 0\\n         if  (!var) goto loc_0x4033f7 // likely\\n\\n    loc_0x004033d0: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4033f0(x)\\n         rbp = r12 * 0x30a8\\n         rax = rbp\\n         rax += qword [rbx]\\n         var = dword [rax + 0x307c] - 0\\n         if  (!var) goto loc_0x4033f7 // likely\\n         // CODE XREFS from sym.axel_do @ 0x403405(x), 0x4034d3(x), 0x403500(x), 0x403526(x), 0x403546(x)\\n         r12+\\n\\n    loc_0x004033e6: // orphan\\n         // CODE XREFS from sym.axel_do @ 0x403405(x), 0x4034d3(x), 0x403500(x), 0x403526(x), 0x403546(x)\\n         r12+\\n         // CODE XREF from sym.axel_do @ 0x4030fe(x)\\n         var = r12d - dword [rbx + 0xc18]\\n         jl 0x4033d0              // unlikely\\n\\n    loc_0x004033e9: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4030fe(x)\\n         var = r12d - dword [rbx + 0xc18]\\n         jl 0x4033d0              // unlikely\\n         goto loc_0x40354b\\n\\n    loc_0x004033f2: // orphan\\n         goto loc_0x40354b\\n         // CODE XREF from sym.axel_do @ 0x4033e4(x)\\n         rcx = qword [rax + 0x3070]\\n         var = qword [rax + 0x3068] - rcx\\n         if  (var >= 0) goto loc_0x4033e6 // likely\\n\\n    loc_0x004033f7: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4033e4(x)\\n         rcx = qword [rax + 0x3070]\\n         var = qword [rax + 0x3068] - rcx\\n         if  (var >= 0) goto loc_0x4033e6 // likely\\n         var = dword [rax + 0x3098] - 0\\n         if  (var) goto loc_0x403505 // unlikely\\n\\n    loc_0x00403407: // orphan\\n         var = dword [rax + 0x3098] - 0\\n         if  (var) goto loc_0x403505 // unlikely\\n         rdi = qword [rax + 0x30a0]\\n         esi = 0\\n         sym.imp.pthread_join  ()\\n         rax = qword [rbx + 0x3c90]\\n         rdi = rbp                // rsp\\n         rdi += qword [rbx]       // int64_t arg1 // rsp\\n         rsi = rax + 8            // char *s1\\n         sym.conn_set  ()         // sym.conn_set(0x178000, 0x8)\\n         rax = qword [rbx + 0x3c90]\\n         var = dword [rbx + 0xc24] - 1\\n         rax = qword [rax]\\n         qword [rbx + 0x3c90] = rax\\n         if  (var <= 0) goto loc_0x40349a // likely\\n\\n    loc_0x00403414: // orphan\\n         rdi = qword [rax + 0x30a0]\\n         esi = 0\\n         sym.imp.pthread_join  ()\\n         rax = qword [rbx + 0x3c90]\\n         rdi = rbp                // rsp\\n         rdi += qword [rbx]       // int64_t arg1 // rsp\\n         rsi = rax + 8            // char *s1\\n         sym.conn_set  ()         // sym.conn_set(0x178000, 0x8)\\n         rax = qword [rbx + 0x3c90]\\n         var = dword [rbx + 0xc24] - 1\\n         rax = qword [rax]\\n         qword [rbx + 0x3c90] = rax\\n         if  (var <= 0) goto loc_0x40349a // likely\\n         r13 = rbp                // rsp\\n         r13 += qword [rbx]       // rsp\\n         edx = 5\\n         esi = str.Connection__i_downloading_from__s:_i_using_interface__s // 0x406396 // \\\"Connection %i downloading from %s:%i using interface %s\\\"\\n         edi = 0\\n         r9 = qword [r13 + 0x3090]\\n         r8d = dword [r13 + 0xc]\\n         qword [var_8h] = r9\\n         dword [rsp] = r8d\\n         sym.imp.dcgettext  ()\\n         r9 = qword [var_8h]\\n         r8d = dword [rsp]\\n         rcx = r13 + 0x14\\n         rsi = rax                // int64_t arg2\\n         edx = r12d               // int64_t arg3\\n         rdi = rbx                // int64_t arg1\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x0, 0x178014, 0x40347d, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n\\n    loc_0x00403452: // orphan\\n         r13 = rbp                // rsp\\n         r13 += qword [rbx]       // rsp\\n         edx = 5\\n         esi = str.Connection__i_downloading_from__s:_i_using_interface__s // 0x406396 // \\\"Connection %i downloading from %s:%i using interface %s\\\"\\n         edi = 0\\n         r9 = qword [r13 + 0x3090]\\n         r8d = dword [r13 + 0xc]\\n         qword [var_8h] = r9\\n         dword [rsp] = r8d\\n         sym.imp.dcgettext  ()\\n         r9 = qword [var_8h]\\n         r8d = dword [rsp]\\n         rcx = r13 + 0x14\\n         rsi = rax                // int64_t arg2\\n         edx = r12d               // int64_t arg3\\n         rdi = rbx                // int64_t arg1\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x0, 0x178014, 0x40347d, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         // CODE XREF from sym.axel_do @ 0x403450(x)\\n         rcx = rbp                // rsp\\n         rcx += qword [rbx]       // rsp\\n         esi = 0\\n         edx = sym.setup_thread   // 0x402fb1 // \\\"SH\\\\x89\\\\xfb1\\\\xffH\\\\x83\\\\xec\\\\x10H\\\\x8dt$\\\\f\\\\xe8k\\\\xe5\\\\xff\\\\xffH\\\\x8dt$\\\\f\\\\xbf\\\\x01\\\"\\n         rdi = rcx + 0x30a0\\n         dword [rcx + 0x3098] = 1\\n         sym.imp.pthread_create  ()\\n         var = eax & eax\\n         if  (var) goto loc_0x4034d8 // unlikely\\n\\n    loc_0x0040349a: // orphan\\n         // CODE XREF from sym.axel_do @ 0x403450(x)\\n         rcx = rbp                // rsp\\n         rcx += qword [rbx]       // rsp\\n         esi = 0\\n         edx = sym.setup_thread   // 0x402fb1 // \\\"SH\\\\x89\\\\xfb1\\\\xffH\\\\x83\\\\xec\\\\x10H\\\\x8dt$\\\\f\\\\xe8k\\\\xe5\\\\xff\\\\xffH\\\\x8dt$\\\\f\\\\xbf\\\\x01\\\"\\n         rdi = rcx + 0x30a0\\n         dword [rcx + 0x3098] = 1\\n         sym.imp.pthread_create  ()\\n         var = eax & eax\\n         if  (var) goto loc_0x4034d8 // unlikely\\n         rbp += qword [rbx]       // rsp\\n         sym.gettime  ()\\n         cvttsd2si eax,mm0\\n         dword [rbp + 0x3084] = eax\\n         goto loc_0x4033e6\\n\\n    loc_0x004034c1: // orphan\\n         rbp += qword [rbx]       // rsp\\n         sym.gettime  ()\\n         cvttsd2si eax,mm0\\n         dword [rbp + 0x3084] = eax\\n         goto loc_0x4033e6\\n         // CODE XREF from sym.axel_do @ 0x4034bf(x)\\n         edx = 5\\n         esi = str.pthread_error___ // 0x4063ce // \\\"pthread error!!!\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         rdi = rbx                // int64_t arg1\\n         rsi = rax                // int64_t arg2\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         dword [rbx + 0x3c84] = 0xffffffff // [0xffffffff:4]=-1 // -1\\n         goto loc_0x4033e6\\n\\n    loc_0x004034d8: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4034bf(x)\\n         edx = 5\\n         esi = str.pthread_error___ // 0x4063ce // \\\"pthread error!!!\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         rdi = rbx                // int64_t arg1\\n         rsi = rax                // int64_t arg2\\n         eax = 0\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         dword [rbx + 0x3c84] = 0xffffffff // [0xffffffff:4]=-1 // -1\\n         goto loc_0x4033e6\\n         // CODE XREF from sym.axel_do @ 0x40340e(x)\\n         eax = 0\\n         sym.gettime  ()\\n         rdx = rbp                // rsp\\n         rdx += qword [rbx]       // rsp\\n         eax = dword [rbx + 0xc14]\\n         eax += dword [rdx + 0x3084]\\n         cvtsi2sd xmm1,ax\\n         ucomisd xmm0,mm1\\n         if  (((unsigned) var) <= 0) goto 0x4033e6 // unlikely\\n\\n    loc_0x00403505: // orphan\\n         // CODE XREF from sym.axel_do @ 0x40340e(x)\\n         eax = 0\\n         sym.gettime  ()\\n         rdx = rbp                // rsp\\n         rdx += qword [rbx]       // rsp\\n         eax = dword [rbx + 0xc14]\\n         eax += dword [rdx + 0x3084]\\n         cvtsi2sd xmm1,ax\\n         ucomisd xmm0,mm1\\n         if  (((unsigned) var) <= 0) goto 0x4033e6 // unlikely\\n         rdi = qword [rdx + 0x30a0]\\n         sym.imp.pthread_cancel  ()\\n         rax = qword [rbx]\\n         dword [rax + rbp + 0x3098] = 0\\n         goto loc_0x4033e6\\n\\n    loc_0x0040352c: // orphan\\n         rdi = qword [rdx + 0x30a0]\\n         sym.imp.pthread_cancel  ()\\n         rax = qword [rbx]\\n         dword [rax + rbp + 0x3098] = 0\\n         goto loc_0x4033e6\\n         // CODE XREF from sym.axel_do @ 0x4033f2(x)\\n         rax = qword [rbx + 0x3c60]\\n         rax -= qword [rbx + 0x3c68]\\n         cvtsi2sd xmm1,ax\\n         eax = 0\\n         qword [rsp] = xmm1\\n         sym.gettime  ()\\n         xmm3 = qword [rbx + 0x3c50]\\n         movapd xmm2,mm0\\n         xmm1 = qword [rsp]\\n         rdx = qword [rbx + 0x3c70]\\n         rdx -= qword [rbx + 0x3c68]\\n         subsd xmm2,mm3\\n         cvtsi2sd xmm0,dx\\n         divsd xmm1,mm2\\n         cvttsd2si eax,mm1\\n         cvtsi2sd xmm1,ax\\n         dword [rbx + 0x3c78] = eax\\n         divsd xmm0,mm1\\n         addsd xmm0,mm3\\n         cvttsd2si edx,mm0\\n         dword [rbx + 0x3c5c] = edx\\n         edx = dword [rbx + 0xc20]\\n         var = edx & edx\\n         if  (var <= 0) goto loc_0x403625 // likely\\n\\n    loc_0x0040354b: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4033f2(x)\\n         rax = qword [rbx + 0x3c60]\\n         rax -= qword [rbx + 0x3c68]\\n         cvtsi2sd xmm1,ax\\n         eax = 0\\n         qword [rsp] = xmm1\\n         sym.gettime  ()\\n         xmm3 = qword [rbx + 0x3c50]\\n         movapd xmm2,mm0\\n         xmm1 = qword [rsp]\\n         rdx = qword [rbx + 0x3c70]\\n         rdx -= qword [rbx + 0x3c68]\\n         subsd xmm2,mm3\\n         cvtsi2sd xmm0,dx\\n         divsd xmm1,mm2\\n         cvttsd2si eax,mm1\\n         cvtsi2sd xmm1,ax\\n         dword [rbx + 0x3c78] = eax\\n         divsd xmm0,mm1\\n         addsd xmm0,mm3\\n         cvttsd2si edx,mm0\\n         dword [rbx + 0x3c5c] = edx\\n         edx = dword [rbx + 0xc20]\\n         var = edx & edx\\n         if  (var <= 0) goto loc_0x403625 // likely\\n         cvtsi2ss xmm0,ax\\n         cvtsi2ss xmm1,dx\\n         divss xmm0,mm1\\n         cvtss2sd xmm0,mm0\\n         ucomisd xmm0,word [0x00406478]\\n         if  (((unsigned) var) <= 0) goto 0x4035e6 // unlikely\\n\\n    loc_0x004035c0: // orphan\\n         cvtsi2ss xmm0,ax\\n         cvtsi2ss xmm1,dx\\n         divss xmm0,mm1\\n         cvtss2sd xmm0,mm0\\n         ucomisd xmm0,word [0x00406478]\\n         if  (((unsigned) var) <= 0) goto 0x4035e6 // unlikely\\n         dword [rbx + 0x3c7c] += 0x2710 // [0x2710:4]=-1\\n         goto loc_0x40361a\\n\\n    loc_0x004035da: // orphan\\n         dword [rbx + 0x3c7c] += 0x2710 // [0x2710:4]=-1\\n         goto loc_0x40361a\\n         // CODE XREF from sym.axel_do @ 0x4035d8(x)\\n         xmm1 = qword [0x00406480] // [0x406480:8]=0x3fee666666666666 // \\\"ffffff\\\\xee?%100[^\\\\n#]s\\\"\\n         ucomisd xmm1,mm0\\n         if  (((unsigned) var) <= 0) goto 0x40360e // unlikely\\n\\n    loc_0x004035e6: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4035d8(x)\\n         xmm1 = qword [0x00406480] // [0x406480:8]=0x3fee666666666666 // \\\"ffffff\\\\xee?%100[^\\\\n#]s\\\"\\n         ucomisd xmm1,mm0\\n         if  (((unsigned) var) <= 0) goto 0x40360e // unlikely\\n         eax = dword [rbx + 0x3c7c]\\n         var = eax - 0x270f\\n         if  (var <= 0) goto loc_0x403610 // unlikely\\n\\n    loc_0x004035f4: // orphan\\n         eax = dword [rbx + 0x3c7c]\\n         var = eax - 0x270f\\n         if  (var <= 0) goto loc_0x403610 // unlikely\\n         eax -= 0x2710\\n         dword [rbx + 0x3c7c] = eax\\n         goto loc_0x40361a\\n\\n    loc_0x00403601: // orphan\\n         eax -= 0x2710\\n         dword [rbx + 0x3c7c] = eax\\n         goto loc_0x40361a\\n         // CODE XREF from sym.axel_do @ 0x4035f2(x)\\n         if  (((unsigned) var) <= 0) goto 0x40361a // unlikely\\n\\n    loc_0x0040360e: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4035f2(x)\\n         if  (((unsigned) var) <= 0) goto 0x40361a // unlikely\\n         // CODE XREF from sym.axel_do @ 0x4035ff(x)\\n         dword [rbx + 0x3c7c] = 0\\n\\n    loc_0x00403610: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4035ff(x)\\n         dword [rbx + 0x3c7c] = 0\\n         // CODE XREFS from sym.axel_do @ 0x4035e4(x), 0x40360c(x), 0x40360e(x)\\n         edi = dword [rbx + 0x3c7c] // int s\\n         sym.imp.usleep  ()\\n                                  // int usleep(-1)\\n\\n    loc_0x0040361a: // orphan\\n         // CODE XREFS from sym.axel_do @ 0x4035e4(x), 0x40360c(x), 0x40360e(x)\\n         edi = dword [rbx + 0x3c7c] // int s\\n         sym.imp.usleep  ()\\n                                  // int usleep(-1)\\n         // CODE XREF from sym.axel_do @ 0x4035be(x)\\n         rax = qword [rbx + 0x3c70]\\n         var = qword [rbx + 0x3c60] - rax\\n         if  (var) goto loc_0x40363f // likely\\n\\n    loc_0x00403625: // orphan\\n         // CODE XREF from sym.axel_do @ 0x4035be(x)\\n         rax = qword [rbx + 0x3c70]\\n         var = qword [rbx + 0x3c60] - rax\\n         if  (var) goto loc_0x40363f // likely\\n         dword [rbx + 0x3c84] = 1\\n\\n    loc_0x00403635: // orphan\\n         dword [rbx + 0x3c84] = 1\\n         // CODE XREFS from sym.axel_do @ 0x40313b(x), 0x403338(x), 0x4033c5(x), 0x403633(x)\\n         rsp += 0xa8\\n         rbx = pop  ()\\n         rbp = pop  ()\\n         r12 = pop  ()\\n         r13 = pop  ()\\n         r14 = pop  ()\\n         r15 = pop  ()\\n         re\\n\\n    loc_0x0040363f: // orphan\\n         // CODE XREFS from sym.axel_do @ 0x40313b(x), 0x403338(x), 0x4033c5(x), 0x403633(x)\\n         rsp += 0xa8\\n         rbx = pop  ()\\n         rbp = pop  ()\\n         r12 = pop  ()\\n         r13 = pop  ()\\n         r14 = pop  ()\\n         r15 = pop  ()\\n         re\\n\\n}\\n\"}\n"