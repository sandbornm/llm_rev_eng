"{\"annotations\":[{\"start\":56,\"end\":56,\"offset\":4205115,\"type\":\"offset\"},{\"start\":101,\"end\":101,\"offset\":4205115,\"type\":\"offset\"},{\"start\":121,\"end\":121,\"offset\":4205117,\"type\":\"offset\"},{\"start\":141,\"end\":141,\"offset\":4205119,\"type\":\"offset\"},{\"start\":161,\"end\":161,\"offset\":4205121,\"type\":\"offset\"},{\"start\":181,\"end\":181,\"offset\":4205122,\"type\":\"offset\"},{\"start\":216,\"end\":216,\"offset\":4205129,\"type\":\"offset\"},{\"start\":236,\"end\":236,\"offset\":4205130,\"type\":\"offset\"},{\"start\":282,\"end\":282,\"offset\":4205137,\"type\":\"offset\"},{\"start\":312,\"end\":312,\"offset\":4205140,\"type\":\"offset\"},{\"start\":394,\"end\":394,\"offset\":4205175,\"type\":\"offset\"},{\"start\":448,\"end\":448,\"offset\":4205175,\"type\":\"offset\"},{\"start\":510,\"end\":510,\"offset\":4205182,\"type\":\"offset\"},{\"start\":526,\"end\":526,\"offset\":4205184,\"type\":\"offset\"},{\"start\":544,\"end\":544,\"offset\":4205187,\"type\":\"offset\"},{\"start\":613,\"end\":613,\"offset\":4205192,\"type\":\"offset\"},{\"start\":658,\"end\":658,\"offset\":4205197,\"type\":\"offset\"},{\"start\":687,\"end\":687,\"offset\":4205197,\"type\":\"offset\"},{\"start\":739,\"end\":739,\"offset\":4205202,\"type\":\"offset\"},{\"start\":765,\"end\":765,\"offset\":4205205,\"type\":\"offset\"},{\"start\":834,\"end\":834,\"offset\":4205215,\"type\":\"offset\"},{\"start\":873,\"end\":873,\"offset\":4205222,\"type\":\"offset\"},{\"start\":950,\"end\":950,\"offset\":4205293,\"type\":\"offset\"},{\"start\":1004,\"end\":1004,\"offset\":4205293,\"type\":\"offset\"},{\"start\":1055,\"end\":1055,\"offset\":4205300,\"type\":\"offset\"},{\"start\":1071,\"end\":1071,\"offset\":4205302,\"type\":\"offset\"},{\"start\":1087,\"end\":1087,\"offset\":4205304,\"type\":\"offset\"},{\"start\":1114,\"end\":1114,\"offset\":4205309,\"type\":\"offset\"},{\"start\":1145,\"end\":1145,\"offset\":4205312,\"type\":\"offset\"},{\"start\":1163,\"end\":1163,\"offset\":4205314,\"type\":\"offset\"},{\"start\":1243,\"end\":1243,\"offset\":4205560,\"type\":\"offset\"},{\"start\":1311,\"end\":1311,\"offset\":4205560,\"type\":\"offset\"},{\"start\":1359,\"end\":1359,\"offset\":4205567,\"type\":\"offset\"},{\"start\":1439,\"end\":1439,\"offset\":4205579,\"type\":\"offset\"},{\"start\":1493,\"end\":1493,\"offset\":4205579,\"type\":\"offset\"},{\"start\":1531,\"end\":1531,\"offset\":4205582,\"type\":\"offset\"},{\"start\":1583,\"end\":1583,\"offset\":4205587,\"type\":\"offset\"},{\"start\":1599,\"end\":1599,\"offset\":4205589,\"type\":\"offset\"},{\"start\":1619,\"end\":1619,\"offset\":4205594,\"type\":\"offset\"},{\"start\":1648,\"end\":1648,\"offset\":4205599,\"type\":\"offset\"},{\"start\":1666,\"end\":1666,\"offset\":4205602,\"type\":\"offset\"},{\"start\":1693,\"end\":1693,\"offset\":4205607,\"type\":\"offset\"},{\"start\":1724,\"end\":1724,\"offset\":4205610,\"type\":\"offset\"},{\"start\":1759,\"end\":1759,\"offset\":4205616,\"type\":\"offset\"},{\"start\":1836,\"end\":1836,\"offset\":4205655,\"type\":\"offset\"},{\"start\":1890,\"end\":1890,\"offset\":4205655,\"type\":\"offset\"},{\"start\":1925,\"end\":1925,\"offset\":4205662,\"type\":\"offset\"},{\"start\":1941,\"end\":1941,\"offset\":4205664,\"type\":\"offset\"},{\"start\":1959,\"end\":1959,\"offset\":4205666,\"type\":\"offset\"},{\"start\":1987,\"end\":1987,\"offset\":4205671,\"type\":\"offset\"},{\"start\":2000,\"end\":2000,\"offset\":4205674,\"type\":\"offset\"},{\"start\":2064,\"end\":2064,\"offset\":4205676,\"type\":\"offset\"},{\"start\":2102,\"end\":2102,\"offset\":4205683,\"type\":\"offset\"},{\"start\":2171,\"end\":2171,\"offset\":4205685,\"type\":\"offset\"},{\"start\":2187,\"end\":2187,\"offset\":4205690,\"type\":\"offset\"},{\"start\":2308,\"end\":2308,\"offset\":4205695,\"type\":\"offset\"},{\"start\":2324,\"end\":2324,\"offset\":4205697,\"type\":\"offset\"},{\"start\":2354,\"end\":2354,\"offset\":4205702,\"type\":\"offset\"},{\"start\":2392,\"end\":2392,\"offset\":4205705,\"type\":\"offset\"},{\"start\":2430,\"end\":2430,\"offset\":4205708,\"type\":\"offset\"},{\"start\":2446,\"end\":2446,\"offset\":4205710,\"type\":\"offset\"},{\"start\":2553,\"end\":2553,\"offset\":4205715,\"type\":\"offset\"},{\"start\":2588,\"end\":2588,\"offset\":4205721,\"type\":\"offset\"},{\"start\":2604,\"end\":2604,\"offset\":4205723,\"type\":\"offset\"},{\"start\":2620,\"end\":2620,\"offset\":4205725,\"type\":\"offset\"},{\"start\":2648,\"end\":2648,\"offset\":4205730,\"type\":\"offset\"},{\"start\":2682,\"end\":2682,\"offset\":4205737,\"type\":\"offset\"},{\"start\":2733,\"end\":2733,\"offset\":4205744,\"type\":\"offset\"},{\"start\":2749,\"end\":2749,\"offset\":4205746,\"type\":\"offset\"},{\"start\":2792,\"end\":2792,\"offset\":4205748,\"type\":\"offset\"},{\"start\":2862,\"end\":2862,\"offset\":4205755,\"type\":\"offset\"},{\"start\":2916,\"end\":2916,\"offset\":4205755,\"type\":\"offset\"},{\"start\":2940,\"end\":2940,\"offset\":4205758,\"type\":\"offset\"},{\"start\":3173,\"end\":3336,\"offset\":4205758,\"type\":\"offset\"},{\"start\":3530,\"end\":3899,\"offset\":4205758,\"type\":\"offset\"},{\"start\":4299,\"end\":5293,\"offset\":4205758,\"type\":\"offset\"},{\"start\":6318,\"end\":6718,\"offset\":4205758,\"type\":\"offset\"},{\"start\":7149,\"end\":7345,\"offset\":4205758,\"type\":\"offset\"}],\"code\":\"int sym.axel_open (int esi, int edx) {\\n    loc_0x402a3b:\\n        // CALL XREF from main @ 0x401f52(x)\\n        push  (r14)\\n        push  (r13)\\n        push  (r12)\\n        push  (rbp)\\n        r12 = rdi + 0x3850 // arg1\\n        push  (rbx)\\n        var = dword [rdi + 0xc24] - 0 // arg1\\n        rbx = rdi     // arg1\\n        if  (var <= 0) goto loc_0x402a77 // likely\\n            \\n    loc_0x402a77:\\n        // CODE XREF from sym.axel_open @ 0x402a54(x)\\n        rdi = qword [obj.buffer] // [0x608670:8]=0 // char *s\\n        eax = 0\\n        rcx = r12\\n        edx = str._s.st // 0x406264 // \\\"%s.st\\\" // const char *format\\n        esi = 0x400   // 1024 // size_t size\\n        sym.imp.snprintf  ()\\n        // int snprintf(-1, 0x00000000, \\\"%s.st\\\", ?)\\n        rax = qword [rbx]\\n        dword [rbx + 0x3c80] = 0xffffffff // [0xffffffff:4]=-1 // -1\\n        var = dword [rax + 0x3080] - 0\\n        if  (var) goto loc_0x402aed // likely\\n            \\n    loc_0x402aed:\\n        // CODE XREF from sym.axel_open @ 0x402aa6(x)\\n        rdi = qword [obj.buffer] // [0x608670:8]=0\\n        esi = 0\\n        eax = 0\\n        sym.imp.open64  ()\\n        var = eax - 0xffffffff\\n        ebp = eax\\n        if  (!var) goto loc_0x402bf8 // unlikely\\n            \\n    loc_0x402bf8:\\n        // CODE XREFS from sym.axel_open @ 0x402ae8(x), 0x402b02(x)\\n        var = dword [rbx + 0x3c80] - 0xffffffff\\n        if  (!var) goto loc_0x402c0b // unlikely\\n            \\n    loc_0x402c0b:\\n        // CODE XREF from sym.axel_open @ 0x402bff(x)\\n        rdi = rbx     // int64_t arg1\\n        sym.axel_divide  () // sym.axel_divide(0x0)\\n        eax = 0\\n        edx = 0x1b6\\n        esi = 0x41    // 'A'\\n        rdi = r12\\n        sym.imp.open64  ()\\n        var = eax - 0xffffffff\\n        dword [rbx + 0x3c80] = eax\\n        if  (var) goto loc_0x402c57 // likely\\n            \\n    loc_0x402c57:\\n        // CODE XREF from sym.axel_open @ 0x402c30(x)\\n        rsi = qword [rbx + 0x3c70]\\n        edx = 0\\n        edi = eax\\n        sym.imp.lseek64  ()\\n        rax+\\n        if  (var) goto loc_0x402c01 // likely\\n    loc_0x402c6c:\\n        var = dword [rbx + 0xc18] - 1\\n        if  (var <= 0) goto loc_0x402c01 // likely\\n    loc_0x402c75:\\n        edx = 5\\n        esi = str.Crappy_filesystem_OS.._Working_around._:__ // 0x406359 // \\\"Crappy filesystem/OS.. Working around. :-(\\\"\\n        edi = 0\\n        sym.imp.dcgettext  ()\\n        rdi = rbx     // int64_t arg1\\n        rsi = rax     // int64_t arg2\\n        eax = 0\\n        sym.axel_message  () // sym.axel_message(0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n        edi = dword [rbx + 0x3c80]\\n        edx = 0\\n        esi = 0\\n        sym.imp.lseek64  ()\\n        rcx = dword [rbx + 0xc1c]\\n        rdi = qword [obj.buffer] // [0x608670:8]=0\\n        eax = 0\\n        rep stosb byte [rdi],l // elf_phdr\\n        rbp = qword [rbx + 0x3c70]\\n         // do {\\n    loc_0x402cbb:\\n        // CODE XREF from sym.axel_open @ 0x402cee(x)\\n        var = rbp & rbp\\n        if  (var <= 0) goto loc_0x402c01 // unlikely\\n         // } while (?);\\n         // } while (?);\\n         // } while (?);\\n         // } while (?);\\n         // } while (?);\\n         // } while (?);\\n        }\\n        return eax;             // CODE XREF from sym.axel_open @ 0x402b9c(x)\\n             var = dword [rbx + 0xc18] - r13d\\n             if  (var <= 0) goto loc_0x402b9e // unlikely\\n\\n    loc_0x00402b73: // orphan\\n             // CODE XREF from sym.axel_open @ 0x402b9c(x)\\n             var = dword [rbx + 0xc18] - r13d\\n             if  (var <= 0) goto loc_0x402b9e // unlikely\\n         rsi = r13 * 0x30a8\\n         edx = 8                  // size_t nbyte\\n         edi = ebp                // int fildes // rsp\\n         rsi += qword [rbx]\\n         r13+\\n         rsi += 0x3068            // void *buf\\n         sym.imp.read  ()\\n                                  // ssize_t read(0x00000000, 0x0000000000000000, 0x00000000)\\n         goto loc_0x402b73\\n\\n    loc_0x00402b7c: // orphan\\n         rsi = r13 * 0x30a8\\n         edx = 8                  // size_t nbyte\\n         edi = ebp                // int fildes // rsp\\n         rsi += qword [rbx]\\n         r13+\\n         rsi += 0x3068            // void *buf\\n         sym.imp.read  ()\\n                                  // ssize_t read(0x00000000, 0x0000000000000000, 0x00000000)\\n         goto loc_0x402b73\\n         // CODE XREF from sym.axel_open @ 0x402b7a(x)\\n         r14 = qword [rbx + 0x3c60]\\n         r13 = qword [rbx + 0x3c70]\\n         edi = 0\\n         edx = 5\\n         esi = str.State_file_found:__lld_bytes_downloaded___lld_to_go. // 0x40630b // \\\"State file found: %lld bytes downloaded, %lld to go.\\\"\\n         sym.imp.dcgettext  ()\\n         r13 -= r14\\n         rsi = rax                // int64_t arg2\\n         rdx = r14                // int64_t arg3\\n         rcx = r13\\n         eax = 0\\n         rdi = rbx                // int64_t arg1\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, -1, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         edi = ebp                // int fildes // rsp\\n         sym.imp.close  ()\\n                                  // int close(0x00000000)\\n         eax = 0\\n         edx = 0x1b6\\n         esi = 1\\n         rdi = r12\\n         sym.imp.open64  ()\\n         dword [rbx + 0x3c80] = eax\\n         eax+\\n         if  (!var) goto loc_0x402c32 // unlikely\\n\\n    loc_0x00402b9e: // orphan\\n         // CODE XREF from sym.axel_open @ 0x402b7a(x)\\n         r14 = qword [rbx + 0x3c60]\\n         r13 = qword [rbx + 0x3c70]\\n         edi = 0\\n         edx = 5\\n         esi = str.State_file_found:__lld_bytes_downloaded___lld_to_go. // 0x40630b // \\\"State file found: %lld bytes downloaded, %lld to go.\\\"\\n         sym.imp.dcgettext  ()\\n         r13 -= r14\\n         rsi = rax                // int64_t arg2\\n         rdx = r14                // int64_t arg3\\n         rcx = r13\\n         eax = 0\\n         rdi = rbx                // int64_t arg1\\n         sym.axel_message  ()     // sym.axel_message(0x0, 0x0, -1, 0x0, 0x0, 0x0, 0x0, 0x0, -1, -1, 0x0, 0x0)\\n         edi = ebp                // int fildes // rsp\\n         sym.imp.close  ()\\n                                  // int close(0x00000000)\\n         eax = 0\\n         edx = 0x1b6\\n         esi = 1\\n         rdi = r12\\n         sym.imp.open64  ()\\n         dword [rbx + 0x3c80] = eax\\n         eax+\\n         if  (!var) goto loc_0x402c32 // unlikely\\n         rdx = dword [rbx + 0xc1c]\\n         edi = dword [rbx + 0x3c80] // int fd\\n         rsi = qword [obj.buffer] // [0x608670:8]=0 // const char *ptr\\n         var = rbp - rdx\\n         cmovle rdx,bp            // size_t nbytes\\n         sym.imp.write  ()\\n                                  // ssize_t write(-1, -1, -1)\\n         rax = dword [rbx + 0xc1c]\\n         rbp -= rax\\n         goto loc_0x402cbb\\n\\n    loc_0x00402cc4: // orphan\\n         rdx = dword [rbx + 0xc1c]\\n         edi = dword [rbx + 0x3c80] // int fd\\n         rsi = qword [obj.buffer] // [0x608670:8]=0 // const char *ptr\\n         var = rbp - rdx\\n         cmovle rdx,bp            // size_t nbytes\\n         sym.imp.write  ()\\n                                  // ssize_t write(-1, -1, -1)\\n         rax = dword [rbx + 0xc1c]\\n         rbp -= rax\\n         goto loc_0x402cbb\\n         // CODE XREFS from sym.axel_open @ 0x402c06(x), 0x402c52(x)\\n         rbx = pop  ()\\n         rbp = pop  ()\\n         r12 = pop  ()\\n         r13 = pop  ()\\n         r14 = pop  ()\\n         re\\n\\n    loc_0x00402cf0: // orphan\\n         // CODE XREFS from sym.axel_open @ 0x402c06(x), 0x402c52(x)\\n         rbx = pop  ()\\n         rbp = pop  ()\\n         r12 = pop  ()\\n         r13 = pop  ()\\n         r14 = pop  ()\\n         re\\n\\n}\\n\"}\n"