"{\"annotations\":[{\"start\":58,\"end\":58,\"offset\":4216512,\"type\":\"offset\"},{\"start\":111,\"end\":111,\"offset\":4216512,\"type\":\"offset\"},{\"start\":131,\"end\":131,\"offset\":4216514,\"type\":\"offset\"},{\"start\":151,\"end\":151,\"offset\":4216516,\"type\":\"offset\"},{\"start\":181,\"end\":181,\"offset\":4216519,\"type\":\"offset\"},{\"start\":201,\"end\":201,\"offset\":4216520,\"type\":\"offset\"},{\"start\":221,\"end\":221,\"offset\":4216521,\"type\":\"offset\"},{\"start\":237,\"end\":237,\"offset\":4216523,\"type\":\"offset\"},{\"start\":258,\"end\":258,\"offset\":4216530,\"type\":\"offset\"},{\"start\":280,\"end\":280,\"offset\":4216535,\"type\":\"offset\"},{\"start\":333,\"end\":333,\"offset\":4216538,\"type\":\"offset\"},{\"start\":389,\"end\":389,\"offset\":4216538,\"type\":\"offset\"},{\"start\":407,\"end\":407,\"offset\":4216541,\"type\":\"offset\"},{\"start\":436,\"end\":436,\"offset\":4216543,\"type\":\"offset\"},{\"start\":466,\"end\":466,\"offset\":4216547,\"type\":\"offset\"},{\"start\":495,\"end\":495,\"offset\":4216550,\"type\":\"offset\"},{\"start\":517,\"end\":517,\"offset\":4216552,\"type\":\"offset\"},{\"start\":637,\"end\":637,\"offset\":4216554,\"type\":\"offset\"},{\"start\":661,\"end\":661,\"offset\":4216557,\"type\":\"offset\"},{\"start\":685,\"end\":685,\"offset\":4216560,\"type\":\"offset\"},{\"start\":762,\"end\":762,\"offset\":4216598,\"type\":\"offset\"},{\"start\":832,\"end\":832,\"offset\":4216598,\"type\":\"offset\"},{\"start\":845,\"end\":845,\"offset\":4216600,\"type\":\"offset\"},{\"start\":858,\"end\":858,\"offset\":4216603,\"type\":\"offset\"},{\"start\":884,\"end\":1273,\"offset\":4216603,\"type\":\"offset\"},{\"start\":1693,\"end\":1766,\"offset\":4216603,\"type\":\"offset\"},{\"start\":1870,\"end\":2290,\"offset\":4216603,\"type\":\"offset\"}],\"code\":\"int sym.http_decode (int esi, int edx) {\\n    loc_0x4056c0:\\n        // CALL XREF from sym.axel_new @ 0x402913(x)\\n        push  (r13)\\n        push  (r12)\\n        r12 = rdi     // arg1\\n        push  (rbp)\\n        push  (rbx)\\n        ebx = 0\\n        rsp -= 0x418\\n        r13 = var_10h\\n        rbp = r13\\n         // do {\\n    loc_0x4056da:\\n        // CODE XREF from sym.http_decode @ 0x40571b(x)\\n        rcx = ebx\\n        eax = ebp     // rsp\\n        dl = byte [r12 + rcx]\\n        eax -= r13d   // rsp\\n        var = dl & dl\\n        if  (!var) goto loc_0x40571d // likely\\n         // } while (?);\\n        }\\n        return eax;\\n    loc_0x4056ea:\\n        var = dl - 0x25\\n        byte [rbp] = dl\\n        if  (var) goto loc_0x405716 // likely\\n            \\n    loc_0x405716:\\n        // CODE XREFS from sym.http_decode @ 0x4056f0(x), 0x40570a(x)\\n        ebx+\\n        rbp+\\n        goto loc_0x4056da             rdi = r12 + rcx + 1      // const char *s\\n             rdx = var_ch             //   ...\\n             eax = 0\\n             esi = 0x406944           // 'Di@' // \\\"%2x\\\" // const char *format\\n             sym.imp.__isoc99_sscanf  ()\\n                                      // int sscanf(\\\"\\\", \\\"%2x\\\", ?)\\n             var = eax & eax\\n             if  (!var) goto loc_0x405716 // likely\\n\\n    loc_0x004056f2: // orphan\\n             rdi = r12 + rcx + 1      // const char *s\\n             rdx = var_ch             //   ...\\n             eax = 0\\n             esi = 0x406944           // 'Di@' // \\\"%2x\\\" // const char *format\\n             sym.imp.__isoc99_sscanf  ()\\n                                      // int sscanf(\\\"\\\", \\\"%2x\\\", ?)\\n             var = eax & eax\\n             if  (!var) goto loc_0x405716 // likely\\n         eax = dword [var_ch]\\n         ebx += 2\\n         byte [rbp] = al\\n\\n    loc_0x0040570c: // orphan\\n         eax = dword [var_ch]\\n         ebx += 2\\n         byte [rbp] = al\\n         // CODE XREF from sym.http_decode @ 0x4056e8(x)\\n         cdq\\n         rsi = r13                // const char *src\\n         rdi = r12                // char *dest\\n         byte [rsp + rax + 0x10] = 0\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(-1, -1)\\n         rsp += 0x418\\n         rbx = pop  ()\\n         rbp = pop  ()\\n         r12 = pop  ()\\n         r13 = pop  ()\\n         re\\n\\n    loc_0x0040571d: // orphan\\n         // CODE XREF from sym.http_decode @ 0x4056e8(x)\\n         cdq\\n         rsi = r13                // const char *src\\n         rdi = r12                // char *dest\\n         byte [rsp + rax + 0x10] = 0\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(-1, -1)\\n         rsp += 0x418\\n         rbx = pop  ()\\n         rbp = pop  ()\\n         r12 = pop  ()\\n         r13 = pop  ()\\n         re\\n\\n}\\n\"}\n"