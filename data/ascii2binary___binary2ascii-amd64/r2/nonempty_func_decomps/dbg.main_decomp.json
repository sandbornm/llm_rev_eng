"{\"annotations\":[{\"start\":51,\"end\":51,\"offset\":4197152,\"type\":\"offset\"},{\"start\":98,\"end\":98,\"offset\":4197152,\"type\":\"offset\"},{\"start\":175,\"end\":175,\"offset\":4197154,\"type\":\"offset\"},{\"start\":195,\"end\":195,\"offset\":4197156,\"type\":\"offset\"},{\"start\":239,\"end\":239,\"offset\":4197162,\"type\":\"offset\"},{\"start\":283,\"end\":283,\"offset\":4197164,\"type\":\"offset\"},{\"start\":303,\"end\":303,\"offset\":4197166,\"type\":\"offset\"},{\"start\":347,\"end\":347,\"offset\":4197169,\"type\":\"offset\"},{\"start\":391,\"end\":391,\"offset\":4197170,\"type\":\"offset\"},{\"start\":411,\"end\":411,\"offset\":4197171,\"type\":\"offset\"},{\"start\":441,\"end\":441,\"offset\":4197173,\"type\":\"offset\"},{\"start\":471,\"end\":471,\"offset\":4197176,\"type\":\"offset\"},{\"start\":531,\"end\":531,\"offset\":4197181,\"type\":\"offset\"},{\"start\":576,\"end\":576,\"offset\":4197186,\"type\":\"offset\"},{\"start\":620,\"end\":620,\"offset\":4197193,\"type\":\"offset\"},{\"start\":664,\"end\":664,\"offset\":4197199,\"type\":\"offset\"},{\"start\":708,\"end\":708,\"offset\":4197205,\"type\":\"offset\"},{\"start\":760,\"end\":760,\"offset\":4197205,\"type\":\"offset\"},{\"start\":794,\"end\":794,\"offset\":4197210,\"type\":\"offset\"},{\"start\":894,\"end\":894,\"offset\":4197215,\"type\":\"offset\"},{\"start\":975,\"end\":975,\"offset\":4197220,\"type\":\"offset\"},{\"start\":1010,\"end\":1010,\"offset\":4197220,\"type\":\"offset\"},{\"start\":1074,\"end\":1074,\"offset\":4197225,\"type\":\"offset\"},{\"start\":1177,\"end\":1177,\"offset\":4197230,\"type\":\"offset\"},{\"start\":1208,\"end\":1208,\"offset\":4197230,\"type\":\"offset\"},{\"start\":1252,\"end\":1252,\"offset\":4197235,\"type\":\"offset\"},{\"start\":1296,\"end\":1296,\"offset\":4197237,\"type\":\"offset\"},{\"start\":1376,\"end\":1376,\"offset\":4197237,\"type\":\"offset\"},{\"start\":1402,\"end\":1402,\"offset\":4197247,\"type\":\"offset\"},{\"start\":1452,\"end\":1452,\"offset\":4197255,\"type\":\"offset\"},{\"start\":1502,\"end\":1502,\"offset\":4197263,\"type\":\"offset\"},{\"start\":1552,\"end\":1552,\"offset\":4197268,\"type\":\"offset\"},{\"start\":1601,\"end\":1601,\"offset\":4197276,\"type\":\"offset\"},{\"start\":1651,\"end\":1651,\"offset\":4197285,\"type\":\"offset\"},{\"start\":1701,\"end\":1701,\"offset\":4197293,\"type\":\"offset\"},{\"start\":1751,\"end\":1751,\"offset\":4197301,\"type\":\"offset\"},{\"start\":1801,\"end\":1801,\"offset\":4197309,\"type\":\"offset\"},{\"start\":1851,\"end\":1851,\"offset\":4197317,\"type\":\"offset\"},{\"start\":1901,\"end\":1901,\"offset\":4197325,\"type\":\"offset\"},{\"start\":1986,\"end\":1986,\"offset\":4197333,\"type\":\"offset\"},{\"start\":2007,\"end\":2007,\"offset\":4197333,\"type\":\"offset\"},{\"start\":2051,\"end\":2051,\"offset\":4197338,\"type\":\"offset\"},{\"start\":2114,\"end\":2114,\"offset\":4197343,\"type\":\"offset\"},{\"start\":2205,\"end\":2205,\"offset\":4197348,\"type\":\"offset\"},{\"start\":2223,\"end\":2223,\"offset\":4197351,\"type\":\"offset\"},{\"start\":2252,\"end\":2252,\"offset\":4197353,\"type\":\"offset\"},{\"start\":2284,\"end\":2284,\"offset\":4197358,\"type\":\"offset\"},{\"start\":2315,\"end\":2315,\"offset\":4197361,\"type\":\"offset\"},{\"start\":2437,\"end\":2437,\"offset\":4197367,\"type\":\"offset\"},{\"start\":2487,\"end\":2487,\"offset\":4197370,\"type\":\"offset\"},{\"start\":2524,\"end\":2524,\"offset\":4197373,\"type\":\"offset\"},{\"start\":2647,\"end\":2647,\"offset\":4198045,\"type\":\"offset\"},{\"start\":2710,\"end\":2710,\"offset\":4198045,\"type\":\"offset\"},{\"start\":2792,\"end\":2792,\"offset\":4198045,\"type\":\"offset\"},{\"start\":2818,\"end\":2818,\"offset\":4198051,\"type\":\"offset\"},{\"start\":2834,\"end\":2834,\"offset\":4198056,\"type\":\"offset\"},{\"start\":2927,\"end\":2927,\"offset\":4198061,\"type\":\"offset\"},{\"start\":2943,\"end\":2943,\"offset\":4198063,\"type\":\"offset\"},{\"start\":2973,\"end\":2973,\"offset\":4198068,\"type\":\"offset\"},{\"start\":3033,\"end\":3033,\"offset\":4198068,\"type\":\"offset\"},{\"start\":3075,\"end\":3075,\"offset\":4198075,\"type\":\"offset\"},{\"start\":3119,\"end\":3119,\"offset\":4198078,\"type\":\"offset\"},{\"start\":3137,\"end\":3137,\"offset\":4198080,\"type\":\"offset\"},{\"start\":3201,\"end\":3201,\"offset\":4198085,\"type\":\"offset\"},{\"start\":3217,\"end\":3217,\"offset\":4198087,\"type\":\"offset\"},{\"start\":3245,\"end\":3245,\"offset\":4198087,\"type\":\"offset\"},{\"start\":3278,\"end\":3278,\"offset\":4198092,\"type\":\"offset\"},{\"start\":3322,\"end\":3322,\"offset\":4198097,\"type\":\"offset\"},{\"start\":3380,\"end\":3380,\"offset\":4198102,\"type\":\"offset\"},{\"start\":3405,\"end\":3405,\"offset\":4198102,\"type\":\"offset\"},{\"start\":3468,\"end\":3468,\"offset\":4197379,\"type\":\"offset\"},{\"start\":3609,\"end\":3754,\"offset\":4197379,\"type\":\"offset\"},{\"start\":3930,\"end\":4182,\"offset\":4197379,\"type\":\"offset\"},{\"start\":4465,\"end\":4627,\"offset\":4197379,\"type\":\"offset\"},{\"start\":4820,\"end\":5290,\"offset\":4197379,\"type\":\"offset\"},{\"start\":5791,\"end\":6261,\"offset\":4197379,\"type\":\"offset\"},{\"start\":6762,\"end\":7307,\"offset\":4197379,\"type\":\"offset\"},{\"start\":7883,\"end\":8375,\"offset\":4197379,\"type\":\"offset\"},{\"start\":8898,\"end\":9321,\"offset\":4197379,\"type\":\"offset\"},{\"start\":9775,\"end\":9826,\"offset\":4197379,\"type\":\"offset\"},{\"start\":9908,\"end\":9999,\"offset\":4197379,\"type\":\"offset\"},{\"start\":10121,\"end\":10209,\"offset\":4197379,\"type\":\"offset\"},{\"start\":10328,\"end\":10384,\"offset\":4197379,\"type\":\"offset\"},{\"start\":10471,\"end\":10618,\"offset\":4197379,\"type\":\"offset\"},{\"start\":10796,\"end\":11048,\"offset\":4197379,\"type\":\"offset\"},{\"start\":11331,\"end\":11493,\"offset\":4197379,\"type\":\"offset\"},{\"start\":11686,\"end\":11848,\"offset\":4197379,\"type\":\"offset\"},{\"start\":12041,\"end\":12586,\"offset\":4197379,\"type\":\"offset\"},{\"start\":13162,\"end\":13551,\"offset\":4197379,\"type\":\"offset\"},{\"start\":13971,\"end\":14552,\"offset\":4197379,\"type\":\"offset\"},{\"start\":15164,\"end\":15297,\"offset\":4197379,\"type\":\"offset\"},{\"start\":15461,\"end\":15883,\"offset\":4197379,\"type\":\"offset\"},{\"start\":16336,\"end\":16993,\"offset\":4197379,\"type\":\"offset\"},{\"start\":17681,\"end\":17843,\"offset\":4197379,\"type\":\"offset\"},{\"start\":18036,\"end\":18288,\"offset\":4197379,\"type\":\"offset\"},{\"start\":18571,\"end\":18733,\"offset\":4197379,\"type\":\"offset\"},{\"start\":18926,\"end\":19331,\"offset\":4197379,\"type\":\"offset\"},{\"start\":19767,\"end\":19821,\"offset\":4197379,\"type\":\"offset\"},{\"start\":19906,\"end\":19997,\"offset\":4197379,\"type\":\"offset\"},{\"start\":20119,\"end\":20288,\"offset\":4197379,\"type\":\"offset\"},{\"start\":20488,\"end\":20944,\"offset\":4197379,\"type\":\"offset\"},{\"start\":21431,\"end\":21543,\"offset\":4197379,\"type\":\"offset\"},{\"start\":21686,\"end\":21822,\"offset\":4197379,\"type\":\"offset\"},{\"start\":21989,\"end\":22289,\"offset\":4197379,\"type\":\"offset\"},{\"start\":22620,\"end\":22737,\"offset\":4197379,\"type\":\"offset\"},{\"start\":22885,\"end\":23444,\"offset\":4197379,\"type\":\"offset\"},{\"start\":24034,\"end\":24167,\"offset\":4197379,\"type\":\"offset\"},{\"start\":24331,\"end\":24559,\"offset\":4197379,\"type\":\"offset\"},{\"start\":24818,\"end\":24975,\"offset\":4197379,\"type\":\"offset\"},{\"start\":25163,\"end\":25275,\"offset\":4197379,\"type\":\"offset\"},{\"start\":25418,\"end\":25710,\"offset\":4197379,\"type\":\"offset\"},{\"start\":26033,\"end\":26581,\"offset\":4197379,\"type\":\"offset\"},{\"start\":27160,\"end\":27360,\"offset\":4197379,\"type\":\"offset\"},{\"start\":27591,\"end\":27678,\"offset\":4197379,\"type\":\"offset\"},{\"start\":27796,\"end\":28021,\"offset\":4197379,\"type\":\"offset\"},{\"start\":28277,\"end\":28382,\"offset\":4197379,\"type\":\"offset\"},{\"start\":28518,\"end\":28836,\"offset\":4197379,\"type\":\"offset\"},{\"start\":29185,\"end\":29693,\"offset\":4197379,\"type\":\"offset\"},{\"start\":30232,\"end\":30395,\"offset\":4197379,\"type\":\"offset\"},{\"start\":30589,\"end\":30677,\"offset\":4197379,\"type\":\"offset\"},{\"start\":30796,\"end\":30852,\"offset\":4197379,\"type\":\"offset\"},{\"start\":30939,\"end\":31277,\"offset\":4197379,\"type\":\"offset\"},{\"start\":31646,\"end\":31847,\"offset\":4197379,\"type\":\"offset\"},{\"start\":32079,\"end\":32130,\"offset\":4197379,\"type\":\"offset\"},{\"start\":32212,\"end\":32302,\"offset\":4197379,\"type\":\"offset\"},{\"start\":32423,\"end\":32511,\"offset\":4197379,\"type\":\"offset\"},{\"start\":32630,\"end\":32742,\"offset\":4197379,\"type\":\"offset\"},{\"start\":32885,\"end\":33053,\"offset\":4197379,\"type\":\"offset\"},{\"start\":33252,\"end\":33385,\"offset\":4197379,\"type\":\"offset\"},{\"start\":33549,\"end\":33682,\"offset\":4197379,\"type\":\"offset\"},{\"start\":33846,\"end\":34086,\"offset\":4197379,\"type\":\"offset\"},{\"start\":34357,\"end\":34384,\"offset\":4197379,\"type\":\"offset\"},{\"start\":34442,\"end\":34605,\"offset\":4197379,\"type\":\"offset\"},{\"start\":34799,\"end\":34887,\"offset\":4197379,\"type\":\"offset\"},{\"start\":35006,\"end\":35089,\"offset\":4197379,\"type\":\"offset\"},{\"start\":35203,\"end\":35336,\"offset\":4197379,\"type\":\"offset\"},{\"start\":35500,\"end\":35752,\"offset\":4197379,\"type\":\"offset\"},{\"start\":36035,\"end\":36228,\"offset\":4197379,\"type\":\"offset\"},{\"start\":36452,\"end\":36585,\"offset\":4197379,\"type\":\"offset\"},{\"start\":36749,\"end\":36934,\"offset\":4197379,\"type\":\"offset\"},{\"start\":37150,\"end\":37252,\"offset\":4197379,\"type\":\"offset\"},{\"start\":37385,\"end\":37488,\"offset\":4197379,\"type\":\"offset\"},{\"start\":37622,\"end\":37731,\"offset\":4197379,\"type\":\"offset\"},{\"start\":37871,\"end\":37983,\"offset\":4197379,\"type\":\"offset\"},{\"start\":38126,\"end\":38241,\"offset\":4197379,\"type\":\"offset\"},{\"start\":38387,\"end\":38543,\"offset\":4197379,\"type\":\"offset\"},{\"start\":38730,\"end\":38851,\"offset\":4197379,\"type\":\"offset\"},{\"start\":39003,\"end\":39671,\"offset\":4197379,\"type\":\"offset\"},{\"start\":40370,\"end\":40571,\"offset\":4197379,\"type\":\"offset\"},{\"start\":40803,\"end\":41061,\"offset\":4197379,\"type\":\"offset\"},{\"start\":41350,\"end\":41596,\"offset\":4197379,\"type\":\"offset\"},{\"start\":41873,\"end\":41960,\"offset\":4197379,\"type\":\"offset\"},{\"start\":42078,\"end\":42260,\"offset\":4197379,\"type\":\"offset\"},{\"start\":42473,\"end\":42578,\"offset\":4197379,\"type\":\"offset\"},{\"start\":42714,\"end\":42834,\"offset\":4197379,\"type\":\"offset\"},{\"start\":42985,\"end\":43158,\"offset\":4197379,\"type\":\"offset\"},{\"start\":43362,\"end\":43530,\"offset\":4197379,\"type\":\"offset\"},{\"start\":43729,\"end\":43880,\"offset\":4197379,\"type\":\"offset\"},{\"start\":44062,\"end\":44144,\"offset\":4197379,\"type\":\"offset\"},{\"start\":44257,\"end\":44981,\"offset\":4197379,\"type\":\"offset\"},{\"start\":45736,\"end\":45840,\"offset\":4197379,\"type\":\"offset\"},{\"start\":45975,\"end\":46084,\"offset\":4197379,\"type\":\"offset\"},{\"start\":46224,\"end\":46308,\"offset\":4197379,\"type\":\"offset\"},{\"start\":46423,\"end\":46529,\"offset\":4197379,\"type\":\"offset\"},{\"start\":46666,\"end\":47183,\"offset\":4197379,\"type\":\"offset\"},{\"start\":47731,\"end\":47886,\"offset\":4197379,\"type\":\"offset\"},{\"start\":48072,\"end\":48980,\"offset\":4197379,\"type\":\"offset\"},{\"start\":49919,\"end\":50064,\"offset\":4197379,\"type\":\"offset\"},{\"start\":50240,\"end\":50302,\"offset\":4197379,\"type\":\"offset\"},{\"start\":50395,\"end\":50484,\"offset\":4197379,\"type\":\"offset\"},{\"start\":50604,\"end\":50690,\"offset\":4197379,\"type\":\"offset\"},{\"start\":50807,\"end\":50954,\"offset\":4197379,\"type\":\"offset\"},{\"start\":51132,\"end\":51362,\"offset\":4197379,\"type\":\"offset\"},{\"start\":51623,\"end\":51734,\"offset\":4197379,\"type\":\"offset\"},{\"start\":51876,\"end\":51976,\"offset\":4197379,\"type\":\"offset\"},{\"start\":52107,\"end\":52422,\"offset\":4197379,\"type\":\"offset\"},{\"start\":52768,\"end\":53014,\"offset\":4197379,\"type\":\"offset\"},{\"start\":53291,\"end\":54017,\"offset\":4197379,\"type\":\"offset\"},{\"start\":54774,\"end\":54880,\"offset\":4197379,\"type\":\"offset\"},{\"start\":55017,\"end\":55264,\"offset\":4197379,\"type\":\"offset\"},{\"start\":55542,\"end\":56030,\"offset\":4197379,\"type\":\"offset\"},{\"start\":56549,\"end\":56725,\"offset\":4197379,\"type\":\"offset\"},{\"start\":56932,\"end\":57542,\"offset\":4197379,\"type\":\"offset\"},{\"start\":58183,\"end\":58289,\"offset\":4197379,\"type\":\"offset\"},{\"start\":58426,\"end\":58725,\"offset\":4197379,\"type\":\"offset\"},{\"start\":59055,\"end\":59173,\"offset\":4197379,\"type\":\"offset\"},{\"start\":59322,\"end\":59366,\"offset\":4197379,\"type\":\"offset\"},{\"start\":59441,\"end\":59574,\"offset\":4197379,\"type\":\"offset\"},{\"start\":59738,\"end\":59985,\"offset\":4197379,\"type\":\"offset\"},{\"start\":60263,\"end\":60290,\"offset\":4197379,\"type\":\"offset\"},{\"start\":60348,\"end\":60481,\"offset\":4197379,\"type\":\"offset\"},{\"start\":60645,\"end\":60815,\"offset\":4197379,\"type\":\"offset\"},{\"start\":61016,\"end\":61181,\"offset\":4197379,\"type\":\"offset\"},{\"start\":61377,\"end\":61616,\"offset\":4197379,\"type\":\"offset\"},{\"start\":61886,\"end\":62161,\"offset\":4197379,\"type\":\"offset\"},{\"start\":62467,\"end\":62629,\"offset\":4197379,\"type\":\"offset\"},{\"start\":62822,\"end\":62955,\"offset\":4197379,\"type\":\"offset\"},{\"start\":63119,\"end\":63398,\"offset\":4197379,\"type\":\"offset\"},{\"start\":63708,\"end\":63870,\"offset\":4197379,\"type\":\"offset\"},{\"start\":64063,\"end\":64364,\"offset\":4197379,\"type\":\"offset\"},{\"start\":64696,\"end\":64853,\"offset\":4197379,\"type\":\"offset\"},{\"start\":65041,\"end\":65197,\"offset\":4197379,\"type\":\"offset\"},{\"start\":65384,\"end\":65986,\"offset\":4197379,\"type\":\"offset\"},{\"start\":66619,\"end\":66805,\"offset\":4197379,\"type\":\"offset\"},{\"start\":67022,\"end\":67160,\"offset\":4197379,\"type\":\"offset\"},{\"start\":67329,\"end\":67925,\"offset\":4197379,\"type\":\"offset\"},{\"start\":68552,\"end\":68725,\"offset\":4197379,\"type\":\"offset\"},{\"start\":68929,\"end\":69406,\"offset\":4197379,\"type\":\"offset\"},{\"start\":69914,\"end\":70155,\"offset\":4197379,\"type\":\"offset\"},{\"start\":70427,\"end\":70736,\"offset\":4197379,\"type\":\"offset\"},{\"start\":71076,\"end\":71624,\"offset\":4197379,\"type\":\"offset\"},{\"start\":72203,\"end\":72308,\"offset\":4197379,\"type\":\"offset\"},{\"start\":72444,\"end\":72843,\"offset\":4197379,\"type\":\"offset\"},{\"start\":73273,\"end\":73455,\"offset\":4197379,\"type\":\"offset\"},{\"start\":73668,\"end\":73989,\"offset\":4197379,\"type\":\"offset\"},{\"start\":74341,\"end\":74523,\"offset\":4197379,\"type\":\"offset\"},{\"start\":74736,\"end\":75030,\"offset\":4197379,\"type\":\"offset\"},{\"start\":75355,\"end\":75674,\"offset\":4197379,\"type\":\"offset\"},{\"start\":76024,\"end\":76127,\"offset\":4197379,\"type\":\"offset\"},{\"start\":76261,\"end\":76464,\"offset\":4197379,\"type\":\"offset\"},{\"start\":76698,\"end\":76880,\"offset\":4197379,\"type\":\"offset\"},{\"start\":77093,\"end\":77414,\"offset\":4197379,\"type\":\"offset\"},{\"start\":77766,\"end\":77948,\"offset\":4197379,\"type\":\"offset\"},{\"start\":78161,\"end\":78281,\"offset\":4197379,\"type\":\"offset\"},{\"start\":78432,\"end\":78725,\"offset\":4197379,\"type\":\"offset\"},{\"start\":79049,\"end\":79231,\"offset\":4197379,\"type\":\"offset\"},{\"start\":79444,\"end\":79564,\"offset\":4197379,\"type\":\"offset\"},{\"start\":79715,\"end\":80008,\"offset\":4197379,\"type\":\"offset\"},{\"start\":80332,\"end\":80837,\"offset\":4197379,\"type\":\"offset\"},{\"start\":81373,\"end\":81534,\"offset\":4197379,\"type\":\"offset\"},{\"start\":81726,\"end\":82066,\"offset\":4197379,\"type\":\"offset\"},{\"start\":82437,\"end\":82661,\"offset\":4197379,\"type\":\"offset\"},{\"start\":82916,\"end\":83114,\"offset\":4197379,\"type\":\"offset\"},{\"start\":83343,\"end\":83539,\"offset\":4197379,\"type\":\"offset\"},{\"start\":83766,\"end\":84122,\"offset\":4197379,\"type\":\"offset\"},{\"start\":84509,\"end\":84870,\"offset\":4197379,\"type\":\"offset\"},{\"start\":85262,\"end\":85605,\"offset\":4197379,\"type\":\"offset\"},{\"start\":85979,\"end\":86322,\"offset\":4197379,\"type\":\"offset\"},{\"start\":86696,\"end\":87063,\"offset\":4197379,\"type\":\"offset\"},{\"start\":87461,\"end\":87714,\"offset\":4197379,\"type\":\"offset\"},{\"start\":87998,\"end\":88208,\"offset\":4197379,\"type\":\"offset\"},{\"start\":88449,\"end\":88673,\"offset\":4197379,\"type\":\"offset\"},{\"start\":88928,\"end\":89127,\"offset\":4197379,\"type\":\"offset\"},{\"start\":89357,\"end\":89720,\"offset\":4197379,\"type\":\"offset\"},{\"start\":90114,\"end\":90564,\"offset\":4197379,\"type\":\"offset\"},{\"start\":91045,\"end\":91559,\"offset\":4197379,\"type\":\"offset\"},{\"start\":92104,\"end\":92421,\"offset\":4197379,\"type\":\"offset\"},{\"start\":92769,\"end\":92922,\"offset\":4197379,\"type\":\"offset\"},{\"start\":93106,\"end\":93485,\"offset\":4197379,\"type\":\"offset\"},{\"start\":93895,\"end\":94394,\"offset\":4197379,\"type\":\"offset\"},{\"start\":94924,\"end\":95423,\"offset\":4197379,\"type\":\"offset\"},{\"start\":95953,\"end\":96345,\"offset\":4197379,\"type\":\"offset\"},{\"start\":96768,\"end\":97267,\"offset\":4197379,\"type\":\"offset\"},{\"start\":97797,\"end\":98296,\"offset\":4197379,\"type\":\"offset\"},{\"start\":98826,\"end\":99437,\"offset\":4197379,\"type\":\"offset\"},{\"start\":100079,\"end\":100905,\"offset\":4197379,\"type\":\"offset\"},{\"start\":101762,\"end\":101884,\"offset\":4197379,\"type\":\"offset\"},{\"start\":102037,\"end\":102193,\"offset\":4197379,\"type\":\"offset\"},{\"start\":102380,\"end\":102694,\"offset\":4197379,\"type\":\"offset\"},{\"start\":103039,\"end\":103268,\"offset\":4197379,\"type\":\"offset\"},{\"start\":103528,\"end\":103909,\"offset\":4197379,\"type\":\"offset\"},{\"start\":104321,\"end\":104574,\"offset\":4197379,\"type\":\"offset\"},{\"start\":104858,\"end\":105087,\"offset\":4197379,\"type\":\"offset\"},{\"start\":105347,\"end\":105692,\"offset\":4197379,\"type\":\"offset\"},{\"start\":106068,\"end\":106271,\"offset\":4197379,\"type\":\"offset\"},{\"start\":106505,\"end\":106638,\"offset\":4197379,\"type\":\"offset\"},{\"start\":106802,\"end\":107014,\"offset\":4197379,\"type\":\"offset\"},{\"start\":107257,\"end\":107361,\"offset\":4197379,\"type\":\"offset\"},{\"start\":107496,\"end\":107513,\"offset\":4197379,\"type\":\"offset\"},{\"start\":107561,\"end\":107694,\"offset\":4197379,\"type\":\"offset\"},{\"start\":107858,\"end\":107991,\"offset\":4197379,\"type\":\"offset\"}],\"code\":\"int dbg.main (int esi, int edx) {\\n    loc_0x400b20:\\n        // DATA XREF from entry0 @ 0x401a15(r)\\n        push  (r15)   // binary2ascii.c:180 // int main(int ac,char ** av)//\\n        push  (r14)\\n        r15d = 1      // binary2ascii.c:193\\n        push  (r13)   // binary2ascii.c:180\\n        push  (r12)\\n        r14d = 0      // binary2ascii.c:211\\n        push  (rbp)   // binary2ascii.c:180\\n        push  (rbx)\\n        ebp = edi     // argc\\n        rbx = rsi     // argv\\n        edi = 6       // binary2ascii.c:240 // int category\\n        esi = 0x4032cd // const char *locale\\n        rsp -= 0x88   // binary2ascii.c:180\\n        r13d = 6      // binary2ascii.c:210\\n        r12d = 0xa    // binary2ascii.c:204\\n        sym.imp.setlocale  () // binary2ascii.c:240\\n        // char *setlocale(?, \\\"\\\")\\n        esi = str._usr__locale // binary2ascii.c:245 // 0x4032dc // \\\"/usr//locale\\\" // char *dirname\\n        edi = str.ascii2binary // 0x4032e9 // \\\"ascii2binary\\\" // char *domainname\\n        sym.imp.bindtextdomain  ()\\n        // char *bindtextdomain(\\\"ascii2binary\\\", \\\"/usr//locale\\\")\\n        edi = str.ascii2binary // binary2ascii.c:246 // 0x4032e9 // \\\"ascii2binary\\\" // char *domainname\\n        sym.imp.textdomain  ()\\n        // char *textdomain(\\\"ascii2binary\\\")\\n        ecx = 0       // binary2ascii.c:212\\n        dword [obj.opterr] = 0 // binary2ascii.c:251 // obj.opterr__GLIBC_2.2.5\\n        // [0x6045e0:4]=0\\n        dword [var_20h] = 0 // binary2ascii.c:234\\n        dword [var_14h] = 1 // binary2ascii.c:233\\n        word [var_3ch] = cx // binary2ascii.c:212\\n        dword [stream] = 3 // binary2ascii.c:209\\n        qword [var_18h] = 0 // binary2ascii.c:208\\n        dword [var_24h] = 1 // binary2ascii.c:206\\n        dword [var_30h] = 0 // binary2ascii.c:205\\n        dword [var_38h] = 0 // binary2ascii.c:197\\n        dword [var_34h] = 1 // binary2ascii.c:191\\n        dword [var_2ch] = 0 // binary2ascii.c:190\\n        dword [var_28h] = 0 // binary2ascii.c:189\\n         // do {\\n    loc_0x400bd5:\\n        // XREFS(24)\\n        r8 = var_44h  // binary2ascii.c:252\\n        ecx = obj.opts // 0x604300 // (pstr 0x004033c0) \\\"base\\\"\\n        edx = str.:b:DdehlL:n:o:p:st:Vvw:XxZz // 0x403330 // \\\":b:DdehlL:n:o:p:st:Vvw:XxZz\\\"\\n        rsi = rbx\\n        edi = ebp     // rsp\\n        sym.imp.getopt_long  ()\\n        var = eax - 0xffffffff\\n        if  (!var) goto loc_0x400edb // unlikely\\n         // } while (?);\\n        }\\n        return eax;\\n    loc_0x400bf7:\\n        eax -= 0x3a   // binary2ascii.c:253 // 58\\n        var = eax - 0x40 // elf_phdr\\n        if  (((unsigned) var) > 0) goto case.0x400c03.59 // case.default.0x400c03 // likely\\n            \\n    loc_0x400e9d:\\n        // CODE XREFS from dbg.main @ 0x400bfd(x), 0x400c03(x)\\n        ebx = dword [obj.optopt] // binary2ascii.c:411 // obj.optopt__GLIBC_2.2.5\\n        // [0x6045d8:4]=0\\n        edx = 5\\n        esi = str._s:_invalid_option_flag__c_n // 0x403314 // \\\"%s: invalid option flag %c\\\\n\\\"\\n        edi = 0\\n        sym.imp.dcgettext  ()\\n        rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n        // [0x6045e8:8]=0 // FILE *stream\\n        rsi = rax     // const char *format\\n        ecx = ebx\\n        edx = obj.pgname // 0x60459a // \\\"binary2ascii\\\" //   ...\\n        eax = 0\\n        sym.imp.fprintf  ()\\n        // int fprintf(?, -1, ?)\\n        dbg.Usage  () // binary2ascii.c:412\\n        edi = 3       // binary2ascii.c:413 // int status\\n        sym.imp.exit  ()\\n        // void exit(?)\\n         // } else {\\n    loc_0x400c03:\\n        goto loc_qword [rax*8 + 0x403460] // \\\"D\\\\r@\\\" // switch table (65 cases) at 0x403460 // case.0x400c03.58\\n        }\\n        return eax;             // CODE XREF from dbg.main @ 0x400c03(x)\\n             dword [var_30h] = 1      // binary2ascii.c:309\\n             goto loc_0x400bd5\\n\\n    loc_0x00400c0a: // orphan\\n             // CODE XREF from dbg.main @ 0x400c03(x)\\n             dword [var_30h] = 1      // binary2ascii.c:309\\n             goto loc_0x400bd5\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         dbg.Usage  ()            // binary2ascii.c:312\\n         edi = 1                  // binary2ascii.c:313 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n\\n    loc_0x00400c14: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         dbg.Usage  ()            // binary2ascii.c:312\\n         edi = 1                  // binary2ascii.c:313 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         word [var_3ch] = 1       // binary2ascii.c:315\\n         goto loc_0x400bd5        // binary2ascii.c:316\\n\\n    loc_0x00400c23: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         word [var_3ch] = 1       // binary2ascii.c:315\\n         goto loc_0x400bd5        // binary2ascii.c:316\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         rdi = qword [obj.optarg] // stdlib.h:280 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0 // const char *str\\n         edx = 0xa                // int base\\n         esi = 0                  // char * *endptr\\n         sym.imp.strtol  ()\\n                                  // long strtol(-1, ?, ?)\\n         dword [var_24h] = eax\\n         goto loc_0x400bd5        // binary2ascii.c:319\\n\\n    loc_0x00400c2c: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         rdi = qword [obj.optarg] // stdlib.h:280 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0 // const char *str\\n         edx = 0xa                // int base\\n         esi = 0                  // char * *endptr\\n         sym.imp.strtol  ()\\n                                  // long strtol(-1, ?, ?)\\n         dword [var_24h] = eax\\n         goto loc_0x400bd5        // binary2ascii.c:319\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         rdi = qword [obj.optarg] // stdlib.h:285 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0 // const char *str\\n         edx = 0xa                // int base\\n         esi = 0                  // char * *endptr\\n         sym.imp.strtol  ()\\n                                  // long strtol(-1, ?, ?)\\n         qword [var_18h] = rax\\n         goto loc_0x400bd5        // binary2ascii.c:322\\n\\n    loc_0x00400c45: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         rdi = qword [obj.optarg] // stdlib.h:285 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0 // const char *str\\n         edx = 0xa                // int base\\n         esi = 0                  // char * *endptr\\n         sym.imp.strtol  ()\\n                                  // long strtol(-1, ?, ?)\\n         qword [var_18h] = rax\\n         goto loc_0x400bd5        // binary2ascii.c:322\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         rdi = qword [obj.optarg] // stdlib.h:280 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0 // const char *str\\n         edx = 0xa                // int base\\n         esi = 0                  // char * *endptr\\n         sym.imp.strtol  ()\\n                                  // long strtol(-1, ?, ?)\\n         dword [var_2ch] = 1      // binary2ascii.c:325\\n         dword [stream] = eax     // stdlib.h:280\\n         goto loc_0x400bd5        // binary2ascii.c:326\\n\\n    loc_0x00400c62: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         rdi = qword [obj.optarg] // stdlib.h:280 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0 // const char *str\\n         edx = 0xa                // int base\\n         esi = 0                  // char * *endptr\\n         sym.imp.strtol  ()\\n                                  // long strtol(-1, ?, ?)\\n         dword [var_2ch] = 1      // binary2ascii.c:325\\n         dword [stream] = eax     // stdlib.h:280\\n         goto loc_0x400bd5        // binary2ascii.c:326\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         dbg.Print_Sizes  ()      // binary2ascii.c:328\\n         rsi = qword [obj.stderr] // binary2ascii.c:329 // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0\\n         edi = 0xa\\n         sym.imp._IO_putc  ()\\n         dbg.Print_Byte_Order  () // binary2ascii.c:330\\n         edi = 1                  // binary2ascii.c:331 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n\\n    loc_0x00400c86: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         dbg.Print_Sizes  ()      // binary2ascii.c:328\\n         rsi = qword [obj.stderr] // binary2ascii.c:329 // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0\\n         edi = 0xa\\n         sym.imp._IO_putc  ()\\n         dbg.Print_Byte_Order  () // binary2ascii.c:330\\n         edi = 1                  // binary2ascii.c:331 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         sym.imp.__ctype_tolower_loc  () // binary2ascii.c:334\\n         r8 = qword [obj.optarg]  // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0\\n         rdx = qword [rax]\\n         rax = byte [r8]\\n         rcx = rax\\n         eax = dword [rdx + rax*4]\\n         var = eax - 0x71         // 113\\n         if  (!var) goto loc_0x401073 // unlikely\\n\\n    loc_0x00400cab: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         sym.imp.__ctype_tolower_loc  () // binary2ascii.c:334\\n         r8 = qword [obj.optarg]  // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0\\n         rdx = qword [rax]\\n         rax = byte [r8]\\n         rcx = rax\\n         eax = dword [rdx + rax*4]\\n         var = eax - 0x71         // 113\\n         if  (!var) goto loc_0x401073 // unlikely\\n         if  (var > 0) goto loc_0x400f8d // likely\\n\\n    loc_0x00400ccd: // orphan\\n         if  (var > 0) goto loc_0x400f8d // likely\\n         var = eax - 0x64         // 100\\n         if  (!var) goto loc_0x401009 // unlikely\\n\\n    loc_0x00400cd3: // orphan\\n         var = eax - 0x64         // 100\\n         if  (!var) goto loc_0x401009 // unlikely\\n         var = eax - 0x66         // 102\\n         if  (var) goto loc_0x401054 // likely\\n\\n    loc_0x00400cdc: // orphan\\n         var = eax - 0x66         // 102\\n         if  (var) goto loc_0x401054 // likely\\n         dword [var_20h] = 5      // binary2ascii.c:343\\n\\n    loc_0x00400ce5: // orphan\\n         dword [var_20h] = 5      // binary2ascii.c:343\\n         // CODE XREFS from dbg.main @ 0x401011(x), 0x40107b(x)\\n         dword [var_14h] = 2      // binary2ascii.c:369\\n         goto loc_0x400bd5\\n\\n    loc_0x00400ced: // orphan\\n         // CODE XREFS from dbg.main @ 0x401011(x), 0x40107b(x)\\n         dword [var_14h] = 2      // binary2ascii.c:369\\n         goto loc_0x400bd5\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         dbg.Version  ()          // binary2ascii.c:389\\n         edi = 1                  // binary2ascii.c:390 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n\\n    loc_0x00400cfa: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         dbg.Version  ()          // binary2ascii.c:389\\n         edi = 1                  // binary2ascii.c:390 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         dword [var_34h] = 0      // binary2ascii.c:399\\n         goto loc_0x400bd5        // binary2ascii.c:400\\n\\n    loc_0x00400d09: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         dword [var_34h] = 0      // binary2ascii.c:399\\n         goto loc_0x400bd5        // binary2ascii.c:400\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         r14d = 1                 // binary2ascii.c:402\\n         goto loc_0x400bd5        // binary2ascii.c:403\\n\\n    loc_0x00400d16: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         r14d = 1                 // binary2ascii.c:402\\n         goto loc_0x400bd5        // binary2ascii.c:403\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         rdi = qword [obj.optarg] // stdlib.h:280 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0 // const char *str\\n         edx = 0xa                // int base\\n         esi = 0                  // char * *endptr\\n         sym.imp.strtol  ()\\n                                  // long strtol(-1, ?, ?)\\n         dword [var_28h] = 1      // binary2ascii.c:396\\n         r13d = eax               // stdlib.h:280\\n         goto loc_0x400bd5        // binary2ascii.c:397\\n\\n    loc_0x00400d21: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         rdi = qword [obj.optarg] // stdlib.h:280 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0 // const char *str\\n         edx = 0xa                // int base\\n         esi = 0                  // char * *endptr\\n         sym.imp.strtol  ()\\n                                  // long strtol(-1, ?, ?)\\n         dword [var_28h] = 1      // binary2ascii.c:396\\n         r13d = eax               // stdlib.h:280\\n         goto loc_0x400bd5        // binary2ascii.c:397\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         ebx = dword [obj.optopt] // binary2ascii.c:408 // obj.optopt__GLIBC_2.2.5\\n                                  // [0x6045d8:4]=0\\n         edx = 5\\n         esi = str._s:_missing_argument_to_option_flag__c._n // 0x402fb8 // \\\"%s: missing argument to option flag %c.\\\\n\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         ecx = ebx\\n\\n    loc_0x00400d44: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         ebx = dword [obj.optopt] // binary2ascii.c:408 // obj.optopt__GLIBC_2.2.5\\n                                  // [0x6045d8:4]=0\\n         edx = 5\\n         esi = str._s:_missing_argument_to_option_flag__c._n // 0x402fb8 // \\\"%s: missing argument to option flag %c.\\\\n\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         ecx = ebx\\n         // CODE XREF from dbg.main @ 0x40106e(x)\\n         rdi = qword [obj.stderr] // binary2ascii.c:381 // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         edx = obj.pgname         // 0x60459a // \\\"binary2ascii\\\" //   ...\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         edi = 3                  // binary2ascii.c:382 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n\\n    loc_0x00400d5d: // orphan\\n         // CODE XREF from dbg.main @ 0x40106e(x)\\n         rdi = qword [obj.stderr] // binary2ascii.c:381 // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         edx = obj.pgname         // 0x60459a // \\\"binary2ascii\\\" //   ...\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         edi = 3                  // binary2ascii.c:382 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         r15d = 0                 // binary2ascii.c:298\\n         goto loc_0x400bd5\\n\\n    loc_0x00400d7d: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         r15d = 0                 // binary2ascii.c:298\\n         goto loc_0x400bd5\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         rsi = qword [obj.optarg] // binary2ascii.c:256 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0 // const char *locale\\n         edi = 1                  // int category\\n         sym.imp.setlocale  ()\\n                                  // char *setlocale(?, -1)\\n         var = rax & rax\\n         if  (var) goto loc_0x400bd5 // unlikely\\n\\n    loc_0x00400d85: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         rsi = qword [obj.optarg] // binary2ascii.c:256 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0 // const char *locale\\n         edi = 1                  // int category\\n         sym.imp.setlocale  ()\\n                                  // char *setlocale(?, -1)\\n         var = rax & rax\\n         if  (var) goto loc_0x400bd5 // unlikely\\n         rdi = qword [obj.stderr] // binary2ascii.c:257 // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rdx = qword [obj.optarg] // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0\\n         esi = str.The_locale__s_is_not_available._n // 0x402ed0 // \\\"The locale %s is not available.\\\\n\\\" // const char *format\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, \\\"The locale %s is not available.\\\\n\\\", ?)\\n         edi = 6                  // binary2ascii.c:258 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n\\n    loc_0x00400d9f: // orphan\\n         rdi = qword [obj.stderr] // binary2ascii.c:257 // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rdx = qword [obj.optarg] // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0\\n         esi = str.The_locale__s_is_not_available._n // 0x402ed0 // \\\"The locale %s is not available.\\\\n\\\" // const char *format\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, \\\"The locale %s is not available.\\\\n\\\", ?)\\n         edi = 6                  // binary2ascii.c:258 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         dword [var_38h] = 1      // binary2ascii.c:386\\n         goto loc_0x400bd5        // binary2ascii.c:387\\n\\n    loc_0x00400dc1: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         dword [var_38h] = 1      // binary2ascii.c:386\\n         goto loc_0x400bd5        // binary2ascii.c:387\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         dbg.Print_ExitCodes  ()  // binary2ascii.c:392\\n         edi = 1                  // binary2ascii.c:393 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n\\n    loc_0x00400dce: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         dbg.Print_ExitCodes  ()  // binary2ascii.c:392\\n         edi = 1                  // binary2ascii.c:393 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         r14d = 0                 // binary2ascii.c:405\\n         goto loc_0x400bd5        // binary2ascii.c:406\\n\\n    loc_0x00400ddd: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         r14d = 0                 // binary2ascii.c:405\\n         goto loc_0x400bd5        // binary2ascii.c:406\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         sym.imp.__ctype_tolower_loc  () // binary2ascii.c:266\\n         rdi = qword [obj.optarg] // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0\\n         rax = qword [rax]\\n         rdx = byte [rdi]\\n         eax = dword [rax + rdx*4]\\n         var = eax - 0x64         // 100\\n         if  (!var) goto loc_0x401049 // unlikely\\n\\n    loc_0x00400de5: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         sym.imp.__ctype_tolower_loc  () // binary2ascii.c:266\\n         rdi = qword [obj.optarg] // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0\\n         rax = qword [rax]\\n         rdx = byte [rdi]\\n         eax = dword [rax + rdx*4]\\n         var = eax - 0x64         // 100\\n         if  (!var) goto loc_0x401049 // unlikely\\n         if  (var <= 0) goto loc_0x401016 // unlikely\\n\\n    loc_0x00400e04: // orphan\\n         if  (var <= 0) goto loc_0x401016 // unlikely\\n         var = eax - 0x68         // 104\\n         if  (!var) goto loc_0x400ff4 // unlikely\\n\\n    loc_0x00400e0a: // orphan\\n         var = eax - 0x68         // 104\\n         if  (!var) goto loc_0x400ff4 // unlikely\\n         var = eax - 0x6f         // 111\\n         r12d = 8                 // binary2ascii.c:278\\n         if  (!var) goto loc_0x400bd5 // binary2ascii.c:266 // unlikely\\n\\n    loc_0x00400e13: // orphan\\n         var = eax - 0x6f         // 111\\n         r12d = 8                 // binary2ascii.c:278\\n         if  (!var) goto loc_0x400bd5 // binary2ascii.c:266 // unlikely\\n         // CODE XREF from dbg.main @ 0x401025(x)\\n         rsi = endptr             // binary2ascii.c:281 // char * *endptr\\n         edx = 0xa                // int base\\n         sym.imp.strtoul  ()\\n                                  // long strtoul(-1, ?, ?)\\n         r12d = eax\\n         sym.imp.__errno_location  () // binary2ascii.c:282\\n         eax = dword [rax]\\n         var = eax - 0x22         // 34\\n         if  (!var) goto loc_0x401969 // unlikely\\n\\n    loc_0x00400e22: // orphan\\n         // CODE XREF from dbg.main @ 0x401025(x)\\n         rsi = endptr             // binary2ascii.c:281 // char * *endptr\\n         edx = 0xa                // int base\\n         sym.imp.strtoul  ()\\n                                  // long strtoul(-1, ?, ?)\\n         r12d = eax\\n         sym.imp.__errno_location  () // binary2ascii.c:282\\n         eax = dword [rax]\\n         var = eax - 0x22         // 34\\n         if  (!var) goto loc_0x401969 // unlikely\\n         var = eax - 0x16         // binary2ascii.c:287 // 22\\n         if  (!var) goto loc_0x400e57 // unlikely\\n\\n    loc_0x00400e44: // orphan\\n         var = eax - 0x16         // binary2ascii.c:287 // 22\\n         if  (!var) goto loc_0x400e57 // unlikely\\n         rax = qword [endptr]     // binary2ascii.c:291\\n         var = byte [rax] - 0\\n         if  (!var) goto loc_0x400bd5 // unlikely\\n\\n    loc_0x00400e49: // orphan\\n         rax = qword [endptr]     // binary2ascii.c:291\\n         var = byte [rax] - 0\\n         if  (!var) goto loc_0x400bd5 // unlikely\\n         // CODE XREF from dbg.main @ 0x400e47(x)\\n         rbx = qword [obj.optarg] // binary2ascii.c:288 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0\\n         edx = 5\\n         esi = str._s:_base_of__s_is_ill_formed_n // 0x4032f6 // \\\"%s: base of %s is ill-formed\\\\n\\\"\\n\\n    loc_0x00400e57: // orphan\\n         // CODE XREF from dbg.main @ 0x400e47(x)\\n         rbx = qword [obj.optarg] // binary2ascii.c:288 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0\\n         edx = 5\\n         esi = str._s:_base_of__s_is_ill_formed_n // 0x4032f6 // \\\"%s: base of %s is ill-formed\\\\n\\\"\\n         // CODE XREF from dbg.main @ 0x40197a(x)\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         rcx = rbx\\n\\n    loc_0x00400e68: // orphan\\n         // CODE XREF from dbg.main @ 0x40197a(x)\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         rcx = rbx\\n         // CODE XREF from dbg.main @ 0x401808(x)\\n         rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         edx = obj.pgname         // 0x60459a // \\\"binary2ascii\\\" //   ...\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         edi = 3                  // binary2ascii.c:289 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n\\n    loc_0x00400e72: // orphan\\n         // CODE XREF from dbg.main @ 0x401808(x)\\n         rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         edx = obj.pgname         // 0x60459a // \\\"binary2ascii\\\" //   ...\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         edi = 3                  // binary2ascii.c:289 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         r15d = 1                 // binary2ascii.c:302\\n         goto loc_0x400bd5\\n\\n    loc_0x00400e92: // orphan\\n         // CODE XREF from dbg.main @ 0x400c03(x)\\n         r15d = 1                 // binary2ascii.c:302\\n         goto loc_0x400bd5\\n         // CODE XREF from dbg.main @ 0x400bf1(x)\\n         var = r12d - 2           // binary2ascii.c:419 // 2\\n         ebp = r13d\\n         r9d = dword [stream]\\n         bl = ne\\n         if  (!var) goto loc_0x400f2c // unlikely\\n\\n    loc_0x00400edb: // orphan\\n         // CODE XREF from dbg.main @ 0x400bf1(x)\\n         var = r12d - 2           // binary2ascii.c:419 // 2\\n         ebp = r13d\\n         r9d = dword [stream]\\n         bl = ne\\n         if  (!var) goto loc_0x400f2c // unlikely\\n         eax = r12d\\n         eax &= 0xfffffffd        // 4294967293\\n         var = eax - 8            // 8\\n         if  (!var) goto loc_0x400f2c // unlikely\\n\\n    loc_0x00400eec: // orphan\\n         eax = r12d\\n         eax &= 0xfffffffd        // 4294967293\\n         var = eax - 8            // 8\\n         if  (!var) goto loc_0x400f2c // unlikely\\n         var = r12d - 0x10        // binary2ascii.c:419 // 16\\n         if  (!var) goto loc_0x400f2c // unlikely\\n\\n    loc_0x00400ef7: // orphan\\n         var = r12d - 0x10        // binary2ascii.c:419 // 16\\n         if  (!var) goto loc_0x400f2c // unlikely\\n         edx = 5                  // binary2ascii.c:420\\n         esi = str.Base_of__d_not_permitted._Possible_bases_are:_2__8__10__and_16._n // 0x402fe8 // \\\"Base of %d not permitted. Possible bases are: 2, 8, 10, and 16.\\\\n\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = r12d\\n\\n    loc_0x00400efd: // orphan\\n         edx = 5                  // binary2ascii.c:420\\n         esi = str.Base_of__d_not_permitted._Possible_bases_are:_2__8__10__and_16._n // 0x402fe8 // \\\"Base of %d not permitted. Possible bases are: 2, 8, 10, and 16.\\\\n\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = r12d\\n         // CODE XREFS from dbg.main @ 0x401677(x), 0x40169e(x), 0x4016c4(x), 0x401725(x)\\n         rdi = qword [obj.stderr] // binary2ascii.c:463 // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         edi = 3                  // binary2ascii.c:464 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n\\n    loc_0x00400f11: // orphan\\n         // CODE XREFS from dbg.main @ 0x401677(x), 0x40169e(x), 0x4016c4(x), 0x401725(x)\\n         rdi = qword [obj.stderr] // binary2ascii.c:463 // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         edi = 3                  // binary2ascii.c:464 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n         // CODE XREFS from dbg.main @ 0x400eea(x), 0x400ef5(x), 0x400efb(x)\\n         var = dword [var_14h] - 2 // binary2ascii.c:424\\n         r8b = e\\n         if  (var) goto loc_0x400f41 // unlikely\\n\\n    loc_0x00400f2c: // orphan\\n         // CODE XREFS from dbg.main @ 0x400eea(x), 0x400ef5(x), 0x400efb(x)\\n         var = dword [var_14h] - 2 // binary2ascii.c:424\\n         r8b = e\\n         if  (var) goto loc_0x400f41 // unlikely\\n         var = r12d - 0xa         // 10\\n         if  (var) goto loc_0x401414 // likely\\n\\n    loc_0x00400f37: // orphan\\n         var = r12d - 0xa         // 10\\n         if  (var) goto loc_0x401414 // likely\\n         // CODE XREF from dbg.main @ 0x400f35(x)\\n         eax = dword [var_20h]    // binary2ascii.c:430\\n         eax -= 5\\n         var = eax - 2            // 2\\n         if  (((unsigned) var) > 0) goto 0x4013ec // unlikely\\n\\n    loc_0x00400f41: // orphan\\n         // CODE XREF from dbg.main @ 0x400f35(x)\\n         eax = dword [var_20h]    // binary2ascii.c:430\\n         eax -= 5\\n         var = eax - 2            // 2\\n         if  (((unsigned) var) > 0) goto 0x4013ec // unlikely\\n         var = dword [var_14h] - 2 // binary2ascii.c:430\\n         if  (!var) goto loc_0x401080 // likely\\n\\n    loc_0x00400f51: // orphan\\n         var = dword [var_14h] - 2 // binary2ascii.c:430\\n         if  (!var) goto loc_0x401080 // likely\\n         edx = 5                  // binary2ascii.c:434\\n         esi = str._s:_impermissible_combination_of_output_type_and_size__n // 0x403068 // \\\"%s: impermissible combination of output type and size \\\\n\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = obj.pgname         // 0x60459a // \\\"binary2ascii\\\"\\n\\n    loc_0x00400f5c: // orphan\\n         edx = 5                  // binary2ascii.c:434\\n         esi = str._s:_impermissible_combination_of_output_type_and_size__n // 0x403068 // \\\"%s: impermissible combination of output type and size \\\\n\\\"\\n         edi = 0\\n         sym.imp.dcgettext  ()\\n         edx = obj.pgname         // 0x60459a // \\\"binary2ascii\\\"\\n         // CODE XREF from dbg.main @ 0x4016df(x)\\n         rdi = qword [obj.stderr] // binary2ascii.c:450 // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         edi = 3                  // binary2ascii.c:451 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n\\n    loc_0x00400f72: // orphan\\n         // CODE XREF from dbg.main @ 0x4016df(x)\\n         rdi = qword [obj.stderr] // binary2ascii.c:450 // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         edi = 3                  // binary2ascii.c:451 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n         // CODE XREF from dbg.main @ 0x400ccd(x)\\n         var = eax - 0x73         // binary2ascii.c:334 // 115\\n         if  (!var) goto loc_0x400fff // unlikely\\n\\n    loc_0x00400f8d: // orphan\\n         // CODE XREF from dbg.main @ 0x400ccd(x)\\n         var = eax - 0x73         // binary2ascii.c:334 // 115\\n         if  (!var) goto loc_0x400fff // unlikely\\n         var = eax - 0x75         // 117\\n         if  (var) goto loc_0x401054 // likely\\n\\n    loc_0x00400f92: // orphan\\n         var = eax - 0x75         // 117\\n         if  (var) goto loc_0x401054 // likely\\n         dword [var_14h] = 1      // binary2ascii.c:336\\n\\n    loc_0x00400f9b: // orphan\\n         dword [var_14h] = 1      // binary2ascii.c:336\\n         // CODE XREF from dbg.main @ 0x401007(x)\\n         eax = 0                  // binary2ascii.c:360\\n         rcx |= 0xffffffffffffffff\\n         rdi = r8\\n         repne scasb al,yte [rdi]\\n         rcx = !rcx\\n         rax = rcx - 1\\n         var = rax - 1            // 1\\n         if  (((unsigned) var) <= 0) goto 0x4017ea // unlikely\\n\\n    loc_0x00400fa3: // orphan\\n         // CODE XREF from dbg.main @ 0x401007(x)\\n         eax = 0                  // binary2ascii.c:360\\n         rcx |= 0xffffffffffffffff\\n         rdi = r8\\n         repne scasb al,yte [rdi]\\n         rcx = !rcx\\n         rax = rcx - 1\\n         var = rax - 1            // 1\\n         if  (((unsigned) var) <= 0) goto 0x4017ea // unlikely\\n         rax = byte [r8 + 1]      // binary2ascii.c:364\\n         rcx = rax\\n         eax = dword [rdx + rax*4]\\n         var = eax - 0x6c         // 108\\n         if  (!var) goto loc_0x401423 // unlikely\\n\\n    loc_0x00400fbf: // orphan\\n         rax = byte [r8 + 1]      // binary2ascii.c:364\\n         rcx = rax\\n         eax = dword [rdx + rax*4]\\n         var = eax - 0x6c         // 108\\n         if  (!var) goto loc_0x401423 // unlikely\\n         if  (var > 0) goto loc_0x40102a // likely\\n\\n    loc_0x00400fd3: // orphan\\n         if  (var > 0) goto loc_0x40102a // likely\\n         var = eax - 0x63         // 99\\n         if  (!var) goto loc_0x401430 // unlikely\\n\\n    loc_0x00400fd5: // orphan\\n         var = eax - 0x63         // 99\\n         if  (!var) goto loc_0x401430 // unlikely\\n         var = eax - 0x69         // 105\\n         if  (var) goto loc_0x40143d // likely\\n\\n    loc_0x00400fde: // orphan\\n         var = eax - 0x69         // 105\\n         if  (var) goto loc_0x40143d // likely\\n         dword [var_20h] = 2      // binary2ascii.c:372\\n         goto loc_0x400bd5        // binary2ascii.c:373\\n\\n    loc_0x00400fe7: // orphan\\n         dword [var_20h] = 2      // binary2ascii.c:372\\n         goto loc_0x400bd5        // binary2ascii.c:373\\n         // CODE XREF from dbg.main @ 0x400e0d(x)\\n         r12d = 0x10              // binary2ascii.c:275 // 16\\n         goto loc_0x400bd5        // binary2ascii.c:276\\n\\n    loc_0x00400ff4: // orphan\\n         // CODE XREF from dbg.main @ 0x400e0d(x)\\n         r12d = 0x10              // binary2ascii.c:275 // 16\\n         goto loc_0x400bd5        // binary2ascii.c:276\\n         // CODE XREF from dbg.main @ 0x400f90(x)\\n         dword [var_14h] = 0      // binary2ascii.c:339\\n         goto loc_0x400fa3\\n\\n    loc_0x00400fff: // orphan\\n         // CODE XREF from dbg.main @ 0x400f90(x)\\n         dword [var_14h] = 0      // binary2ascii.c:339\\n         goto loc_0x400fa3\\n         // CODE XREF from dbg.main @ 0x400cd6(x)\\n         dword [var_20h] = 6      // binary2ascii.c:347\\n         goto loc_0x400ced\\n\\n    loc_0x00401009: // orphan\\n         // CODE XREF from dbg.main @ 0x400cd6(x)\\n         dword [var_20h] = 6      // binary2ascii.c:347\\n         goto loc_0x400ced\\n         // CODE XREF from dbg.main @ 0x400e04(x)\\n         var = eax - 0x62         // binary2ascii.c:266 // 98\\n         r12d = 2                 // binary2ascii.c:269\\n         if  (!var) goto loc_0x400bd5 // binary2ascii.c:266 // unlikely\\n\\n    loc_0x00401016: // orphan\\n         // CODE XREF from dbg.main @ 0x400e04(x)\\n         var = eax - 0x62         // binary2ascii.c:266 // 98\\n         r12d = 2                 // binary2ascii.c:269\\n         if  (!var) goto loc_0x400bd5 // binary2ascii.c:266 // unlikely\\n         goto loc_0x400e22\\n\\n    loc_0x00401025: // orphan\\n         goto loc_0x400e22\\n         // CODE XREF from dbg.main @ 0x400fd3(x)\\n         var = eax - 0x71         // binary2ascii.c:364 // 113\\n         if  (!var) goto loc_0x401450 // unlikely\\n\\n    loc_0x0040102a: // orphan\\n         // CODE XREF from dbg.main @ 0x400fd3(x)\\n         var = eax - 0x71         // binary2ascii.c:364 // 113\\n         if  (!var) goto loc_0x401450 // unlikely\\n         var = eax - 0x73         // 115\\n         if  (var) goto loc_0x40143d // likely\\n\\n    loc_0x00401033: // orphan\\n         var = eax - 0x73         // 115\\n         if  (var) goto loc_0x40143d // likely\\n         dword [var_20h] = 1      // binary2ascii.c:369\\n         goto loc_0x400bd5\\n\\n    loc_0x0040103c: // orphan\\n         dword [var_20h] = 1      // binary2ascii.c:369\\n         goto loc_0x400bd5\\n         // CODE XREF from dbg.main @ 0x400dfe(x)\\n         r12d = 0xa               // binary2ascii.c:272\\n         goto loc_0x400bd5\\n\\n    loc_0x00401049: // orphan\\n         // CODE XREF from dbg.main @ 0x400dfe(x)\\n         r12d = 0xa               // binary2ascii.c:272\\n         goto loc_0x400bd5\\n         // CODE XREFS from dbg.main @ 0x400cdf(x), 0x400f95(x)\\n         byte [stream] = cl\\n         edx = 5                  // binary2ascii.c:356\\n         esi = str._s:_unrecognized_output_type__c_n // 0x402f38 // \\\"%s: unrecognized output type %c\\\\n\\\"\\n\\n    loc_0x00401054: // orphan\\n         // CODE XREFS from dbg.main @ 0x400cdf(x), 0x400f95(x)\\n         byte [stream] = cl\\n         edx = 5                  // binary2ascii.c:356\\n         esi = str._s:_unrecognized_output_type__c_n // 0x402f38 // \\\"%s: unrecognized output type %c\\\\n\\\"\\n         // CODE XREF from dbg.main @ 0x40144b(x)\\n         edi = 0                  // binary2ascii.c:381\\n         sym.imp.dcgettext  ()\\n         ecx = byte [stream]\\n         goto loc_0x400d5d\\n\\n    loc_0x00401062: // orphan\\n         // CODE XREF from dbg.main @ 0x40144b(x)\\n         edi = 0                  // binary2ascii.c:381\\n         sym.imp.dcgettext  ()\\n         ecx = byte [stream]\\n         goto loc_0x400d5d\\n         // CODE XREF from dbg.main @ 0x400cc7(x)\\n         dword [var_20h] = 7      // binary2ascii.c:352\\n         goto loc_0x400ced\\n\\n    loc_0x00401073: // orphan\\n         // CODE XREF from dbg.main @ 0x400cc7(x)\\n         dword [var_20h] = 7      // binary2ascii.c:352\\n         goto loc_0x400ced\\n         // CODE XREFS from dbg.main @ 0x400f56(x), 0x4013f1(x), 0x4013ff(x)\\n         var = r13d & r13d        // binary2ascii.c:441\\n         if  (var <= 0) goto loc_0x40168a // likely\\n\\n    loc_0x00401080: // orphan\\n         // CODE XREFS from dbg.main @ 0x400f56(x), 0x4013f1(x), 0x4013ff(x)\\n         var = r13d & r13d        // binary2ascii.c:441\\n         if  (var <= 0) goto loc_0x40168a // likely\\n         var = dword [stream] - 0 // binary2ascii.c:445\\n         js 0x4016af              // unlikely\\n\\n    loc_0x00401089: // orphan\\n         var = dword [stream] - 0 // binary2ascii.c:445\\n         js 0x4016af              // unlikely\\n         var = qword [var_18h] - 0 // binary2ascii.c:449\\n         js 0x4016c9              // unlikely\\n\\n    loc_0x00401094: // orphan\\n         var = qword [var_18h] - 0 // binary2ascii.c:449\\n         js 0x4016c9              // unlikely\\n         var = dword [var_24h] - 0 // binary2ascii.c:453\\n         if  (var <= 0) goto loc_0x401710 // likely\\n\\n    loc_0x004010a0: // orphan\\n         var = dword [var_24h] - 0 // binary2ascii.c:453\\n         if  (var <= 0) goto loc_0x401710 // likely\\n         var = dword [stream] - 0x32 // binary2ascii.c:458\\n         if  (var > 0) goto loc_0x401662 // unlikely\\n\\n    loc_0x004010ab: // orphan\\n         var = dword [stream] - 0x32 // binary2ascii.c:458\\n         if  (var > 0) goto loc_0x401662 // unlikely\\n         var = r13d - 0x32        // binary2ascii.c:462 // 50\\n         if  (var > 0) goto loc_0x4016a3 // unlikely\\n\\n    loc_0x004010b6: // orphan\\n         var = r13d - 0x32        // binary2ascii.c:462 // 50\\n         if  (var > 0) goto loc_0x4016a3 // unlikely\\n         var = dword [var_14h] - 2 // binary2ascii.c:466\\n         eax = byte [var_30h]\\n         r13b = ne\\n         if  (!var) goto loc_0x40110b // unlikely\\n\\n    loc_0x004010c0: // orphan\\n         var = dword [var_14h] - 2 // binary2ascii.c:466\\n         eax = byte [var_30h]\\n         r13b = ne\\n         if  (!var) goto loc_0x40110b // unlikely\\n         // CODE XREF from dbg.main @ 0x40110f(x)\\n         var = al & al\\n         if  (!var) goto loc_0x40110b // likely\\n\\n    loc_0x004010d0: // orphan\\n         // CODE XREF from dbg.main @ 0x40110f(x)\\n         var = al & al\\n         if  (!var) goto loc_0x40110b // likely\\n         edx = 5                  // binary2ascii.c:467\\n         esi = str.Warning:__e_flag_has_no_effect_with_integral_data_types._n // 0x4031a8 // \\\"Warning: -e flag has no effect with integral data types.\\\\n\\\"\\n         edi = 0\\n         byte [var_3fh] = r8b\\n         dword [stream] = r9d\\n         sym.imp.dcgettext  ()\\n         rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         r8d = byte [var_3fh]\\n         r9d = dword [stream]\\n\\n    loc_0x004010d4: // orphan\\n         edx = 5                  // binary2ascii.c:467\\n         esi = str.Warning:__e_flag_has_no_effect_with_integral_data_types._n // 0x4031a8 // \\\"Warning: -e flag has no effect with integral data types.\\\\n\\\"\\n         edi = 0\\n         byte [var_3fh] = r8b\\n         dword [stream] = r9d\\n         sym.imp.dcgettext  ()\\n         rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         r8d = byte [var_3fh]\\n         r9d = dword [stream]\\n         // CODE XREFS from dbg.main @ 0x4010ce(x), 0x4010d2(x)\\n         eax = dword [var_20h]    // binary2ascii.c:478\\n         goto loc_qword [rax*8 + 0x403668] // switch table (3 cases) at 0x403668\\n\\n    loc_0x0040110b: // orphan\\n         // CODE XREFS from dbg.main @ 0x4010ce(x), 0x4010d2(x)\\n         eax = dword [var_20h]    // binary2ascii.c:478\\n         goto loc_qword [rax*8 + 0x403668] // switch table (3 cases) at 0x403668\\n         // CODE XREF from dbg.main @ 0x4013a2(x)\\n         // CODE XREF from case.0x40110f.2 @ +0x1b(x)\\n         // CODE XREF from dbg.main @ 0x4013e7(x)\\n         var = dword [var_28h] - 0 // binary2ascii.c:509\\n         if  (var) goto loc_0x40137a // likely\\n\\n    loc_0x0040111f: // orphan\\n         // CODE XREF from dbg.main @ 0x4013a2(x)\\n         // CODE XREF from case.0x40110f.2 @ +0x1b(x)\\n         // CODE XREF from dbg.main @ 0x4013e7(x)\\n         var = dword [var_28h] - 0 // binary2ascii.c:509\\n         if  (var) goto loc_0x40137a // likely\\n         // CODE XREF from switch.0x0040110f @ +0x260(x)\\n         var = r12d - 8           // binary2ascii.c:140 // 8\\n         ebp = dword [stream]     // binary2ascii.c:524\\n         if  (!var) goto loc_0x4019c7 // binary2ascii.c:140 // unlikely\\n\\n    loc_0x0040112a: // orphan\\n         // CODE XREF from switch.0x0040110f @ +0x260(x)\\n         var = r12d - 8           // binary2ascii.c:140 // 8\\n         ebp = dword [stream]     // binary2ascii.c:524\\n         if  (!var) goto loc_0x4019c7 // binary2ascii.c:140 // unlikely\\n         var = r12d - 0xa         // 10\\n         if  (var) goto loc_0x4019c0 // likely\\n\\n    loc_0x00401138: // orphan\\n         var = r12d - 0xa         // 10\\n         if  (var) goto loc_0x4019c0 // likely\\n         var = dword [var_2ch] - 0 // binary2ascii.c:529\\n         ebp = rbp + rbp*2        // binary2ascii.c:146\\n         if  (var) goto loc_0x401186 // binary2ascii.c:529 // likely\\n\\n    loc_0x00401142: // orphan\\n         var = dword [var_2ch] - 0 // binary2ascii.c:529\\n         ebp = rbp + rbp*2        // binary2ascii.c:146\\n         if  (var) goto loc_0x401186 // binary2ascii.c:529 // likely\\n         var = r8b & r8b          // binary2ascii.c:530\\n         if  (var) goto loc_0x4019ed // unlikely\\n\\n    loc_0x0040114d: // orphan\\n         var = r8b & r8b          // binary2ascii.c:530\\n         if  (var) goto loc_0x4019ed // unlikely\\n         // CODE XREFS from dbg.main @ 0x401388(x), 0x4019d6(x)\\n         r9d = 6                  // binary2ascii.c:531\\n\\n    loc_0x00401156: // orphan\\n         // CODE XREFS from dbg.main @ 0x401388(x), 0x4019d6(x)\\n         r9d = 6                  // binary2ascii.c:531\\n         // CODE XREFS from dbg.main @ 0x40137f(x), 0x401394(x)\\n         var = r12d - 8           // binary2ascii.c:534 // 8\\n         eax = 1\\n         if  (!var) r14d = eax\\n\\n    loc_0x0040115c: // orphan\\n         // CODE XREFS from dbg.main @ 0x40137f(x), 0x401394(x)\\n         var = r12d - 8           // binary2ascii.c:534 // 8\\n         eax = 1\\n         if  (!var) r14d = eax\\n         // CODE XREFS from dbg.main @ 0x4019e8(x), 0x4019f3(x)\\n         var = r13b & r13b        // binary2ascii.c:535\\n         if  (!var) goto loc_0x401186 // likely\\n\\n    loc_0x00401169: // orphan\\n         // CODE XREFS from dbg.main @ 0x4019e8(x), 0x4019f3(x)\\n         var = r13b & r13b        // binary2ascii.c:535\\n         if  (!var) goto loc_0x401186 // likely\\n         eax = r12 - 8            // binary2ascii.c:535\\n         eax &= 0xfffffff7        // 4294967287\\n         if  (var) goto loc_0x401186 // likely\\n\\n    loc_0x0040116e: // orphan\\n         eax = r12 - 8            // binary2ascii.c:535\\n         eax &= 0xfffffff7        // 4294967287\\n         if  (var) goto loc_0x401186 // likely\\n         var = dword [var_34h] - 0\\n         eax = 1\\n         if  (!zf) r14d = eax\\n\\n    loc_0x00401178: // orphan\\n         var = dword [var_34h] - 0\\n         eax = 1\\n         if  (!zf) r14d = eax\\n         // CODE XREFS from dbg.main @ 0x40114b(x), 0x40116c(x), 0x401176(x)\\n         rdi = qword [stream]     // binary2ascii.c:537 // size_t size\\n         byte [var_2ch] = r8b\\n         dword [var_28h] = r9d\\n         sym.imp.malloc  ()\\n                                  //  void *malloc(-1)\\n         var = rax & rax          // binary2ascii.c:538\\n         r13 = rax                // binary2ascii.c:537\\n         edx = 5                  // binary2ascii.c:539\\n         esi = str.Failed_to_allocate_storage_for_input_buffer._n // 0x4031e8 // \\\"Failed to allocate storage for input buffer.\\\\n\\\"\\n         r9d = dword [var_28h]    // binary2ascii.c:538\\n         r8d = byte [var_2ch]\\n         if  (!var) goto loc_0x4014bf // likely\\n\\n    loc_0x00401186: // orphan\\n         // CODE XREFS from dbg.main @ 0x40114b(x), 0x40116c(x), 0x401176(x)\\n         rdi = qword [stream]     // binary2ascii.c:537 // size_t size\\n         byte [var_2ch] = r8b\\n         dword [var_28h] = r9d\\n         sym.imp.malloc  ()\\n                                  //  void *malloc(-1)\\n         var = rax & rax          // binary2ascii.c:538\\n         r13 = rax                // binary2ascii.c:537\\n         edx = 5                  // binary2ascii.c:539\\n         esi = str.Failed_to_allocate_storage_for_input_buffer._n // 0x4031e8 // \\\"Failed to allocate storage for input buffer.\\\\n\\\"\\n         r9d = dword [var_28h]    // binary2ascii.c:538\\n         r8d = byte [var_2ch]\\n         if  (!var) goto loc_0x4014bf // likely\\n         var = bl & bl            // binary2ascii.c:543\\n         if  (!var) goto loc_0x4012c9 // likely\\n\\n    loc_0x004011bb: // orphan\\n         var = bl & bl            // binary2ascii.c:543\\n         if  (!var) goto loc_0x4012c9 // likely\\n         var = r12d - 0x10        // binary2ascii.c:545 // 16\\n         if  (var) goto loc_0x4011d4 // likely\\n\\n    loc_0x004011c3: // orphan\\n         var = r12d - 0x10        // binary2ascii.c:545 // 16\\n         if  (var) goto loc_0x4011d4 // likely\\n         var = dword [var_34h] - 0\\n         if  (var) goto loc_0x401747 // unlikely\\n\\n    loc_0x004011c9: // orphan\\n         var = dword [var_34h] - 0\\n         if  (var) goto loc_0x401747 // unlikely\\n         // CODE XREF from dbg.main @ 0x4011c7(x)\\n         byte [format] = 0        // binary2ascii.c:544\\n\\n    loc_0x004011d4: // orphan\\n         // CODE XREF from dbg.main @ 0x4011c7(x)\\n         byte [format] = 0        // binary2ascii.c:544\\n         // CODE XREF from dbg.main @ 0x401753(x)\\n         rbx = format             // binary2ascii.c:546\\n         eax = 0\\n         rcx |= 0xffffffffffffffff\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         var = r15d & r15d        // binary2ascii.c:547\\n         rax = rcx                // binary2ascii.c:546\\n         rax = !rax\\n         word [rbx + rax - 1] = 0x25 // '%'\\n                                  // [0x25:2]=0xffff // 37\\n         if  (var) goto loc_0x401758 // binary2ascii.c:547 // unlikely\\n\\n    loc_0x004011d9: // orphan\\n         // CODE XREF from dbg.main @ 0x401753(x)\\n         rbx = format             // binary2ascii.c:546\\n         eax = 0\\n         rcx |= 0xffffffffffffffff\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         var = r15d & r15d        // binary2ascii.c:547\\n         rax = rcx                // binary2ascii.c:546\\n         rax = !rax\\n         word [rbx + rax - 1] = 0x25 // '%'\\n                                  // [0x25:2]=0xffff // 37\\n         if  (var) goto loc_0x401758 // binary2ascii.c:547 // unlikely\\n         // CODE XREF from dbg.main @ 0x40175e(x)\\n         var = r14d & r14d        // binary2ascii.c:548\\n         if  (var) goto loc_0x401763 // unlikely\\n\\n    loc_0x004011ff: // orphan\\n         // CODE XREF from dbg.main @ 0x40175e(x)\\n         var = r14d & r14d        // binary2ascii.c:548\\n         if  (var) goto loc_0x401763 // unlikely\\n         // CODE XREF from dbg.main @ 0x40177b(x)\\n         rdi = s                  // binary2ascii.c:549 // char *s\\n         ecx = ebp                //  ... // rsp\\n         edx = 0x40336b           // 'k3@' // \\\"%d\\\" // const char *format\\n         esi = 0xc                // 12 // size_t size\\n         eax = 0\\n         rbp |= 0xffffffffffffffff\\n         r14d = 0\\n         byte [var_2ch] = r8b\\n         dword [var_28h] = r9d\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(\\\"\\\", -1, \\\"%d\\\", ?)\\n         rdi = rbx\\n         eax = r14d\\n         rcx = rbp\\n         repne scasb al,yte [rdi]\\n         rsi = s                  // binary2ascii.c:550\\n         rcx = !rcx\\n         rdi = rbx + rcx - 1\\n         sym.imp.stpcpy  ()\\n         r8d = byte [var_2ch]     // binary2ascii.c:551\\n         r9d = dword [var_28h]\\n         var = r8b & r8b\\n         if  (var) goto loc_0x4018f9 // unlikely\\n\\n    loc_0x00401208: // orphan\\n         // CODE XREF from dbg.main @ 0x40177b(x)\\n         rdi = s                  // binary2ascii.c:549 // char *s\\n         ecx = ebp                //  ... // rsp\\n         edx = 0x40336b           // 'k3@' // \\\"%d\\\" // const char *format\\n         esi = 0xc                // 12 // size_t size\\n         eax = 0\\n         rbp |= 0xffffffffffffffff\\n         r14d = 0\\n         byte [var_2ch] = r8b\\n         dword [var_28h] = r9d\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(\\\"\\\", -1, \\\"%d\\\", ?)\\n         rdi = rbx\\n         eax = r14d\\n         rcx = rbp\\n         repne scasb al,yte [rdi]\\n         rsi = s                  // binary2ascii.c:550\\n         rcx = !rcx\\n         rdi = rbx + rcx - 1\\n         sym.imp.stpcpy  ()\\n         r8d = byte [var_2ch]     // binary2ascii.c:551\\n         r9d = dword [var_28h]\\n         var = r8b & r8b\\n         if  (var) goto loc_0x4018f9 // unlikely\\n         ecx = dword [var_20h]    // binary2ascii.c:563\\n         var = ecx - 1            // 1\\n         if  (!var) goto loc_0x40198d // unlikely\\n\\n    loc_0x00401262: // orphan\\n         ecx = dword [var_20h]    // binary2ascii.c:563\\n         var = ecx - 1            // 1\\n         if  (!var) goto loc_0x40198d // unlikely\\n         if  (((unsigned) var) < 0) goto 0x40197f // unlikely\\n\\n    loc_0x0040126f: // orphan\\n         if  (((unsigned) var) < 0) goto 0x40197f // unlikely\\n         var = ecx - 3            // 3\\n         if  (!var) goto loc_0x40195f // unlikely\\n\\n    loc_0x00401275: // orphan\\n         var = ecx - 3            // 3\\n         if  (!var) goto loc_0x40195f // unlikely\\n         var = ecx - 4            // 4\\n         if  (var) goto loc_0x40128c // likely\\n\\n    loc_0x0040127e: // orphan\\n         var = ecx - 4            // 4\\n         if  (var) goto loc_0x40128c // likely\\n         word [rax] = 0x6c6c      // binary2ascii.c:575 // 'll'\\n                                  // [0x6c6c:2]=0xffff\\n         byte [rax + 2] = 0\\n\\n    loc_0x00401283: // orphan\\n         word [rax] = 0x6c6c      // binary2ascii.c:575 // 'll'\\n                                  // [0x6c6c:2]=0xffff\\n         byte [rax + 2] = 0\\n         // CODE XREFS from dbg.main @ 0x401281(x), 0x401964(x), 0x401988(x), 0x401992(x)\\n         var = r12d - 0xa         // binary2ascii.c:580 // 10 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x4017c2 // unlikely\\n\\n    loc_0x0040128c: // orphan\\n         // CODE XREFS from dbg.main @ 0x401281(x), 0x401964(x), 0x401988(x), 0x401992(x)\\n         var = r12d - 0xa         // binary2ascii.c:580 // 10 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x4017c2 // unlikely\\n         var = r12d - 0x10        // 16 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x401867 // unlikely\\n\\n    loc_0x00401296: // orphan\\n         var = r12d - 0x10        // 16 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x401867 // unlikely\\n         var = r12d - 8           // 8 // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x4012be // likely\\n\\n    loc_0x004012a0: // orphan\\n         var = r12d - 8           // 8 // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x4012be // likely\\n         eax = 0                  // binary2ascii.c:583 // \\\"l\\\" // \\\"l\\\"\\n         rcx |= 0xffffffffffffffff // \\\"l\\\" // \\\"l\\\"\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         rax = rcx\\n         rax = !rax\\n         word [rbx + rax - 1] = 0x6f // 'o'\\n                                  // [0x6f:2]=0xffff // 111\\n\\n    loc_0x004012a6: // orphan\\n         eax = 0                  // binary2ascii.c:583 // \\\"l\\\" // \\\"l\\\"\\n         rcx |= 0xffffffffffffffff // \\\"l\\\" // \\\"l\\\"\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         rax = rcx\\n         rax = !rax\\n         word [rbx + rax - 1] = 0x6f // 'o'\\n                                  // [0x6f:2]=0xffff // 111\\n         // XREFS: CODE 0x004012a4  CODE 0x004017e5  CODE 0x0040187f  \\n         // XREFS: CODE 0x0040195a  CODE 0x004019af  CODE 0x004019bb  \\n         var = dword [var_38h] - 0 // binary2ascii.c:597\\n         if  (var) goto loc_0x401780 // likely\\n\\n    loc_0x004012be: // orphan\\n         // XREFS: CODE 0x004012a4  CODE 0x004017e5  CODE 0x0040187f  \\n         // XREFS: CODE 0x0040195a  CODE 0x004019af  CODE 0x004019bb  \\n         var = dword [var_38h] - 0 // binary2ascii.c:597\\n         if  (var) goto loc_0x401780 // likely\\n         // CODE XREFS from dbg.main @ 0x4011bd(x), 0x401796(x)\\n         rdi = qword [obj.stdin]  // binary2ascii.c:601 // obj.stdin__GLIBC_2.2.5\\n                                  // [0x6045c8:8]=0 // FILE *stream\\n         sym.imp.fileno  ()\\n                                  // int fileno(?)\\n         rdi = qword [obj.stdout] // binary2ascii.c:602 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0 // FILE *stream\\n         ebp = eax                // binary2ascii.c:601\\n         sym.imp.fileno  ()       // binary2ascii.c:602\\n                                  // int fileno(?)\\n         var = qword [var_18h] - 0 // binary2ascii.c:604 // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x4014e1 // likely\\n\\n    loc_0x004012c9: // orphan\\n         // CODE XREFS from dbg.main @ 0x4011bd(x), 0x401796(x)\\n         rdi = qword [obj.stdin]  // binary2ascii.c:601 // obj.stdin__GLIBC_2.2.5\\n                                  // [0x6045c8:8]=0 // FILE *stream\\n         sym.imp.fileno  ()\\n                                  // int fileno(?)\\n         rdi = qword [obj.stdout] // binary2ascii.c:602 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0 // FILE *stream\\n         ebp = eax                // binary2ascii.c:601\\n         sym.imp.fileno  ()       // binary2ascii.c:602\\n                                  // int fileno(?)\\n         var = qword [var_18h] - 0 // binary2ascii.c:604 // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x4014e1 // likely\\n         ebx = 0                  // \\\"l\\\" // \\\"l\\\"\\n         r14 = qword [var_18h]\\n         goto loc_0x401305\\n\\n    loc_0x004012ef: // orphan\\n         ebx = 0                  // \\\"l\\\" // \\\"l\\\"\\n         r14 = qword [var_18h]\\n         goto loc_0x401305\\n         // CODE XREF from dbg.main @ 0x401318(x)\\n         rbx += 1                 // binary2ascii.c:606 // \\\"l\\\"\\n         var = r14 - rbx          // binary2ascii.c:607 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x4014e1 // unlikely\\n\\n    loc_0x004012f8: // orphan\\n         // CODE XREF from dbg.main @ 0x401318(x)\\n         rbx += 1                 // binary2ascii.c:606 // \\\"l\\\"\\n         var = r14 - rbx          // binary2ascii.c:607 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x4014e1 // unlikely\\n         // CODE XREF from dbg.main @ 0x4012f6(x)\\n         rsi = buf                // binary2ascii.c:605 // void *buf // (cstr 0x00000000) \\\"ll\\\"\\n         edx = 1                  // size_t nbyte // \\\"l\\\"\\n         edi = ebp                // int fildes // (cstr 0x00000000) \\\"ll\\\" rsp\\n         sym.imp.read  ()\\n                                  // ssize_t read(?, 0x0000000000000000, 0xffff006c)\\n         var = eax & eax          // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x4012f8 // unlikely\\n\\n    loc_0x00401305: // orphan\\n         // CODE XREF from dbg.main @ 0x4012f6(x)\\n         rsi = buf                // binary2ascii.c:605 // void *buf // (cstr 0x00000000) \\\"ll\\\"\\n         edx = 1                  // size_t nbyte // \\\"l\\\"\\n         edi = ebp                // int fildes // (cstr 0x00000000) \\\"ll\\\" rsp\\n         sym.imp.read  ()\\n                                  // ssize_t read(?, 0x0000000000000000, 0xffff006c)\\n         var = eax & eax          // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x4012f8 // unlikely\\n         edx = 5                  // binary2ascii.c:610\\n         esi = str.Byte_offset_exceeds_size_of_input_file._n // 0x403218 // \\\"Byte offset exceeds size of input file.\\\\n\\\"\\n\\n    loc_0x0040131a: // orphan\\n         edx = 5                  // binary2ascii.c:610\\n         esi = str.Byte_offset_exceeds_size_of_input_file._n // 0x403218 // \\\"Byte offset exceeds size of input file.\\\\n\\\"\\n         // CODE XREFS from dbg.main @ 0x40140f(x), 0x40141e(x)\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         edi = 3                  // binary2ascii.c:611 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n\\n    loc_0x00401324: // orphan\\n         // CODE XREFS from dbg.main @ 0x40140f(x), 0x40141e(x)\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         edi = 3                  // binary2ascii.c:611 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n         // CODE XREF from dbg.main @ 0x4013b5(x)\\n         ebp = 6                  // binary2ascii.c:513\\n\\n    loc_0x00401375: // orphan\\n         // CODE XREF from dbg.main @ 0x4013b5(x)\\n         ebp = 6                  // binary2ascii.c:513\\n         // XREFS: CODE 0x00401124  CODE 0x004013b7  CODE 0x004013d5  \\n         // XREFS: CODE 0x004013dc  CODE 0x00401685  CODE 0x00401812  \\n         // XREFS: CODE 0x004019c2  \\n         var = dword [var_2ch] - 0 // binary2ascii.c:529 // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x40115c // unlikely\\n\\n    loc_0x0040137a: // orphan\\n         // XREFS: CODE 0x00401124  CODE 0x004013b7  CODE 0x004013d5  \\n         // XREFS: CODE 0x004013dc  CODE 0x00401685  CODE 0x00401812  \\n         // XREFS: CODE 0x004019c2  \\n         var = dword [var_2ch] - 0 // binary2ascii.c:529 // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x40115c // unlikely\\n         var = r8b & r8b          // binary2ascii.c:530 // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x401156 // likely\\n\\n    loc_0x00401385: // orphan\\n         var = r8b & r8b          // binary2ascii.c:530 // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x401156 // likely\\n         r9d = 3\\n         goto loc_0x40115c\\n\\n    loc_0x0040138e: // orphan\\n         r9d = 3\\n         goto loc_0x40115c\\n         // CODE XREF from dbg.main @ 0x40110f(x)\\n         qword [stream] = 2       // binary2ascii.c:483\\n         goto loc_0x40111f\\n\\n    loc_0x00401399: // orphan\\n         // CODE XREF from dbg.main @ 0x40110f(x)\\n         qword [stream] = 2       // binary2ascii.c:483\\n         goto loc_0x40111f\\n         // CODE XREF from dbg.main @ 0x40110f(x)\\n         var = dword [var_28h] - 0 // binary2ascii.c:509 // \\\"l\\\" // \\\"l\\\"\\n         qword [stream] = 4       // binary2ascii.c:486\\n         if  (!var) goto loc_0x401375 // binary2ascii.c:509 // likely\\n\\n    loc_0x004013a7: // orphan\\n         // CODE XREF from dbg.main @ 0x40110f(x)\\n         var = dword [var_28h] - 0 // binary2ascii.c:509 // \\\"l\\\" // \\\"l\\\"\\n         qword [stream] = 4       // binary2ascii.c:486\\n         if  (!var) goto loc_0x401375 // binary2ascii.c:509 // likely\\n         goto loc_0x40137a\\n\\n    loc_0x004013b7: // orphan\\n         goto loc_0x40137a\\n         // CODE XREF from dbg.main @ 0x40110f(x)\\n         qword [stream] = 1       // binary2ascii.c:480\\n         goto loc_0x40111f\\n\\n    loc_0x004013de: // orphan\\n         // CODE XREF from dbg.main @ 0x40110f(x)\\n         qword [stream] = 1       // binary2ascii.c:480\\n         goto loc_0x40111f\\n         // CODE XREF from dbg.main @ 0x400f4b(x)\\n         var = dword [var_14h] - 0 // binary2ascii.c:437 // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x401080 // unlikely\\n\\n    loc_0x004013ec: // orphan\\n         // CODE XREF from dbg.main @ 0x400f4b(x)\\n         var = dword [var_14h] - 0 // binary2ascii.c:437 // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x401080 // unlikely\\n         eax = r12 - 8            // binary2ascii.c:437\\n         eax &= 0xfffffff7        // 4294967287 // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x401080 // likely\\n\\n    loc_0x004013f7: // orphan\\n         eax = r12 - 8            // binary2ascii.c:437\\n         eax &= 0xfffffff7        // 4294967287 // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x401080 // likely\\n         edx = 5                  // binary2ascii.c:438\\n         esi = str.Signed_integers_may_be_printed_only_in_decimal_or_binary._n // 0x4030a0 // \\\"Signed integers may be printed only in decimal or binary.\\\\n\\\"\\n         goto loc_0x401324\\n\\n    loc_0x00401405: // orphan\\n         edx = 5                  // binary2ascii.c:438\\n         esi = str.Signed_integers_may_be_printed_only_in_decimal_or_binary._n // 0x4030a0 // \\\"Signed integers may be printed only in decimal or binary.\\\\n\\\"\\n         goto loc_0x401324\\n         // CODE XREF from dbg.main @ 0x400f3b(x)\\n         edx = 5                  // binary2ascii.c:425\\n         esi = str.Floating_point_numbers_must_be_printed_in_decimal._n // 0x403030 // \\\"Floating point numbers must be printed in decimal.\\\\n\\\"\\n         goto loc_0x401324\\n\\n    loc_0x00401414: // orphan\\n         // CODE XREF from dbg.main @ 0x400f3b(x)\\n         edx = 5                  // binary2ascii.c:425\\n         esi = str.Floating_point_numbers_must_be_printed_in_decimal._n // 0x403030 // \\\"Floating point numbers must be printed in decimal.\\\\n\\\"\\n         goto loc_0x401324\\n         // CODE XREF from dbg.main @ 0x400fcd(x)\\n         dword [var_20h] = 3      // binary2ascii.c:375\\n         goto loc_0x400bd5        // binary2ascii.c:376\\n\\n    loc_0x00401423: // orphan\\n         // CODE XREF from dbg.main @ 0x400fcd(x)\\n         dword [var_20h] = 3      // binary2ascii.c:375\\n         goto loc_0x400bd5        // binary2ascii.c:376\\n         // CODE XREF from dbg.main @ 0x400fd8(x)\\n         dword [var_20h] = 0      // binary2ascii.c:366\\n         goto loc_0x400bd5\\n\\n    loc_0x00401430: // orphan\\n         // CODE XREF from dbg.main @ 0x400fd8(x)\\n         dword [var_20h] = 0      // binary2ascii.c:366\\n         goto loc_0x400bd5\\n         // CODE XREFS from dbg.main @ 0x400fe1(x), 0x401036(x)\\n         byte [stream] = cl\\n         edx = 5                  // binary2ascii.c:381\\n         esi = str._s:_unrecognized_output_size__c_n // 0x402f90 // \\\"%s: unrecognized output size %c\\\\n\\\"\\n         goto loc_0x401062\\n\\n    loc_0x0040143d: // orphan\\n         // CODE XREFS from dbg.main @ 0x400fe1(x), 0x401036(x)\\n         byte [stream] = cl\\n         edx = 5                  // binary2ascii.c:381\\n         esi = str._s:_unrecognized_output_size__c_n // 0x402f90 // \\\"%s: unrecognized output size %c\\\\n\\\"\\n         goto loc_0x401062\\n         // CODE XREF from dbg.main @ 0x40102d(x)\\n         dword [var_20h] = 4      // binary2ascii.c:378\\n         goto loc_0x400bd5        // binary2ascii.c:379\\n\\n    loc_0x00401450: // orphan\\n         // CODE XREF from dbg.main @ 0x40102d(x)\\n         dword [var_20h] = 4      // binary2ascii.c:378\\n         goto loc_0x400bd5        // binary2ascii.c:379\\n         // CODE XREFS from dbg.main @ 0x401501(x), 0x40150f(x)\\n         r15d = edx\\n         rax = rbx                // binary2ascii.c:675\\n         edx = 0                  // \\\"l\\\" // \\\"l\\\"\\n         r14 /=\\n         var = rdx & rdx          // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x40172a // unlikely\\n\\n    loc_0x0040145d: // orphan\\n         // CODE XREFS from dbg.main @ 0x401501(x), 0x40150f(x)\\n         r15d = edx\\n         rax = rbx                // binary2ascii.c:675\\n         edx = 0                  // \\\"l\\\" // \\\"l\\\"\\n         r14 /=\\n         var = rdx & rdx          // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x40172a // unlikely\\n         // CODE XREF from dbg.main @ 0x40173b(x)\\n         var = dword [var_38h] - 0 // binary2ascii.c:676\\n         if  (!var) goto loc_0x4014ac // unlikely\\n\\n    loc_0x00401471: // orphan\\n         // CODE XREF from dbg.main @ 0x40173b(x)\\n         var = dword [var_38h] - 0 // binary2ascii.c:676\\n         if  (!var) goto loc_0x4014ac // unlikely\\n         var = rbx - 1            // binary2ascii.c:677 // 1 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         edx = 5\\n         if  (!var) goto loc_0x4018d2 // unlikely\\n\\n    loc_0x00401478: // orphan\\n         var = rbx - 1            // binary2ascii.c:677 // 1 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         edx = 5\\n         if  (!var) goto loc_0x4018d2 // unlikely\\n         esi = str._s:_converted__d_tokens_n // binary2ascii.c:678 // 0x403391 // \\\"%s: converted %d tokens\\\\n\\\"\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         rcx = rbx\\n         edx = obj.pgname         // 0x60459a // \\\"binary2ascii\\\" //   ...\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n\\n    loc_0x00401487: // orphan\\n         esi = str._s:_converted__d_tokens_n // binary2ascii.c:678 // 0x403391 // \\\"%s: converted %d tokens\\\\n\\\"\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         rcx = rbx\\n         edx = obj.pgname         // 0x60459a // \\\"binary2ascii\\\" //   ...\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         // CODE XREFS from dbg.main @ 0x401476(x), 0x4018f4(x)\\n         var = r15d & r15d        // binary2ascii.c:680 // \\\"l\\\" // \\\"l\\\"\\n         if  (var <= 0) goto loc_0x401740 // likely\\n\\n    loc_0x004014ac: // orphan\\n         // CODE XREFS from dbg.main @ 0x401476(x), 0x4018f4(x)\\n         var = r15d & r15d        // binary2ascii.c:680 // \\\"l\\\" // \\\"l\\\"\\n         if  (var <= 0) goto loc_0x401740 // likely\\n         edx = 5                  // binary2ascii.c:681\\n         esi = str.Error_reading_input._n // 0x4033aa // \\\"Error reading input.\\\\n\\\"\\n\\n    loc_0x004014b5: // orphan\\n         edx = 5                  // binary2ascii.c:681\\n         esi = str.Error_reading_input._n // 0x4033aa // \\\"Error reading input.\\\\n\\\"\\n         // CODE XREF from dbg.main @ 0x4011b5(x)\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         edi = 2                  // binary2ascii.c:682 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n\\n    loc_0x004014bf: // orphan\\n         // CODE XREF from dbg.main @ 0x4011b5(x)\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         edi = 2                  // binary2ascii.c:682 // int status\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n         // CODE XREFS from dbg.main @ 0x4012e9(x), 0x4012ff(x)\\n         r14 = dword [var_24h]\\n         r15 = qword [stream]\\n         ebx = 0                  // \\\"l\\\" // \\\"l\\\"\\n\\n    loc_0x004014e1: // orphan\\n         // CODE XREFS from dbg.main @ 0x4012e9(x), 0x4012ff(x)\\n         r14 = dword [var_24h]\\n         r15 = qword [stream]\\n         ebx = 0                  // \\\"l\\\" // \\\"l\\\"\\n         // CODE XREFS from dbg.main @ 0x40154d(x), 0x40165d(x)\\n         rdx = r15                // binary2ascii.c:615 // size_t nbyte\\n         rsi = r13                // void *buf\\n         edi = ebp                // int fildes // (cstr 0x00000000) \\\"ll\\\" rsp\\n         sym.imp.read  ()\\n                                  // ssize_t read(?, -1, -1)\\n         edx = eax\\n         cdq\\n         var = rax - r15          // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x40145d // unlikely\\n\\n    loc_0x004014ed: // orphan\\n         // CODE XREFS from dbg.main @ 0x40154d(x), 0x40165d(x)\\n         rdx = r15                // binary2ascii.c:615 // size_t nbyte\\n         rsi = r13                // void *buf\\n         edi = ebp                // int fildes // (cstr 0x00000000) \\\"ll\\\" rsp\\n         sym.imp.read  ()\\n                                  // ssize_t read(?, -1, -1)\\n         edx = eax\\n         cdq\\n         var = rax - r15          // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x40145d // unlikely\\n         eax = dword [var_20h]    // binary2ascii.c:617\\n         rbx += 1                 // binary2ascii.c:616 // \\\"l\\\"\\n         goto loc_qword [rax*8 + 0x4036a8] // binary2ascii.c:617 // switch table (8 cases) at 0x4036a8 // case.0x40150f.4\\n\\n    loc_0x00401507: // orphan\\n         eax = dword [var_20h]    // binary2ascii.c:617\\n         rbx += 1                 // binary2ascii.c:616 // \\\"l\\\"\\n         goto loc_qword [rax*8 + 0x4036a8] // binary2ascii.c:617 // switch table (8 cases) at 0x4036a8 // case.0x40150f.4\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         xmm0 = qword [r13]       // binary2ascii.c:663\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 1                  // \\\"l\\\"\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n\\n    loc_0x00401516: // orphan\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         xmm0 = qword [r13]       // binary2ascii.c:663\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 1                  // \\\"l\\\"\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n         // XREFS: CODE 0x00401568  CODE 0x00401584  CODE 0x004015a6  \\n         // XREFS: CODE 0x004015ad  CODE 0x004015c4  CODE 0x0040164e  \\n         // XREFS: CODE 0x004017bd  \\n         edx = 0                  // binary2ascii.c:671 // \\\"l\\\" // \\\"l\\\"\\n         rax = rbx\\n         rsi = qword [obj.stdout] // stdio.h:81 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         r14 /=                   // binary2ascii.c:671\\n         var = rdx & rdx          // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x401653 // unlikely\\n\\n    loc_0x0040152b: // orphan\\n         // XREFS: CODE 0x00401568  CODE 0x00401584  CODE 0x004015a6  \\n         // XREFS: CODE 0x004015ad  CODE 0x004015c4  CODE 0x0040164e  \\n         // XREFS: CODE 0x004017bd  \\n         edx = 0                  // binary2ascii.c:671 // \\\"l\\\" // \\\"l\\\"\\n         rax = rbx\\n         rsi = qword [obj.stdout] // stdio.h:81 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         r14 /=                   // binary2ascii.c:671\\n         var = rdx & rdx          // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x401653 // unlikely\\n         edi = 0xa                // stdio.h:81\\n         sym.imp._IO_putc  ()\\n         goto loc_0x4014ed\\n\\n    loc_0x00401543: // orphan\\n         edi = 0xa                // stdio.h:81\\n         sym.imp._IO_putc  ()\\n         goto loc_0x4014ed\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         xmm0 ^= xmm0             // binary2ascii.c:660\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 1                  // \\\"l\\\"\\n         cvtss2sd xmm0,word [r13]\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x40152b        // binary2ascii.c:661\\n\\n    loc_0x0040154f: // orphan\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         xmm0 ^= xmm0             // binary2ascii.c:660\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 1                  // \\\"l\\\"\\n         cvtss2sd xmm0,word [r13]\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x40152b        // binary2ascii.c:661\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         var = r12d - 2           // binary2ascii.c:655 // 2 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x40179b // unlikely\\n\\n    loc_0x0040156a: // orphan\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         var = r12d - 2           // binary2ascii.c:655 // 2 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x40179b // unlikely\\n         rsi = qword [r13]        // binary2ascii.c:656\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()       // binary2ascii.c:657\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x40152b\\n\\n    loc_0x00401574: // orphan\\n         rsi = qword [r13]        // binary2ascii.c:656\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()       // binary2ascii.c:657\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x40152b\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         var = r12d - 2           // binary2ascii.c:646 // 2 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x401884 // unlikely\\n\\n    loc_0x00401586: // orphan\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         var = r12d - 2           // binary2ascii.c:646 // 2 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x401884 // unlikely\\n         rsi = qword [r13]        // binary2ascii.c:647\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()       // binary2ascii.c:648\\n                                  // int printf(\\\"\\\")\\n\\n    loc_0x00401590: // orphan\\n         rsi = qword [r13]        // binary2ascii.c:647\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()       // binary2ascii.c:648\\n                                  // int printf(\\\"\\\")\\n         // XREFS: CODE 0x004015e3  CODE 0x0040160b  CODE 0x00401633  \\n         // XREFS: CODE 0x004016f5  CODE 0x0040170b  CODE 0x0040183a  \\n         // XREFS: CODE 0x00401862  CODE 0x004018a6  CODE 0x004018cd  \\n         var = word [var_3ch] - 0 // binary2ascii.c:649\\n         if  (!var) goto loc_0x40152b // unlikely\\n\\n    loc_0x004015a0: // orphan\\n         // XREFS: CODE 0x004015e3  CODE 0x0040160b  CODE 0x00401633  \\n         // XREFS: CODE 0x004016f5  CODE 0x0040170b  CODE 0x0040183a  \\n         // XREFS: CODE 0x00401862  CODE 0x004018a6  CODE 0x004018cd  \\n         var = word [var_3ch] - 0 // binary2ascii.c:649\\n         if  (!var) goto loc_0x40152b // unlikely\\n         var = byte [r13] - 0xa   // binary2ascii.c:649\\n         if  (var) goto loc_0x40152b // likely\\n\\n    loc_0x004015a8: // orphan\\n         var = byte [r13] - 0xa   // binary2ascii.c:649\\n         if  (var) goto loc_0x40152b // likely\\n         rsi = qword [obj.stdout] // stdio.h:81 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         edi = 0xa\\n         sym.imp._IO_putc  ()\\n         goto loc_0x40152b\\n\\n    loc_0x004015b3: // orphan\\n         rsi = qword [obj.stdout] // stdio.h:81 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         edi = 0xa\\n         sym.imp._IO_putc  ()\\n         goto loc_0x40152b\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         var = r12d - 2           // binary2ascii.c:637 // 2 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x4018ab // unlikely\\n\\n    loc_0x004015c9: // orphan\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         var = r12d - 2           // binary2ascii.c:637 // 2 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x4018ab // unlikely\\n         esi = dword [r13]        // binary2ascii.c:638\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()       // binary2ascii.c:639\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x4015a0\\n\\n    loc_0x004015d3: // orphan\\n         esi = dword [r13]        // binary2ascii.c:638\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()       // binary2ascii.c:639\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x4015a0\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         var = r12d - 2           // binary2ascii.c:619 // 2 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x40183f // unlikely\\n\\n    loc_0x004015e5: // orphan\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         var = r12d - 2           // binary2ascii.c:619 // 2 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x40183f // unlikely\\n         var = dword [var_14h] - 0 // binary2ascii.c:620 // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x4016e4 // unlikely\\n\\n    loc_0x004015ef: // orphan\\n         var = dword [var_14h] - 0 // binary2ascii.c:620 // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x4016e4 // unlikely\\n         esi = byte [r13]         // binary2ascii.c:620\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x4015a0\\n\\n    loc_0x004015fa: // orphan\\n         esi = byte [r13]         // binary2ascii.c:620\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x4015a0\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         var = r12d - 2           // binary2ascii.c:628 // 2 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x401817 // unlikely\\n\\n    loc_0x0040160d: // orphan\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         var = r12d - 2           // binary2ascii.c:628 // 2 // \\\"l\\\" // \\\"l\\\" // \\\"l\\\"\\n         if  (!var) goto loc_0x401817 // unlikely\\n         var = dword [var_14h] - 0 // binary2ascii.c:629 // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x4016fa // unlikely\\n\\n    loc_0x00401617: // orphan\\n         var = dword [var_14h] - 0 // binary2ascii.c:629 // \\\"l\\\" // \\\"l\\\"\\n         if  (var) goto loc_0x4016fa // unlikely\\n         esi = word [r13]         // binary2ascii.c:629\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x4015a0\\n\\n    loc_0x00401622: // orphan\\n         esi = word [r13]         // binary2ascii.c:629\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x4015a0\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         push  (qword [r13 + 8])  // binary2ascii.c:667\\n         push  (qword [r13])      // \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n         rax = pop  ()            // binary2ascii.c:668\\n         rdx = pop  ()            // (cstr 0x00000000) \\\"ll\\\" rsp\\n         goto loc_0x40152b\\n\\n    loc_0x00401638: // orphan\\n         // CODE XREF from dbg.main @ 0x40150f(x)\\n         push  (qword [r13 + 8])  // binary2ascii.c:667\\n         push  (qword [r13])      // \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n         rax = pop  ()            // binary2ascii.c:668\\n         rdx = pop  ()            // (cstr 0x00000000) \\\"ll\\\" rsp\\n         goto loc_0x40152b\\n         // CODE XREF from dbg.main @ 0x40153d(x)\\n         edi = 0x20               // stdio.h:81 // 32\\n         sym.imp._IO_putc  ()\\n         goto loc_0x4014ed\\n\\n    loc_0x00401653: // orphan\\n         // CODE XREF from dbg.main @ 0x40153d(x)\\n         edi = 0x20               // stdio.h:81 // 32\\n         sym.imp._IO_putc  ()\\n         goto loc_0x4014ed\\n         // CODE XREF from dbg.main @ 0x4010b0(x)\\n         edx = 5                  // binary2ascii.c:459\\n         esi = str.Precision_of__d_is_excessive_n // 0x40334c // \\\"Precision of %d is excessive\\\\n\\\"\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         edx = dword [stream]\\n         goto loc_0x400f11\\n\\n    loc_0x00401662: // orphan\\n         // CODE XREF from dbg.main @ 0x4010b0(x)\\n         edx = 5                  // binary2ascii.c:459\\n         esi = str.Precision_of__d_is_excessive_n // 0x40334c // \\\"Precision of %d is excessive\\\\n\\\"\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         edx = dword [stream]\\n         goto loc_0x400f11\\n         // CODE XREF from dbg.main @ 0x401083(x)\\n         edx = 5                  // binary2ascii.c:442\\n         esi = str.Field_width_of__d_does_not_make_sense._n // 0x4030e0 // \\\"Field width of %d does not make sense.\\\\n\\\"\\n\\n    loc_0x0040168a: // orphan\\n         // CODE XREF from dbg.main @ 0x401083(x)\\n         edx = 5                  // binary2ascii.c:442\\n         esi = str.Field_width_of__d_does_not_make_sense._n // 0x4030e0 // \\\"Field width of %d does not make sense.\\\\n\\\"\\n         // CODE XREF from dbg.main @ 0x4016ad(x)\\n         edi = 0                  // binary2ascii.c:463 // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         edx = r13d\\n         goto loc_0x400f11\\n\\n    loc_0x00401694: // orphan\\n         // CODE XREF from dbg.main @ 0x4016ad(x)\\n         edi = 0                  // binary2ascii.c:463 // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         edx = r13d\\n         goto loc_0x400f11\\n         // CODE XREF from dbg.main @ 0x4010ba(x)\\n         edx = 5\\n         esi = str.Field_width_of__d_is_excessive_n // 0x403188 // \\\"Field width of %d is excessive\\\\n\\\"\\n         goto loc_0x401694\\n\\n    loc_0x004016a3: // orphan\\n         // CODE XREF from dbg.main @ 0x4010ba(x)\\n         edx = 5\\n         esi = str.Field_width_of__d_is_excessive_n // 0x403188 // \\\"Field width of %d is excessive\\\\n\\\"\\n         goto loc_0x401694\\n         // CODE XREF from dbg.main @ 0x40108e(x)\\n         edx = 5                  // binary2ascii.c:446\\n         esi = str.Precision_of__d_does_not_make_sense._n // 0x403108 // \\\"Precision of %d does not make sense.\\\\n\\\"\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         edx = dword [stream]\\n         goto loc_0x400f11\\n\\n    loc_0x004016af: // orphan\\n         // CODE XREF from dbg.main @ 0x40108e(x)\\n         edx = 5                  // binary2ascii.c:446\\n         esi = str.Precision_of__d_does_not_make_sense._n // 0x403108 // \\\"Precision of %d does not make sense.\\\\n\\\"\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         edx = dword [stream]\\n         goto loc_0x400f11\\n         // CODE XREF from dbg.main @ 0x40109a(x)\\n         edx = 5                  // binary2ascii.c:450\\n         esi = str.Byte_offset_of__d_does_not_make_sense._n // 0x403130 // \\\"Byte offset of %d does not make sense.\\\\n\\\"\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         rdx = qword [var_18h]\\n         goto loc_0x400f72\\n\\n    loc_0x004016c9: // orphan\\n         // CODE XREF from dbg.main @ 0x40109a(x)\\n         edx = 5                  // binary2ascii.c:450\\n         esi = str.Byte_offset_of__d_does_not_make_sense._n // 0x403130 // \\\"Byte offset of %d does not make sense.\\\\n\\\"\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         rdx = qword [var_18h]\\n         goto loc_0x400f72\\n         // CODE XREF from dbg.main @ 0x4015f4(x)\\n         esi = byte [r13]         // binary2ascii.c:621\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x4015a0\\n\\n    loc_0x004016e4: // orphan\\n         // CODE XREF from dbg.main @ 0x4015f4(x)\\n         esi = byte [r13]         // binary2ascii.c:621\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x4015a0\\n         // CODE XREF from dbg.main @ 0x40161c(x)\\n         esi = word [r13]         // binary2ascii.c:630\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x4015a0\\n\\n    loc_0x004016fa: // orphan\\n         // CODE XREF from dbg.main @ 0x40161c(x)\\n         esi = word [r13]         // binary2ascii.c:630\\n         rdi = format             // const char *format // (cstr 0x00000000) \\\"ll\\\"\\n         eax = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"\\\")\\n         goto loc_0x4015a0\\n         // CODE XREF from dbg.main @ 0x4010a5(x)\\n         edx = 5                  // binary2ascii.c:454\\n         esi = str.Items_per_line_of__d_does_not_make_sense._n // 0x403158 // \\\"Items per line of %d does not make sense.\\\\n\\\"\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         edx = dword [var_24h]\\n         goto loc_0x400f11\\n\\n    loc_0x00401710: // orphan\\n         // CODE XREF from dbg.main @ 0x4010a5(x)\\n         edx = 5                  // binary2ascii.c:454\\n         esi = str.Items_per_line_of__d_does_not_make_sense._n // 0x403158 // \\\"Items per line of %d does not make sense.\\\\n\\\"\\n         edi = 0                  // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.dcgettext  ()\\n         edx = dword [var_24h]\\n         goto loc_0x400f11\\n         // CODE XREF from dbg.main @ 0x40146b(x)\\n         rsi = qword [obj.stdout] // stdio.h:81 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         edi = 0xa\\n         sym.imp._IO_putc  ()\\n         goto loc_0x401471\\n\\n    loc_0x0040172a: // orphan\\n         // CODE XREF from dbg.main @ 0x40146b(x)\\n         rsi = qword [obj.stdout] // stdio.h:81 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         edi = 0xa\\n         sym.imp._IO_putc  ()\\n         goto loc_0x401471\\n         // CODE XREF from dbg.main @ 0x4014af(x)\\n         edi = 0                  // binary2ascii.c:684 // int status // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n\\n    loc_0x00401740: // orphan\\n         // CODE XREF from dbg.main @ 0x4014af(x)\\n         edi = 0                  // binary2ascii.c:684 // int status // \\\"l\\\" // \\\"l\\\"\\n         sym.imp.exit  ()\\n                                  // void exit(?)\\n         // CODE XREF from dbg.main @ 0x4011ce(x)\\n         word [format] = 0x7830   // binary2ascii.c:545 // '0x'\\n                                  // [0x7830:2]=0xffff\\n         byte [var_62h] = 0\\n         goto loc_0x4011d9\\n\\n    loc_0x00401747: // orphan\\n         // CODE XREF from dbg.main @ 0x4011ce(x)\\n         word [format] = 0x7830   // binary2ascii.c:545 // '0x'\\n                                  // [0x7830:2]=0xffff\\n         byte [var_62h] = 0\\n         goto loc_0x4011d9\\n         // CODE XREF from dbg.main @ 0x4011f9(x)\\n         word [rbx + rax] = 0x27  // binary2ascii.c:547 // '''\\n                                  // [0x27:2]=0xffff // 39\\n         goto loc_0x4011ff\\n\\n    loc_0x00401758: // orphan\\n         // CODE XREF from dbg.main @ 0x4011f9(x)\\n         word [rbx + rax] = 0x27  // binary2ascii.c:547 // '''\\n                                  // [0x27:2]=0xffff // 39\\n         goto loc_0x4011ff\\n         // CODE XREF from dbg.main @ 0x401202(x)\\n         eax = 0                  // binary2ascii.c:548\\n         rcx |= 0xffffffffffffffff\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         rax = rcx\\n         rax = !rax\\n         word [rbx + rax - 1] = 0x30 // '0'\\n                                  // [0x30:2]=0xffff // 48\\n         goto loc_0x401208\\n\\n    loc_0x00401763: // orphan\\n         // CODE XREF from dbg.main @ 0x401202(x)\\n         eax = 0                  // binary2ascii.c:548\\n         rcx |= 0xffffffffffffffff\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         rax = rcx\\n         rax = !rax\\n         word [rbx + rax - 1] = 0x30 // '0'\\n                                  // [0x30:2]=0xffff // 48\\n         goto loc_0x401208\\n         // CODE XREF from dbg.main @ 0x4012c3(x)\\n         rdi = qword [obj.stderr] // binary2ascii.c:597 // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rdx = rbx\\n         esi = str.format:__s_n   // 0x40336e // \\\"format: %s\\\\n\\\" // const char *format\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, \\\"format: %s\\\\n\\\", ?)\\n         goto loc_0x4012c9\\n\\n    loc_0x00401780: // orphan\\n         // CODE XREF from dbg.main @ 0x4012c3(x)\\n         rdi = qword [obj.stderr] // binary2ascii.c:597 // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rdx = rbx\\n         esi = str.format:__s_n   // 0x40336e // \\\"format: %s\\\\n\\\" // const char *format\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, \\\"format: %s\\\\n\\\", ?)\\n         goto loc_0x4012c9\\n         // CODE XREF from dbg.main @ 0x40156e(x)\\n         rsi = qword [obj.stdout] // binary2ascii.c:655 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         rdi = qword [r13]        // int64_t arg1\\n         qword [stream] = rsi\\n         dbg.binfmtq  ()\\n         rsi = qword [stream]     // FILE *stream\\n         rdi = rax                // const char *s\\n         sym.imp.fputs  ()        // \\\"ll\\\"\\n                                  // int fputs(-1, ?)\\n         goto loc_0x40152b\\n\\n    loc_0x0040179b: // orphan\\n         // CODE XREF from dbg.main @ 0x40156e(x)\\n         rsi = qword [obj.stdout] // binary2ascii.c:655 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         rdi = qword [r13]        // int64_t arg1\\n         qword [stream] = rsi\\n         dbg.binfmtq  ()\\n         rsi = qword [stream]     // FILE *stream\\n         rdi = rax                // const char *s\\n         sym.imp.fputs  ()        // \\\"ll\\\"\\n                                  // int fputs(-1, ?)\\n         goto loc_0x40152b\\n         // CODE XREF from dbg.main @ 0x401290(x)\\n         eax = 0                  // binary2ascii.c:586\\n         rcx |= 0xffffffffffffffff\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         var = dword [var_14h] - 0\\n         rax = rcx\\n         rax = !rax\\n         if  (var) goto loc_0x4019b4 // unlikely\\n\\n    loc_0x004017c2: // orphan\\n         // CODE XREF from dbg.main @ 0x401290(x)\\n         eax = 0                  // binary2ascii.c:586\\n         rcx |= 0xffffffffffffffff\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         var = dword [var_14h] - 0\\n         rax = rcx\\n         rax = !rax\\n         if  (var) goto loc_0x4019b4 // unlikely\\n         word [rbx + rax - 1] = 0x64 // binary2ascii.c:586 // 'd'\\n                                  // [0x64:2]=0xffff // 100\\n         goto loc_0x4012be\\n\\n    loc_0x004017de: // orphan\\n         word [rbx + rax - 1] = 0x64 // binary2ascii.c:586 // 'd'\\n                                  // [0x64:2]=0xffff // 100\\n         goto loc_0x4012be\\n         // CODE XREF from dbg.main @ 0x400fb9(x)\\n         edx = 5                  // binary2ascii.c:361\\n         esi = str._s:_output_type__s_does_not_specify_size_n // 0x402f60 // \\\"%s: output type %s does not specify size\\\\n\\\"\\n         edi = 0\\n         qword [stream] = r8\\n         sym.imp.dcgettext  ()\\n         r8 = qword [stream]\\n         rcx = r8\\n         goto loc_0x400e72\\n\\n    loc_0x004017ea: // orphan\\n         // CODE XREF from dbg.main @ 0x400fb9(x)\\n         edx = 5                  // binary2ascii.c:361\\n         esi = str._s:_output_type__s_does_not_specify_size_n // 0x402f60 // \\\"%s: output type %s does not specify size\\\\n\\\"\\n         edi = 0\\n         qword [stream] = r8\\n         sym.imp.dcgettext  ()\\n         r8 = qword [stream]\\n         rcx = r8\\n         goto loc_0x400e72\\n         // CODE XREF from dbg.main @ 0x401611(x)\\n         edi = word [r13]         // binary2ascii.c:628 // int64_t arg1\\n         rsi = qword [obj.stdout] // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         qword [stream] = rsi\\n         dbg.binfmts  ()\\n         rsi = qword [stream]     // FILE *stream\\n         rdi = rax                // const char *s\\n         sym.imp.fputs  ()\\n                                  // int fputs(-1, ?)\\n         goto loc_0x4015a0\\n\\n    loc_0x00401817: // orphan\\n         // CODE XREF from dbg.main @ 0x401611(x)\\n         edi = word [r13]         // binary2ascii.c:628 // int64_t arg1\\n         rsi = qword [obj.stdout] // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         qword [stream] = rsi\\n         dbg.binfmts  ()\\n         rsi = qword [stream]     // FILE *stream\\n         rdi = rax                // const char *s\\n         sym.imp.fputs  ()\\n                                  // int fputs(-1, ?)\\n         goto loc_0x4015a0\\n         // CODE XREF from dbg.main @ 0x4015e9(x)\\n         edi = byte [r13]         // binary2ascii.c:619 // int64_t arg1\\n         rsi = qword [obj.stdout] // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         qword [stream] = rsi\\n         dbg.binfmtc  ()\\n         rsi = qword [stream]     // FILE *stream\\n         rdi = rax                // const char *s\\n         sym.imp.fputs  ()\\n                                  // int fputs(-1, ?)\\n         goto loc_0x4015a0\\n\\n    loc_0x0040183f: // orphan\\n         // CODE XREF from dbg.main @ 0x4015e9(x)\\n         edi = byte [r13]         // binary2ascii.c:619 // int64_t arg1\\n         rsi = qword [obj.stdout] // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         qword [stream] = rsi\\n         dbg.binfmtc  ()\\n         rsi = qword [stream]     // FILE *stream\\n         rdi = rax                // const char *s\\n         sym.imp.fputs  ()\\n                                  // int fputs(-1, ?)\\n         goto loc_0x4015a0\\n         // CODE XREF from dbg.main @ 0x40129a(x)\\n         eax = 0                  // binary2ascii.c:590\\n         rcx |= 0xffffffffffffffff\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         rax = rcx\\n         rax = !rax\\n         word [rbx + rax - 1] = 0x58 // 'X'\\n                                  // [0x58:2]=0xffff // 88\\n         goto loc_0x4012be        // binary2ascii.c:591\\n\\n    loc_0x00401867: // orphan\\n         // CODE XREF from dbg.main @ 0x40129a(x)\\n         eax = 0                  // binary2ascii.c:590\\n         rcx |= 0xffffffffffffffff\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         rax = rcx\\n         rax = !rax\\n         word [rbx + rax - 1] = 0x58 // 'X'\\n                                  // [0x58:2]=0xffff // 88\\n         goto loc_0x4012be        // binary2ascii.c:591\\n         // CODE XREF from dbg.main @ 0x40158a(x)\\n         rsi = qword [obj.stdout] // binary2ascii.c:646 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         rdi = qword [r13]        // int64_t arg1\\n         qword [stream] = rsi\\n         dbg.binfmtl  ()\\n         rsi = qword [stream]     // FILE *stream\\n         rdi = rax                // const char *s\\n         sym.imp.fputs  ()\\n                                  // int fputs(-1, ?)\\n         goto loc_0x4015a0\\n\\n    loc_0x00401884: // orphan\\n         // CODE XREF from dbg.main @ 0x40158a(x)\\n         rsi = qword [obj.stdout] // binary2ascii.c:646 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         rdi = qword [r13]        // int64_t arg1\\n         qword [stream] = rsi\\n         dbg.binfmtl  ()\\n         rsi = qword [stream]     // FILE *stream\\n         rdi = rax                // const char *s\\n         sym.imp.fputs  ()\\n                                  // int fputs(-1, ?)\\n         goto loc_0x4015a0\\n         // CODE XREF from dbg.main @ 0x4015cd(x)\\n         rsi = qword [obj.stdout] // binary2ascii.c:637 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         edi = dword [r13]        // int64_t arg1\\n         qword [stream] = rsi\\n         dbg.binfmti  ()\\n         rsi = qword [stream]     // FILE *stream\\n         rdi = rax                // const char *s\\n         sym.imp.fputs  ()\\n                                  // int fputs(-1, ?)\\n         goto loc_0x4015a0\\n\\n    loc_0x004018ab: // orphan\\n         // CODE XREF from dbg.main @ 0x4015cd(x)\\n         rsi = qword [obj.stdout] // binary2ascii.c:637 // obj.stdout__GLIBC_2.2.5\\n                                  // [0x6045c0:8]=0\\n         edi = dword [r13]        // int64_t arg1\\n         qword [stream] = rsi\\n         dbg.binfmti  ()\\n         rsi = qword [stream]     // FILE *stream\\n         rdi = rax                // const char *s\\n         sym.imp.fputs  ()\\n                                  // int fputs(-1, ?)\\n         goto loc_0x4015a0\\n         // CODE XREF from dbg.main @ 0x401481(x)\\n         edi = 0                  // binary2ascii.c:677\\n         esi = str._s:_converted_1_token_n // 0x40337a // \\\"%s: converted 1 token\\\\n\\\"\\n         sym.imp.dcgettext  ()\\n         rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         edx = obj.pgname         // 0x60459a // \\\"binary2ascii\\\" //   ...\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         goto loc_0x4014ac\\n\\n    loc_0x004018d2: // orphan\\n         // CODE XREF from dbg.main @ 0x401481(x)\\n         edi = 0                  // binary2ascii.c:677\\n         esi = str._s:_converted_1_token_n // 0x40337a // \\\"%s: converted 1 token\\\\n\\\"\\n         sym.imp.dcgettext  ()\\n         rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n                                  // [0x6045e8:8]=0 // FILE *stream\\n         rsi = rax                // const char *format\\n         edx = obj.pgname         // 0x60459a // \\\"binary2ascii\\\" //   ...\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, -1, ?)\\n         goto loc_0x4014ac\\n         // CODE XREF from dbg.main @ 0x40125c(x)\\n         rdi = s                  // binary2ascii.c:552 // char *s // (pstr 0x00000000) \\\"'\\\"\\n         ecx = r9d                //  ...\\n         edx = 0x40336a           // 'j3@' // \\\".%d\\\" // const char *format\\n         esi = 0xc                // 12 // size_t size\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(\\\"\\\", -1, \\\".%d\\\", ?)\\n         rdi = rbx\\n         eax = r14d\\n         rcx = rbp                // (cstr 0x00000000) \\\"'\\\" rsp\\n         repne scasb al,yte [rdi]\\n         rsi = s                  // binary2ascii.c:553 // (pstr 0x00000000) \\\"'\\\"\\n         rcx = !rcx\\n         rdi = rbx + rcx - 1\\n         sym.imp.stpcpy  ()\\n         var = dword [var_20h] - 7 // binary2ascii.c:557\\n         if  (var) goto loc_0x40193b // likely\\n\\n    loc_0x004018f9: // orphan\\n         // CODE XREF from dbg.main @ 0x40125c(x)\\n         rdi = s                  // binary2ascii.c:552 // char *s // (pstr 0x00000000) \\\"'\\\"\\n         ecx = r9d                //  ...\\n         edx = 0x40336a           // 'j3@' // \\\".%d\\\" // const char *format\\n         esi = 0xc                // 12 // size_t size\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(\\\"\\\", -1, \\\".%d\\\", ?)\\n         rdi = rbx\\n         eax = r14d\\n         rcx = rbp                // (cstr 0x00000000) \\\"'\\\" rsp\\n         repne scasb al,yte [rdi]\\n         rsi = s                  // binary2ascii.c:553 // (pstr 0x00000000) \\\"'\\\"\\n         rcx = !rcx\\n         rdi = rbx + rcx - 1\\n         sym.imp.stpcpy  ()\\n         var = dword [var_20h] - 7 // binary2ascii.c:557\\n         if  (var) goto loc_0x40193b // likely\\n         word [rax] = 0x4c        // binary2ascii.c:557 // 'L'\\n                                  // [0x4c:2]=0xffff // 76\\n\\n    loc_0x00401936: // orphan\\n         word [rax] = 0x4c        // binary2ascii.c:557 // 'L'\\n                                  // [0x4c:2]=0xffff // 76\\n         // CODE XREF from dbg.main @ 0x401934(x)\\n         var = byte [var_30h] - 0 // binary2ascii.c:559\\n         if  (!var) goto loc_0x401997 // unlikely\\n\\n    loc_0x0040193b: // orphan\\n         // CODE XREF from dbg.main @ 0x401934(x)\\n         var = byte [var_30h] - 0 // binary2ascii.c:559\\n         if  (!var) goto loc_0x401997 // unlikely\\n         eax = 0                  // binary2ascii.c:559\\n         rcx |= 0xffffffffffffffff\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         rax = rcx\\n         rax = !rax\\n         word [rbx + rax - 1] = 0x65 // 'e'\\n                                  // [0x65:2]=0xffff // 101\\n         goto loc_0x4012be\\n\\n    loc_0x00401942: // orphan\\n         eax = 0                  // binary2ascii.c:559\\n         rcx |= 0xffffffffffffffff\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         rax = rcx\\n         rax = !rax\\n         word [rbx + rax - 1] = 0x65 // 'e'\\n                                  // [0x65:2]=0xffff // 101\\n         goto loc_0x4012be\\n         // CODE XREF from dbg.main @ 0x401278(x)\\n         word [rax] = 0x6c        // binary2ascii.c:572 // 'l'\\n                                  // [0x6c:2]=0xffff // 108\\n         goto loc_0x40128c        // binary2ascii.c:573\\n\\n    loc_0x0040195f: // orphan\\n         // CODE XREF from dbg.main @ 0x401278(x)\\n         word [rax] = 0x6c        // binary2ascii.c:572 // 'l'\\n                                  // [0x6c:2]=0xffff // 108\\n         goto loc_0x40128c        // binary2ascii.c:573\\n         // CODE XREF from dbg.main @ 0x400e3e(x)\\n         rbx = qword [obj.optarg] // binary2ascii.c:283 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0\\n         edx = 5\\n         esi = str._s:_base_of__s_falls_outside_of_the_representable_range_n // 0x402ef8 // \\\"%s: base of %s falls outside of the representable range\\\\n\\\"\\n         goto loc_0x400e68\\n\\n    loc_0x00401969: // orphan\\n         // CODE XREF from dbg.main @ 0x400e3e(x)\\n         rbx = qword [obj.optarg] // binary2ascii.c:283 // obj.optarg__GLIBC_2.2.5\\n                                  // [0x6045d0:8]=0\\n         edx = 5\\n         esi = str._s:_base_of__s_falls_outside_of_the_representable_range_n // 0x402ef8 // \\\"%s: base of %s falls outside of the representable range\\\\n\\\"\\n         goto loc_0x400e68\\n         // CODE XREF from dbg.main @ 0x40126f(x)\\n         word [rax] = 0x6868      // binary2ascii.c:566 // 'hh'\\n                                  // [0x6868:2]=0xffff\\n         byte [rax + 2] = 0\\n         goto loc_0x40128c        // binary2ascii.c:567\\n\\n    loc_0x0040197f: // orphan\\n         // CODE XREF from dbg.main @ 0x40126f(x)\\n         word [rax] = 0x6868      // binary2ascii.c:566 // 'hh'\\n                                  // [0x6868:2]=0xffff\\n         byte [rax + 2] = 0\\n         goto loc_0x40128c        // binary2ascii.c:567\\n         // CODE XREF from dbg.main @ 0x401269(x)\\n         word [rax] = 0x68        // binary2ascii.c:569 // 'h'\\n                                  // [0x68:2]=0xffff // 104\\n         goto loc_0x40128c        // binary2ascii.c:570\\n\\n    loc_0x0040198d: // orphan\\n         // CODE XREF from dbg.main @ 0x401269(x)\\n         word [rax] = 0x68        // binary2ascii.c:569 // 'h'\\n                                  // [0x68:2]=0xffff // 104\\n         goto loc_0x40128c        // binary2ascii.c:570\\n         // CODE XREF from dbg.main @ 0x401940(x)\\n         eax = byte [var_30h]     // binary2ascii.c:560\\n         rcx |= 0xffffffffffffffff\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         rcx = !rcx\\n         word [rbx + rcx - 1] = 0x66 // 'f'\\n                                  // [0x66:2]=0xffff // 102\\n         goto loc_0x4012be\\n\\n    loc_0x00401997: // orphan\\n         // CODE XREF from dbg.main @ 0x401940(x)\\n         eax = byte [var_30h]     // binary2ascii.c:560\\n         rcx |= 0xffffffffffffffff\\n         rdi = rbx\\n         repne scasb al,yte [rdi]\\n         rcx = !rcx\\n         word [rbx + rcx - 1] = 0x66 // 'f'\\n                                  // [0x66:2]=0xffff // 102\\n         goto loc_0x4012be\\n         // CODE XREF from dbg.main @ 0x4017d8(x)\\n         word [rbx + rax - 1] = 0x75 // binary2ascii.c:587 // 'u'\\n                                  // [0x75:2]=0xffff // 117\\n         goto loc_0x4012be\\n\\n    loc_0x004019b4: // orphan\\n         // CODE XREF from dbg.main @ 0x4017d8(x)\\n         word [rbx + rax - 1] = 0x75 // binary2ascii.c:587 // 'u'\\n                                  // [0x75:2]=0xffff // 117\\n         goto loc_0x4012be\\n         // CODE XREF from dbg.main @ 0x40113c(x)\\n         ebp += ebp               // binary2ascii.c:149\\n         goto loc_0x40137a\\n\\n    loc_0x004019c0: // orphan\\n         // CODE XREF from dbg.main @ 0x40113c(x)\\n         ebp += ebp               // binary2ascii.c:149\\n         goto loc_0x40137a\\n         // CODE XREF from dbg.main @ 0x401132(x)\\n         ebp = dword [stream] * 3 // binary2ascii.c:143\\n         var = dword [var_2ch] - 0 // binary2ascii.c:529\\n         if  (var) goto loc_0x4019e2 // unlikely\\n\\n    loc_0x004019c7: // orphan\\n         // CODE XREF from dbg.main @ 0x401132(x)\\n         ebp = dword [stream] * 3 // binary2ascii.c:143\\n         var = dword [var_2ch] - 0 // binary2ascii.c:529\\n         if  (var) goto loc_0x4019e2 // unlikely\\n         var = r8b & r8b          // binary2ascii.c:530\\n         if  (!var) goto loc_0x401156 // likely\\n\\n    loc_0x004019d3: // orphan\\n         var = r8b & r8b          // binary2ascii.c:530\\n         if  (!var) goto loc_0x401156 // likely\\n         r9d = 3\\n\\n    loc_0x004019dc: // orphan\\n         r9d = 3\\n         // CODE XREF from dbg.main @ 0x4019d1(x)\\n         r14d = 1                 // binary2ascii.c:534\\n         goto loc_0x401169\\n\\n    loc_0x004019e2: // orphan\\n         // CODE XREF from dbg.main @ 0x4019d1(x)\\n         r14d = 1                 // binary2ascii.c:534\\n         goto loc_0x401169\\n         // CODE XREF from dbg.main @ 0x401150(x)\\n         r9d = 3                  // binary2ascii.c:530\\n         goto loc_0x401169\\n\\n    loc_0x004019ed: // orphan\\n         // CODE XREF from dbg.main @ 0x401150(x)\\n         r9d = 3                  // binary2ascii.c:530\\n         goto loc_0x401169\\n\\n}\\n\"}\n"