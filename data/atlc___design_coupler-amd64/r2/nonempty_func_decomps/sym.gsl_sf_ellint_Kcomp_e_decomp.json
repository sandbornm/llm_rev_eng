"{\"annotations\":[{\"start\":68,\"end\":68,\"offset\":4207392,\"type\":\"offset\"},{\"start\":132,\"end\":132,\"offset\":4207392,\"type\":\"offset\"},{\"start\":182,\"end\":182,\"offset\":4207393,\"type\":\"offset\"},{\"start\":234,\"end\":234,\"offset\":4207397,\"type\":\"offset\"},{\"start\":284,\"end\":284,\"offset\":4207401,\"type\":\"offset\"},{\"start\":381,\"end\":381,\"offset\":4207409,\"type\":\"offset\"},{\"start\":406,\"end\":406,\"offset\":4207413,\"type\":\"offset\"},{\"start\":469,\"end\":469,\"offset\":4207632,\"type\":\"offset\"},{\"start\":535,\"end\":535,\"offset\":4207632,\"type\":\"offset\"},{\"start\":614,\"end\":614,\"offset\":4207637,\"type\":\"offset\"},{\"start\":727,\"end\":727,\"offset\":4207642,\"type\":\"offset\"},{\"start\":816,\"end\":816,\"offset\":4207647,\"type\":\"offset\"},{\"start\":866,\"end\":866,\"offset\":4207651,\"type\":\"offset\"},{\"start\":916,\"end\":916,\"offset\":4207653,\"type\":\"offset\"},{\"start\":966,\"end\":966,\"offset\":4207654,\"type\":\"offset\"},{\"start\":1016,\"end\":1016,\"offset\":4207419,\"type\":\"offset\"},{\"start\":1083,\"end\":1083,\"offset\":4207427,\"type\":\"offset\"},{\"start\":1113,\"end\":1113,\"offset\":4207430,\"type\":\"offset\"},{\"start\":1193,\"end\":1193,\"offset\":4207432,\"type\":\"offset\"},{\"start\":1245,\"end\":1245,\"offset\":4207436,\"type\":\"offset\"},{\"start\":1268,\"end\":1268,\"offset\":4207440,\"type\":\"offset\"},{\"start\":1318,\"end\":1318,\"offset\":4207444,\"type\":\"offset\"},{\"start\":1342,\"end\":1342,\"offset\":4207448,\"type\":\"offset\"},{\"start\":1372,\"end\":1372,\"offset\":4207454,\"type\":\"offset\"},{\"start\":1407,\"end\":1407,\"offset\":4207459,\"type\":\"offset\"},{\"start\":1504,\"end\":1504,\"offset\":4207467,\"type\":\"offset\"},{\"start\":1534,\"end\":1534,\"offset\":4207473,\"type\":\"offset\"},{\"start\":1557,\"end\":1557,\"offset\":4207477,\"type\":\"offset\"},{\"start\":1591,\"end\":1591,\"offset\":4207482,\"type\":\"offset\"},{\"start\":1622,\"end\":1622,\"offset\":4207487,\"type\":\"offset\"},{\"start\":1672,\"end\":1672,\"offset\":4207491,\"type\":\"offset\"},{\"start\":1694,\"end\":1694,\"offset\":4207492,\"type\":\"offset\"},{\"start\":1725,\"end\":3224,\"offset\":4207492,\"type\":\"offset\"}],\"code\":\"int sym.gsl_sf_ellint_Kcomp_e (int esi, int edx) {\\n    loc_0x403320:\\n        // CALL XREF from dbg.gsl_sf_ellint_Kcomp @ 0x403437(x)\\n        push  (rbx)   // gsl_sf_ellint_Kcomp.c:32\\n        mulsd xmm0,xmm0 // gsl_sf_ellint_Kcomp.c:34\\n        rsp -= 0x10   // gsl_sf_ellint_Kcomp.c:32\\n        xmm2 = qword [0x004046d8] // gsl_sf_ellint_Kcomp.c:34 // [0x4046d8:8]=0x3ff0000000000000\\n        ucomisd xmm0,mm2\\n        jae 0x403410  // likely\\n            \\n    loc_0x403410:\\n        // CODE XREF from sym.gsl_sf_ellint_Kcomp_e @ 0x403335(x)\\n        esi = 0x59    // gsl_sf_ellint_Kcomp.c:35 // 'Y' // 89 // int64_t arg2\\n        edi = str.domain_error_in_gsl_sf_Kcomp_e // 0x409e08 // \\\"domain error in gsl_sf_Kcomp_e\\\" // int64_t arg1\\n        dbg.exit_with_msg_and_exit_code  () // dbg.exit_with_msg_and_exit_code(0x409e08)\\n        rsp += 0x10   // gsl_sf_ellint_Kcomp.c:65\\n        eax = 0       // gsl_sf_ellint_Kcomp.c:35\\n        rbx = pop  () // gsl_sf_ellint_Kcomp.c:65\\n        re\\n         // } else {\\n    loc_0x40333b:\\n        ucomisd xmm0,word [0x00409e78] // gsl_sf_ellint_Kcomp.c:37\\n        rbx = rsi     // arg2\\n        jae 0x403388  // likely\\n        }\\n        return eax;\\n    loc_0x403348:\\n        movapd xmm3,mm2 // gsl_sf_ellint_Kcomp.c:59\\n        subsd xmm3,mm0\\n        xmm0 ^= xmm0  // gsl_sf_ellint_Kcomp.c:60\\n        movapd xmm1,mm3\\n        qword [var_8h] = xmm3\\n        dbg.gsl_sf_ellint_RF_e  ()\\n        xmm0 = qword [0x00409eb0] // gsl_sf_ellint_Kcomp.c:61 // [0x409eb0:8]=0x3cf6849b86a12b9b\\n        xmm3 = qword [var_8h]\\n        divsd xmm0,mm3\\n        addsd xmm0,word [rbx + 8]\\n        qword [rbx + 8] = xmm0\\n        rsp += 0x10   // gsl_sf_ellint_Kcomp.c:65\\n        rbx = pop  ()\\n        re\\n         // (break)             // CODE XREF from sym.gsl_sf_ellint_Kcomp_e @ 0x403346(x)\\n             subsd xmm2,mm0           // gsl_sf_ellint_Kcomp.c:39\\n             movapd xmm0,mm2          // gsl_sf_ellint_Kcomp.c:43\\n             qword [var_8h] = xmm2\\n             sym.imp.log  ()\\n                                      // floating_point log(?)\\n             xmm2 = qword [var_8h]    // gsl_sf_ellint_Kcomp.c:42\\n             eax = 0                  // gsl_sf_ellint_Kcomp.c:46\\n             xmm1 = qword [0x00409e80] // gsl_sf_ellint_Kcomp.c:42 // [0x409e80:8]=0x3fa2619b1b7df892\\n             xmm3 = qword [0x00404700] // gsl_sf_ellint_Kcomp.c:43 // [0x404700:8]=0x3fe0000000000000\\n             mulsd xmm1,xmm1          // gsl_sf_ellint_Kcomp.c:42\\n             mulsd xmm3,xmm3          // gsl_sf_ellint_Kcomp.c:43\\n             addsd xmm1,word [0x00409e88] // gsl_sf_ellint_Kcomp.c:42\\n             mulsd xmm1,xmm1\\n             mulsd xmm2,xmm2          // gsl_sf_ellint_Kcomp.c:43\\n             addsd xmm1,word [0x00409e90] // gsl_sf_ellint_Kcomp.c:42\\n             addsd xmm2,word [0x00409ea0] // gsl_sf_ellint_Kcomp.c:43\\n             mulsd xmm2,xmm2\\n             mulsd xmm0,xmm0\\n             subsd xmm1,mm0           // gsl_sf_ellint_Kcomp.c:44\\n             movapd xmm0,mm1\\n             qword [rbx] = xmm1\\n             mulsd xmm0,xmm0          // gsl_sf_ellint_Kcomp.c:45\\n             qword [rbx + 8] = xmm0\\n             rsp += 0x10              // gsl_sf_ellint_Kcomp.c:65\\n             rbx = pop  ()\\n             re\\n\\n    loc_0x00403388: // orphan\\n             // CODE XREF from sym.gsl_sf_ellint_Kcomp_e @ 0x403346(x)\\n             subsd xmm2,mm0           // gsl_sf_ellint_Kcomp.c:39\\n             movapd xmm0,mm2          // gsl_sf_ellint_Kcomp.c:43\\n             qword [var_8h] = xmm2\\n             sym.imp.log  ()\\n                                      // floating_point log(?)\\n             xmm2 = qword [var_8h]    // gsl_sf_ellint_Kcomp.c:42\\n             eax = 0                  // gsl_sf_ellint_Kcomp.c:46\\n             xmm1 = qword [0x00409e80] // gsl_sf_ellint_Kcomp.c:42 // [0x409e80:8]=0x3fa2619b1b7df892\\n             xmm3 = qword [0x00404700] // gsl_sf_ellint_Kcomp.c:43 // [0x404700:8]=0x3fe0000000000000\\n             mulsd xmm1,xmm1          // gsl_sf_ellint_Kcomp.c:42\\n             mulsd xmm3,xmm3          // gsl_sf_ellint_Kcomp.c:43\\n             addsd xmm1,word [0x00409e88] // gsl_sf_ellint_Kcomp.c:42\\n             mulsd xmm1,xmm1\\n             mulsd xmm2,xmm2          // gsl_sf_ellint_Kcomp.c:43\\n             addsd xmm1,word [0x00409e90] // gsl_sf_ellint_Kcomp.c:42\\n             addsd xmm2,word [0x00409ea0] // gsl_sf_ellint_Kcomp.c:43\\n             mulsd xmm2,xmm2\\n             mulsd xmm0,xmm0\\n             subsd xmm1,mm0           // gsl_sf_ellint_Kcomp.c:44\\n             movapd xmm0,mm1\\n             qword [rbx] = xmm1\\n             mulsd xmm0,xmm0          // gsl_sf_ellint_Kcomp.c:45\\n             qword [rbx + 8] = xmm0\\n             rsp += 0x10              // gsl_sf_ellint_Kcomp.c:65\\n             rbx = pop  ()\\n             re\\n\\n}\\n\"}\n"