"{\"annotations\":[{\"start\":84,\"end\":84,\"offset\":4205472,\"type\":\"offset\"},{\"start\":133,\"end\":133,\"offset\":4205472,\"type\":\"offset\"},{\"start\":251,\"end\":251,\"offset\":4205476,\"type\":\"offset\"},{\"start\":393,\"end\":393,\"offset\":4205481,\"type\":\"offset\"},{\"start\":418,\"end\":418,\"offset\":4205481,\"type\":\"offset\"},{\"start\":492,\"end\":492,\"offset\":4205486,\"type\":\"offset\"},{\"start\":573,\"end\":573,\"offset\":4205491,\"type\":\"offset\"},{\"start\":778,\"end\":778,\"offset\":4205496,\"type\":\"offset\"},{\"start\":794,\"end\":794,\"offset\":4205498,\"type\":\"offset\"},{\"start\":821,\"end\":821,\"offset\":4205498,\"type\":\"offset\"},{\"start\":920,\"end\":920,\"offset\":4205503,\"type\":\"offset\"},{\"start\":1174,\"end\":1174,\"offset\":4205508,\"type\":\"offset\"},{\"start\":1199,\"end\":1199,\"offset\":4205508,\"type\":\"offset\"},{\"start\":1300,\"end\":1300,\"offset\":4205513,\"type\":\"offset\"},{\"start\":1520,\"end\":1520,\"offset\":4205518,\"type\":\"offset\"},{\"start\":1545,\"end\":1545,\"offset\":4205518,\"type\":\"offset\"},{\"start\":1629,\"end\":1629,\"offset\":4205523,\"type\":\"offset\"},{\"start\":1879,\"end\":1879,\"offset\":4205528,\"type\":\"offset\"},{\"start\":1904,\"end\":1904,\"offset\":4205528,\"type\":\"offset\"},{\"start\":2003,\"end\":2003,\"offset\":4205533,\"type\":\"offset\"},{\"start\":2249,\"end\":2249,\"offset\":4205538,\"type\":\"offset\"},{\"start\":2274,\"end\":2274,\"offset\":4205538,\"type\":\"offset\"},{\"start\":2371,\"end\":2371,\"offset\":4205543,\"type\":\"offset\"},{\"start\":2452,\"end\":2452,\"offset\":4205548,\"type\":\"offset\"},{\"start\":2575,\"end\":2575,\"offset\":4205553,\"type\":\"offset\"},{\"start\":2591,\"end\":2591,\"offset\":4205555,\"type\":\"offset\"},{\"start\":2618,\"end\":2618,\"offset\":4205555,\"type\":\"offset\"},{\"start\":2676,\"end\":2676,\"offset\":4205560,\"type\":\"offset\"},{\"start\":2938,\"end\":2938,\"offset\":4205565,\"type\":\"offset\"},{\"start\":2963,\"end\":2963,\"offset\":4205565,\"type\":\"offset\"},{\"start\":3068,\"end\":3068,\"offset\":4205570,\"type\":\"offset\"},{\"start\":3326,\"end\":3326,\"offset\":4205575,\"type\":\"offset\"},{\"start\":3351,\"end\":3351,\"offset\":4205575,\"type\":\"offset\"},{\"start\":3454,\"end\":3454,\"offset\":4205580,\"type\":\"offset\"},{\"start\":3720,\"end\":3720,\"offset\":4205585,\"type\":\"offset\"},{\"start\":3745,\"end\":3745,\"offset\":4205585,\"type\":\"offset\"},{\"start\":3852,\"end\":3852,\"offset\":4205590,\"type\":\"offset\"},{\"start\":4089,\"end\":4089,\"offset\":4205595,\"type\":\"offset\"},{\"start\":4114,\"end\":4114,\"offset\":4205595,\"type\":\"offset\"},{\"start\":4207,\"end\":4207,\"offset\":4205600,\"type\":\"offset\"},{\"start\":4449,\"end\":4449,\"offset\":4205605,\"type\":\"offset\"},{\"start\":4474,\"end\":4474,\"offset\":4205605,\"type\":\"offset\"},{\"start\":4569,\"end\":4569,\"offset\":4205610,\"type\":\"offset\"},{\"start\":4738,\"end\":4738,\"offset\":4205615,\"type\":\"offset\"},{\"start\":4763,\"end\":4763,\"offset\":4205615,\"type\":\"offset\"},{\"start\":4822,\"end\":4822,\"offset\":4205620,\"type\":\"offset\"},{\"start\":4903,\"end\":4903,\"offset\":4205625,\"type\":\"offset\"},{\"start\":5042,\"end\":5042,\"offset\":4205630,\"type\":\"offset\"},{\"start\":5058,\"end\":5058,\"offset\":4205632,\"type\":\"offset\"},{\"start\":5085,\"end\":5085,\"offset\":4205632,\"type\":\"offset\"},{\"start\":5151,\"end\":5151,\"offset\":4205637,\"type\":\"offset\"},{\"start\":5405,\"end\":5405,\"offset\":4205642,\"type\":\"offset\"},{\"start\":5430,\"end\":5430,\"offset\":4205642,\"type\":\"offset\"},{\"start\":5531,\"end\":5531,\"offset\":4205647,\"type\":\"offset\"},{\"start\":5767,\"end\":5767,\"offset\":4205652,\"type\":\"offset\"},{\"start\":5792,\"end\":5792,\"offset\":4205652,\"type\":\"offset\"},{\"start\":5884,\"end\":5884,\"offset\":4205657,\"type\":\"offset\"},{\"start\":6134,\"end\":6134,\"offset\":4205662,\"type\":\"offset\"},{\"start\":6159,\"end\":6159,\"offset\":4205662,\"type\":\"offset\"},{\"start\":6258,\"end\":6258,\"offset\":4205667,\"type\":\"offset\"},{\"start\":6488,\"end\":6488,\"offset\":4205672,\"type\":\"offset\"},{\"start\":6513,\"end\":6513,\"offset\":4205672,\"type\":\"offset\"},{\"start\":6602,\"end\":6602,\"offset\":4205677,\"type\":\"offset\"},{\"start\":6858,\"end\":6858,\"offset\":4205682,\"type\":\"offset\"},{\"start\":6883,\"end\":6883,\"offset\":4205682,\"type\":\"offset\"},{\"start\":6985,\"end\":6985,\"offset\":4205687,\"type\":\"offset\"},{\"start\":7227,\"end\":7227,\"offset\":4205692,\"type\":\"offset\"},{\"start\":7252,\"end\":7252,\"offset\":4205692,\"type\":\"offset\"},{\"start\":7347,\"end\":7347,\"offset\":4205697,\"type\":\"offset\"},{\"start\":7605,\"end\":7605,\"offset\":4205702,\"type\":\"offset\"},{\"start\":7630,\"end\":7630,\"offset\":4205702,\"type\":\"offset\"},{\"start\":7733,\"end\":7733,\"offset\":4205707,\"type\":\"offset\"},{\"start\":7991,\"end\":7991,\"offset\":4205712,\"type\":\"offset\"},{\"start\":8016,\"end\":8016,\"offset\":4205712,\"type\":\"offset\"},{\"start\":8119,\"end\":8119,\"offset\":4205717,\"type\":\"offset\"},{\"start\":8279,\"end\":8279,\"offset\":4205722,\"type\":\"offset\"},{\"start\":8304,\"end\":8304,\"offset\":4205722,\"type\":\"offset\"},{\"start\":8358,\"end\":8358,\"offset\":4205727,\"type\":\"offset\"},{\"start\":8439,\"end\":8439,\"offset\":4205732,\"type\":\"offset\"},{\"start\":8592,\"end\":8592,\"offset\":4205737,\"type\":\"offset\"},{\"start\":8608,\"end\":8608,\"offset\":4205739,\"type\":\"offset\"},{\"start\":8635,\"end\":8635,\"offset\":4205739,\"type\":\"offset\"},{\"start\":8708,\"end\":8708,\"offset\":4205744,\"type\":\"offset\"},{\"start\":8954,\"end\":8954,\"offset\":4205749,\"type\":\"offset\"},{\"start\":8979,\"end\":8979,\"offset\":4205749,\"type\":\"offset\"},{\"start\":9076,\"end\":9076,\"offset\":4205754,\"type\":\"offset\"},{\"start\":9336,\"end\":9336,\"offset\":4205759,\"type\":\"offset\"},{\"start\":9361,\"end\":9361,\"offset\":4205759,\"type\":\"offset\"},{\"start\":9465,\"end\":9465,\"offset\":4205764,\"type\":\"offset\"},{\"start\":9717,\"end\":9717,\"offset\":4205769,\"type\":\"offset\"},{\"start\":9742,\"end\":9742,\"offset\":4205769,\"type\":\"offset\"},{\"start\":9842,\"end\":9842,\"offset\":4205774,\"type\":\"offset\"},{\"start\":10092,\"end\":10092,\"offset\":4205779,\"type\":\"offset\"},{\"start\":10117,\"end\":10117,\"offset\":4205779,\"type\":\"offset\"},{\"start\":10216,\"end\":10216,\"offset\":4205784,\"type\":\"offset\"},{\"start\":10456,\"end\":10456,\"offset\":4205789,\"type\":\"offset\"},{\"start\":10481,\"end\":10481,\"offset\":4205789,\"type\":\"offset\"},{\"start\":10575,\"end\":10575,\"offset\":4205794,\"type\":\"offset\"},{\"start\":10803,\"end\":10803,\"offset\":4205799,\"type\":\"offset\"},{\"start\":10828,\"end\":10828,\"offset\":4205799,\"type\":\"offset\"},{\"start\":10916,\"end\":10916,\"offset\":4205804,\"type\":\"offset\"},{\"start\":11097,\"end\":11097,\"offset\":4205809,\"type\":\"offset\"},{\"start\":11122,\"end\":11122,\"offset\":4205809,\"type\":\"offset\"},{\"start\":11226,\"end\":11226,\"offset\":4205814,\"type\":\"offset\"},{\"start\":11483,\"end\":11483,\"offset\":4205819,\"type\":\"offset\"},{\"start\":11508,\"end\":11508,\"offset\":4205819,\"type\":\"offset\"},{\"start\":11612,\"end\":11612,\"offset\":4205824,\"type\":\"offset\"},{\"start\":11869,\"end\":11869,\"offset\":4205829,\"type\":\"offset\"},{\"start\":11894,\"end\":11894,\"offset\":4205829,\"type\":\"offset\"},{\"start\":11998,\"end\":11998,\"offset\":4205834,\"type\":\"offset\"},{\"start\":12256,\"end\":12256,\"offset\":4205839,\"type\":\"offset\"},{\"start\":12281,\"end\":12281,\"offset\":4205839,\"type\":\"offset\"},{\"start\":12385,\"end\":12385,\"offset\":4205844,\"type\":\"offset\"},{\"start\":12642,\"end\":12642,\"offset\":4205849,\"type\":\"offset\"},{\"start\":12667,\"end\":12667,\"offset\":4205849,\"type\":\"offset\"},{\"start\":12771,\"end\":12771,\"offset\":4205854,\"type\":\"offset\"},{\"start\":13027,\"end\":13027,\"offset\":4205859,\"type\":\"offset\"},{\"start\":13052,\"end\":13052,\"offset\":4205859,\"type\":\"offset\"},{\"start\":13156,\"end\":13156,\"offset\":4205864,\"type\":\"offset\"},{\"start\":13414,\"end\":13414,\"offset\":4205869,\"type\":\"offset\"},{\"start\":13439,\"end\":13439,\"offset\":4205869,\"type\":\"offset\"},{\"start\":13542,\"end\":13542,\"offset\":4205874,\"type\":\"offset\"},{\"start\":13800,\"end\":13800,\"offset\":4205879,\"type\":\"offset\"},{\"start\":13825,\"end\":13825,\"offset\":4205879,\"type\":\"offset\"},{\"start\":13928,\"end\":13928,\"offset\":4205884,\"type\":\"offset\"},{\"start\":14129,\"end\":14129,\"offset\":4205889,\"type\":\"offset\"},{\"start\":14154,\"end\":14154,\"offset\":4205889,\"type\":\"offset\"},{\"start\":14231,\"end\":14231,\"offset\":4205894,\"type\":\"offset\"},{\"start\":14481,\"end\":14481,\"offset\":4205899,\"type\":\"offset\"},{\"start\":14506,\"end\":14506,\"offset\":4205899,\"type\":\"offset\"},{\"start\":14605,\"end\":14605,\"offset\":4205904,\"type\":\"offset\"},{\"start\":14686,\"end\":14686,\"offset\":4205909,\"type\":\"offset\"},{\"start\":14907,\"end\":14907,\"offset\":4205914,\"type\":\"offset\"},{\"start\":14923,\"end\":14923,\"offset\":4205916,\"type\":\"offset\"},{\"start\":14950,\"end\":14950,\"offset\":4205916,\"type\":\"offset\"},{\"start\":15057,\"end\":15057,\"offset\":4205921,\"type\":\"offset\"},{\"start\":15309,\"end\":15309,\"offset\":4205926,\"type\":\"offset\"},{\"start\":15334,\"end\":15334,\"offset\":4205926,\"type\":\"offset\"},{\"start\":15434,\"end\":15434,\"offset\":4205931,\"type\":\"offset\"},{\"start\":15688,\"end\":15688,\"offset\":4205936,\"type\":\"offset\"},{\"start\":15713,\"end\":15713,\"offset\":4205936,\"type\":\"offset\"},{\"start\":15816,\"end\":15816,\"offset\":4205941,\"type\":\"offset\"},{\"start\":15897,\"end\":15897,\"offset\":4205946,\"type\":\"offset\"},{\"start\":16106,\"end\":16106,\"offset\":4205951,\"type\":\"offset\"},{\"start\":16122,\"end\":16122,\"offset\":4205953,\"type\":\"offset\"},{\"start\":16149,\"end\":16149,\"offset\":4205953,\"type\":\"offset\"},{\"start\":16252,\"end\":16252,\"offset\":4205958,\"type\":\"offset\"},{\"start\":16498,\"end\":16498,\"offset\":4205963,\"type\":\"offset\"},{\"start\":16523,\"end\":16523,\"offset\":4205963,\"type\":\"offset\"},{\"start\":16622,\"end\":16622,\"offset\":4205968,\"type\":\"offset\"},{\"start\":16862,\"end\":16862,\"offset\":4205973,\"type\":\"offset\"},{\"start\":16887,\"end\":16887,\"offset\":4205973,\"type\":\"offset\"},{\"start\":16981,\"end\":16981,\"offset\":4205978,\"type\":\"offset\"},{\"start\":17217,\"end\":17217,\"offset\":4205983,\"type\":\"offset\"},{\"start\":17242,\"end\":17242,\"offset\":4205983,\"type\":\"offset\"},{\"start\":17334,\"end\":17334,\"offset\":4205988,\"type\":\"offset\"},{\"start\":17464,\"end\":17464,\"offset\":4205993,\"type\":\"offset\"},{\"start\":17489,\"end\":17489,\"offset\":4205993,\"type\":\"offset\"},{\"start\":17528,\"end\":17528,\"offset\":4205998,\"type\":\"offset\"},{\"start\":17776,\"end\":17776,\"offset\":4206003,\"type\":\"offset\"},{\"start\":17801,\"end\":17801,\"offset\":4206003,\"type\":\"offset\"},{\"start\":17899,\"end\":17899,\"offset\":4206008,\"type\":\"offset\"},{\"start\":18123,\"end\":18123,\"offset\":4206013,\"type\":\"offset\"},{\"start\":18148,\"end\":18148,\"offset\":4206013,\"type\":\"offset\"},{\"start\":18235,\"end\":18235,\"offset\":4206018,\"type\":\"offset\"},{\"start\":18427,\"end\":18427,\"offset\":4206023,\"type\":\"offset\"},{\"start\":18452,\"end\":18452,\"offset\":4206023,\"type\":\"offset\"},{\"start\":18525,\"end\":18525,\"offset\":4206028,\"type\":\"offset\"},{\"start\":18771,\"end\":18771,\"offset\":4206033,\"type\":\"offset\"},{\"start\":18796,\"end\":18796,\"offset\":4206033,\"type\":\"offset\"},{\"start\":18893,\"end\":18893,\"offset\":4206038,\"type\":\"offset\"},{\"start\":19149,\"end\":19149,\"offset\":4206043,\"type\":\"offset\"},{\"start\":19174,\"end\":19174,\"offset\":4206043,\"type\":\"offset\"},{\"start\":19276,\"end\":19276,\"offset\":4206048,\"type\":\"offset\"},{\"start\":19532,\"end\":19532,\"offset\":4206053,\"type\":\"offset\"},{\"start\":19557,\"end\":19557,\"offset\":4206053,\"type\":\"offset\"},{\"start\":19659,\"end\":19659,\"offset\":4206058,\"type\":\"offset\"},{\"start\":19775,\"end\":19775,\"offset\":4206063,\"type\":\"offset\"},{\"start\":19800,\"end\":19800,\"offset\":4206063,\"type\":\"offset\"},{\"start\":19832,\"end\":19832,\"offset\":4206068,\"type\":\"offset\"},{\"start\":19970,\"end\":19970,\"offset\":4206073,\"type\":\"offset\"},{\"start\":19995,\"end\":19995,\"offset\":4206073,\"type\":\"offset\"},{\"start\":20038,\"end\":20038,\"offset\":4206078,\"type\":\"offset\"},{\"start\":20279,\"end\":20279,\"offset\":4206083,\"type\":\"offset\"},{\"start\":20304,\"end\":20304,\"offset\":4206083,\"type\":\"offset\"},{\"start\":20399,\"end\":20399,\"offset\":4206088,\"type\":\"offset\"},{\"start\":20647,\"end\":20647,\"offset\":4206093,\"type\":\"offset\"},{\"start\":20672,\"end\":20672,\"offset\":4206093,\"type\":\"offset\"},{\"start\":20771,\"end\":20771,\"offset\":4206098,\"type\":\"offset\"},{\"start\":21018,\"end\":21018,\"offset\":4206103,\"type\":\"offset\"},{\"start\":21043,\"end\":21043,\"offset\":4206103,\"type\":\"offset\"},{\"start\":21142,\"end\":21142,\"offset\":4206108,\"type\":\"offset\"},{\"start\":21380,\"end\":21380,\"offset\":4206113,\"type\":\"offset\"},{\"start\":21405,\"end\":21405,\"offset\":4206113,\"type\":\"offset\"},{\"start\":21498,\"end\":21498,\"offset\":4206118,\"type\":\"offset\"},{\"start\":21742,\"end\":21742,\"offset\":4206123,\"type\":\"offset\"},{\"start\":21767,\"end\":21767,\"offset\":4206123,\"type\":\"offset\"},{\"start\":21863,\"end\":21863,\"offset\":4206128,\"type\":\"offset\"},{\"start\":22109,\"end\":22109,\"offset\":4206133,\"type\":\"offset\"},{\"start\":22134,\"end\":22134,\"offset\":4206133,\"type\":\"offset\"},{\"start\":22231,\"end\":22231,\"offset\":4206138,\"type\":\"offset\"},{\"start\":22477,\"end\":22477,\"offset\":4206143,\"type\":\"offset\"},{\"start\":22502,\"end\":22502,\"offset\":4206143,\"type\":\"offset\"},{\"start\":22599,\"end\":22599,\"offset\":4206148,\"type\":\"offset\"},{\"start\":22667,\"end\":22667,\"offset\":4206150,\"type\":\"offset\"},{\"start\":22702,\"end\":22702,\"offset\":4206155,\"type\":\"offset\"},{\"start\":22770,\"end\":22770,\"offset\":4206159,\"type\":\"offset\"},{\"start\":23008,\"end\":23008,\"offset\":4206176,\"type\":\"offset\"},{\"start\":23076,\"end\":23076,\"offset\":4206176,\"type\":\"offset\"},{\"start\":23144,\"end\":23144,\"offset\":4206176,\"type\":\"offset\"},{\"start\":23195,\"end\":23195,\"offset\":4206176,\"type\":\"offset\"},{\"start\":23336,\"end\":23336,\"offset\":4206179,\"type\":\"offset\"},{\"start\":23356,\"end\":23356,\"offset\":4206180,\"type\":\"offset\"},{\"start\":23386,\"end\":23386,\"offset\":4206182,\"type\":\"offset\"},{\"start\":23542,\"end\":23542,\"offset\":4206184,\"type\":\"offset\"},{\"start\":23615,\"end\":23615,\"offset\":4206187,\"type\":\"offset\"},{\"start\":23708,\"end\":23708,\"offset\":4206196,\"type\":\"offset\"},{\"start\":23780,\"end\":23780,\"offset\":4206196,\"type\":\"offset\"},{\"start\":23847,\"end\":23847,\"offset\":4206199,\"type\":\"offset\"},{\"start\":23907,\"end\":23907,\"offset\":4206199,\"type\":\"offset\"},{\"start\":23949,\"end\":23949,\"offset\":4206206,\"type\":\"offset\"},{\"start\":24013,\"end\":24013,\"offset\":4206211,\"type\":\"offset\"},{\"start\":24029,\"end\":24029,\"offset\":4206213,\"type\":\"offset\"},{\"start\":24057,\"end\":24057,\"offset\":4206213,\"type\":\"offset\"},{\"start\":24094,\"end\":24094,\"offset\":4206218,\"type\":\"offset\"}],\"code\":\"int dbg.give_examples_of_using_design_coupler (int esi, int edx) {\\n    loc_0x402ba0:\\n        // CALL XREF from dbg.main @ 0x400a68(x)\\n        rsp -= 8      // give_examples_of_using_design_coupler.c:15 // void give_examples_of_using_design_coupler()//\\n        edi = 0x408ee8 // give_examples_of_using_design_coupler.c:16 // \\\"Here are a examples of how to use 'design_coupler'\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Here are a examples of how to use 'design_coupler'\\\")\\n        esi = 0x25    // give_examples_of_using_design_coupler.c:17 // '%' // 37\\n        edi = str.In_the_examples__the__c_sign_is_used_in_front_of_anything_you_must_type_n // 0x408f20 // \\\"In the examples, the %c sign is used in front of anything you must type\\\\n\\\" // const char *format\\n        eax = 0\\n        sym.imp.printf  ()\\n        // int printf(\\\"In the examples, the %c sign is used in front of anything you must type\\\\n\\\")\\n        edi = str.which_is_what_you_will_probably_see_when_using_the_csh_or_tcsh_as_a_shell._It // give_examples_of_using_design_coupler.c:18 // 0x408f70 // \\\"which is what you will probably see when using the csh or tcsh as a shell. It\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"which is what you will probably see when using the csh or tcsh as a shell. It\\\")\\n        edi = str.would_probably_be_a___sign_if_using_the_sh_or_bash_shell.__n // give_examples_of_using_design_coupler.c:19 // 0x408fc0 // \\\"would probably be a $ sign if using the sh or bash shell. \\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"would probably be a $ sign if using the sh or bash shell. \\\\n\\\")\\n        edi = str.To_find_the_odd_and_even_mode_impedances_and_frequency_response_of_a_50_Ohm // give_examples_of_using_design_coupler.c:20 // 0x409000 // \\\"To find the odd and even mode impedances and frequency response of a 50 Ohm\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"To find the odd and even mode impedances and frequency response of a 50 Ohm\\\")\\n        edi = str.coupler__covering_130_to_170_MHz__with_a_coupling_coefficient_of_30_dB:_n // give_examples_of_using_design_coupler.c:21 // 0x409050 // \\\"coupler, covering 130 to 170 MHz, with a coupling coefficient of 30 dB:\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"coupler, covering 130 to 170 MHz, with a coupling coefficient of 30 dB:\\\\n\\\")\\n        esi = 0x25    // give_examples_of_using_design_coupler.c:22 // '%' // 37\\n        edi = str._c_design_coupler_30_130_170_n_n // 0x4090a0 // \\\"%c design_coupler 30 130 170\\\\n\\\\n\\\" // const char *format\\n        eax = 0\\n        sym.imp.printf  ()\\n        // int printf(\\\"%c design_coupler 30 130 170\\\\n\\\\n\\\")\\n        edi = str.Note_the_frequency_response_is_symmetrical_about_the_centre_frequency_at_0.192_dB // give_examples_of_using_design_coupler.c:23 // 0x4090c0 // \\\"Note the frequency response is symmetrical about the centre frequency at 0.192 dB\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Note the frequency response is symmetrical about the centre frequency at 0.192 dB\\\")\\n        edi = str.below_that_wanted._You_may_wish_to_redesign_this_for_a_coupling_coefficient_of_ // give_examples_of_using_design_coupler.c:24 // 0x409118 // \\\"below that wanted. You may wish to redesign this for a coupling coefficient of \\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"below that wanted. You may wish to redesign this for a coupling coefficient of \\\")\\n        edi = str.about_29.9_dB__so_the_maximum_deviation_from_the_ideal_30.0_dB_never_exceeds_0.1_dB // give_examples_of_using_design_coupler.c:25 // 0x409168 // \\\"about 29.9 dB, so the maximum deviation from the ideal 30.0 dB never exceeds 0.1 dB\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"about 29.9 dB, so the maximum deviation from the ideal 30.0 dB never exceeds 0.1 dB\\\")\\n        edi = str.Note_the_length_suggested_is_0.5_m__nearly_20___is_a_quarter_wave_at // give_examples_of_using_design_coupler.c:26 // 0x4091c0 // \\\"Note the length suggested is 0.5 m (nearly 20\\\\\\\") is a quarter wave at\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Note the length suggested is 0.5 m (nearly 20\\\\\\\") is a quarter wave at\\\")\\n        edi = str.the_centre_frequency_of_150_MHz._You_might_find_this_a_bit_too_long__so // give_examples_of_using_design_coupler.c:27 // 0x409208 // \\\"the centre frequency of 150 MHz. You might find this a bit too long, so\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"the centre frequency of 150 MHz. You might find this a bit too long, so\\\")\\n        edi = str.lets_specify_a_length_of_0.25_m._n // give_examples_of_using_design_coupler.c:28 // 0x409250 // \\\"let's specify a length of 0.25 m.\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"let's specify a length of 0.25 m.\\\\n\\\")\\n        esi = 0x25    // give_examples_of_using_design_coupler.c:29 // '%' // 37\\n        edi = str._c_design_coupler__L_0.25_30_130_170_n_n // 0x409278 // \\\"%c design_coupler -L 0.25 30 130 170\\\\n\\\\n\\\" // const char *format\\n        eax = 0\\n        sym.imp.printf  ()\\n        // int printf(\\\"%c design_coupler -L 0.25 30 130 170\\\\n\\\\n\\\")\\n        edi = str.What_you_may_notice_is_that_while_the_coupling_to_the_coupled_port_is_exactly // give_examples_of_using_design_coupler.c:30 // 0x4092a0 // \\\"What you may notice is that while the coupling to the coupled port is exactly\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"What you may notice is that while the coupling to the coupled port is exactly\\\")\\n        edi = str.30_dB_below_the_input_power_at_the_centre_frequency__150_MHz__it_is_ // give_examples_of_using_design_coupler.c:31 // 0x4092f0 // \\\"30 dB below the input power at the centre frequency (150 MHz) it is \\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"30 dB below the input power at the centre frequency (150 MHz) it is \\\")\\n        edi = str.no_longer_symmetrical_about_the_centre_frequency._Also__deviations_from_the // give_examples_of_using_design_coupler.c:32 // 0x409338 // \\\"no longer symmetrical about the centre frequency. Also, deviations from the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"no longer symmetrical about the centre frequency. Also, deviations from the\\\")\\n        edi = str.ideal_30_dB_are_now_much_larger__with_a_maximum_error_of_1.012_dB // give_examples_of_using_design_coupler.c:33 // 0x409388 // \\\"ideal 30 dB are now much larger, with a maximum error of 1.012 dB\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"ideal 30 dB are now much larger, with a maximum error of 1.012 dB\\\")\\n        edi = str.Unlike_the_case_when_the_length_is_the_default_quarter_wave__there_is_not_much // give_examples_of_using_design_coupler.c:34 // 0x4093d0 // \\\"Unlike the case when the length is the default quarter wave, there is not much\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Unlike the case when the length is the default quarter wave, there is not much\\\")\\n        edi = str.you_can_do_about_this__since_the_deviations_occur_in_both_directions._n // give_examples_of_using_design_coupler.c:35 // 0x409420 // \\\"you can do about this, since the deviations occur in both directions.\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"you can do about this, since the deviations occur in both directions.\\\\n\\\")\\n        edi = str.Now_assume_you_are_reasonably_happy_with_the_response_when_the_length_is_250_mm // give_examples_of_using_design_coupler.c:36 // 0x409468 // \\\"Now assume you are reasonably happy with the response when the length is 250 mm\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Now assume you are reasonably happy with the response when the length is 250 mm\\\")\\n        edi = str.but_would_like_to_see_the_response_at_every_2.5_MHz._This_can_be_done_using_the // give_examples_of_using_design_coupler.c:37 // 0x4094b8 // \\\"but would like to see the response at every 2.5 MHz. This can be done using the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"but would like to see the response at every 2.5 MHz. This can be done using the\\\")\\n        edi = str._s_option_to_design_coupler._n // give_examples_of_using_design_coupler.c:38 // 0x409d92 // \\\"-s option to design_coupler.\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"-s option to design_coupler.\\\\n\\\")\\n        esi = 0x25    // give_examples_of_using_design_coupler.c:39 // '%' // 37\\n        edi = str._c_design_coupler__L_0.25__s_2.5_30_130_170_n_n // 0x409508 // \\\"%c design_coupler -L 0.25 -s 2.5 30 130 170\\\\n\\\\n\\\" // const char *format\\n        eax = 0\\n        sym.imp.printf  ()\\n        // int printf(\\\"%c design_coupler -L 0.25 -s 2.5 30 130 170\\\\n\\\\n\\\")\\n        edi = str.Assuming_the_performance_is_acceptable__the_dimensions_of_the_coupler_can // give_examples_of_using_design_coupler.c:40 // 0x409538 // \\\"Assuming the performance is acceptable, the dimensions of the coupler can\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Assuming the performance is acceptable, the dimensions of the coupler can\\\")\\n        edi = str.be_determined_by_adding_the__d_option._This_will_design_a_coupler_that_must_look // give_examples_of_using_design_coupler.c:41 // 0x409588 // \\\"be determined by adding the -d option. This will design a coupler that must look\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"be determined by adding the -d option. This will design a coupler that must look\\\")\\n        edi = str.like_the_structure_below._The_two_inner_conductors__which_are_spaced_equally // give_examples_of_using_design_coupler.c:42 // 0x4095e0 // \\\"like the structure below. The two inner conductors, which are spaced equally\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"like the structure below. The two inner conductors, which are spaced equally\\\")\\n        edi = str.between_the_top_and_bottom_edges_of_the_outer_conductor__must_be_very_thin. // give_examples_of_using_design_coupler.c:43 // 0x409630 // \\\"between the top and bottom edges of the outer conductor, must be very thin.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"between the top and bottom edges of the outer conductor, must be very thin.\\\")\\n        edi = str.These_are_placed_along_the_length_of_a_box_of_width_W__height_H_and_of // give_examples_of_using_design_coupler.c:44 // 0x409680 // \\\"These are placed along the length of a box of width W, height H and of\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"These are placed along the length of a box of width W, height H and of\\\")\\n        edi = str.a_length_L_determined_by_the_user__which_in_this_case_is_250_mm. // give_examples_of_using_design_coupler.c:45 // 0x4096c8 // \\\"a length L determined by the user, which in this case is 250 mm.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"a length L determined by the user, which in this case is 250 mm.\\\")\\n        edi = 0x403f60 // give_examples_of_using_design_coupler.c:46 // '`?@' // \\\"|-----------^------------------------------------------------------------------|\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"|-----------^------------------------------------------------------------------|\\\")\\n        edi = str._____________________________________________________________________________ // give_examples_of_using_design_coupler.c:47 // 0x403fb8 // \\\"|           |                                                                  |\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"|           |                                                                  |\\\")\\n        edi = str._____________________________w__________s_________w__________________________ // give_examples_of_using_design_coupler.c:48 // 0x404010 // \\\"|           |              <---w---><-----s----><---w-->                       |\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"|           |              <---w---><-----s----><---w-->                       |\\\")\\n        edi = str.___________H__________________________________________________________________ // give_examples_of_using_design_coupler.c:49 // 0x404068 // \\\"|           H              ---------            --------                       |\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"|           H              ---------            --------                       |\\\")\\n        edi = str._____________________________________________________________________________ // give_examples_of_using_design_coupler.c:50 // 0x403fb8 // \\\"|           |                                                                  |\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"|           |                                                                  |\\\")\\n        edi = str.______________Er1.0__air____________________________________________________ // give_examples_of_using_design_coupler.c:51 // 0x4040c0 // \\\"|           |   Er=1.0 (air)                                                   |\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"|           |   Er=1.0 (air)                                                   |\\\")\\n        edi = str.____________v__________________________________________________________________ // give_examples_of_using_design_coupler.c:52 // 0x404118 // \\\"------------v------------------------------------------------------------------\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"------------v------------------------------------------------------------------\\\")\\n        edi = str.__________________________________________W____________________________________ // give_examples_of_using_design_coupler.c:53 // 0x404168 // \\\"<-----------------------------------------W----------------------------------->\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"<-----------------------------------------W----------------------------------->\\\")\\n        edi = str.The_program_reports:_H__1.0____w__1.44___s__0.44 // give_examples_of_using_design_coupler.c:54 // 0x409710 // \\\"The program reports: H = 1.0, // w = 1.44 // s = 0.44\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"The program reports: H = 1.0, // w = 1.44 // s = 0.44\\\")\\n        edi = str.The_height_of_the_box_H_must_be_small_compared_to_the_length_L___perhaps_no // give_examples_of_using_design_coupler.c:56 // 0x409748 // \\\"The height of the box H must be small compared to the length L, (perhaps no\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"The height of the box H must be small compared to the length L, (perhaps no\\\")\\n        esi = 0x25    // give_examples_of_using_design_coupler.c:57 // '%' // 37\\n        edi = str.more_than_7_c_of_the_length___or_17.5_mm_in_this_case__with_a_length_of_250_mm__n // 0x409798 // \\\"more than 7%c of the length), or 17.5 mm in this case, with a length of 250 mm,\\\\n\\\" // const char *format\\n        eax = 0\\n        sym.imp.printf  ()\\n        // int printf(\\\"more than 7%c of the length), or 17.5 mm in this case, with a length of 250 mm,\\\\n\\\")\\n        edi = str.otherwise_fringing_effects_will_be_significant._The_width_of_the_structure_W // give_examples_of_using_design_coupler.c:58 // 0x4097f0 // \\\"otherwise fringing effects will be significant. The width of the structure W\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"otherwise fringing effects will be significant. The width of the structure W\\\")\\n        edi = str.should_be_as_large_as_possible._The_program_suggests_making_this_5H2ws._The // give_examples_of_using_design_coupler.c:59 // 0x409840 // \\\"should be as large as possible. The program suggests making this 5*H+2*w+s. The\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"should be as large as possible. The program suggests making this 5*H+2*w+s. The\\\")\\n        esi = 0x25    // give_examples_of_using_design_coupler.c:60 // '%' // 37\\n        edi = str.7_c_and_5H2ws_are_educated_guesses__rather_than_exact_figures._There_is_n // 0x409890 // \\\"7%c and 5*H+2*w+s are educated guesses, rather than exact figures. There is\\\\n\\\" // const char *format\\n        eax = 0\\n        sym.imp.printf  ()\\n        // int printf(\\\"7%c and 5*H+2*w+s are educated guesses, rather than exact figures. There is\\\\n\\\")\\n        edi = str.no_problem_in_making_the_width__larger_than_5H2ws._The_length_L_must_be // give_examples_of_using_design_coupler.c:61 // 0x4098e0 // \\\"no problem in making the width  larger than 5*H+2*w+s. The length L must be\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"no problem in making the width  larger than 5*H+2*w+s. The length L must be\\\")\\n        edi = str.kept_at_250_mm._The_RATIO_of_the_dimensions_H__w_and_s__but_not_L_or_W // give_examples_of_using_design_coupler.c:62 // 0x409930 // \\\"kept at 250 mm. The RATIO of the dimensions H, w and s (but not L or W\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"kept at 250 mm. The RATIO of the dimensions H, w and s (but not L or W\\\")\\n        edi = str.must_be_kept_constant._W_just_needs_to_be_sufficiently_large___it_is // give_examples_of_using_design_coupler.c:63 // 0x409978 // \\\"must be kept constant. W just needs to be sufficiently large - it is\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"must be kept constant. W just needs to be sufficiently large - it is\\\")\\n        edi = str.uncritical.___n // give_examples_of_using_design_coupler.c:64 // 0x409db0 // \\\"uncritical.  \\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"uncritical.  \\\\n\\\")\\n        edi = str.If_you_happened_to_have_some_15_mm_square_brass_available__then_using_that // give_examples_of_using_design_coupler.c:65 // 0x4099c0 // \\\"If you happened to have some 15 mm square brass available, then using that\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"If you happened to have some 15 mm square brass available, then using that\\\")\\n        edi = str.for_the_side_walls_would_require_that_H_becomes_151.0__15_mm_ // give_examples_of_using_design_coupler.c:66 // 0x409a10 // \\\"for the side-walls would require that H becomes 15*1.0 = 15 mm,\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"for the side-walls would require that H becomes 15*1.0 = 15 mm,\\\")\\n        edi = str.w__151.44__21.6_mm__and_s__150.44__6.6_mm_n // give_examples_of_using_design_coupler.c:67 // 0x409a50 // \\\"w = 15*1.44 = 21.6 mm  and s = 15*0.44 = 6.6 mm\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"w = 15*1.44 = 21.6 mm  and s = 15*0.44 = 6.6 mm\\\\n\\\")\\n        edi = str.There_is_no_need_to_compute_the_above_scaling_with_a_calculator__as_using // give_examples_of_using_design_coupler.c:68 // 0x409a88 // \\\"There is no need to compute the above scaling with a calculator, as using\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"There is no need to compute the above scaling with a calculator, as using\\\")\\n        edi = str.The__H_option_allows_one_to_specify_the_height_H._The_program_then_reports_the // give_examples_of_using_design_coupler.c:69 // 0x409ad8 // \\\"The -H option allows one to specify the height H. The program then reports the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"The -H option allows one to specify the height H. The program then reports the\\\")\\n        edi = str.exact_dimensions_for_the_length_L__height_H__w__s_and_suggests_a_minimum_width // give_examples_of_using_design_coupler.c:70 // 0x409b28 // \\\"exact dimensions for the length L, height H, w, s and suggests a minimum width\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"exact dimensions for the length L, height H, w, s and suggests a minimum width\\\")\\n        edi = str.for_W._n // give_examples_of_using_design_coupler.c:71 // 0x409dbf // \\\"for W.\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"for W.\\\\n\\\")\\n        edi = str.In_summary_we_have: // give_examples_of_using_design_coupler.c:72 // 0x409dc7 // \\\"In summary we have:\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"In summary we have:\\\")\\n        edi = str.___________________30_dB_coupler_1.02_dB____0.78_dB_for_130_to_170_MHz // give_examples_of_using_design_coupler.c:73 // 0x409b78 // \\\"                   30 dB coupler +1.02 dB / -0.78 dB for 130 to 170 MHz\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"                   30 dB coupler +1.02 dB / -0.78 dB for 130 to 170 MHz\\\")\\n        edi = str.___________________Length_L__250_mm__height_H__15_mm__stripline_spacing_s // give_examples_of_using_design_coupler.c:74 // 0x409bc0 // \\\"                   Length L = 250 mm, height H = 15 mm, stripline spacing s\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"                   Length L = 250 mm, height H = 15 mm, stripline spacing s\\\")\\n        edi = str.____________________6.6_mm__stripline_width_w__21.6_mm__width_W___124_mm // give_examples_of_using_design_coupler.c:75 // 0x409c10 // \\\"                   = 6.6 mm, stripline width w = 21.6 mm, width W >= 124 mm\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"                   = 6.6 mm, stripline width w = 21.6 mm, width W >= 124 mm\\\")\\n        edi = str.By_default__design_coupler_prints_a_lot_of_information_to_the_screen. // give_examples_of_using_design_coupler.c:76 // 0x409c60 // \\\"By default, design_coupler prints a lot of information to the screen.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"By default, design_coupler prints a lot of information to the screen.\\\")\\n        edi = str.This_can_be_reduced_by_the__q_option_or_reduced_to_only_one_line_with__Q // give_examples_of_using_design_coupler.c:77 // 0x409ca8 // \\\"This can be reduced by the -q option or reduced to only one line with -Q\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"This can be reduced by the -q option or reduced to only one line with -Q\\\")\\n        edi = str.Other_options_include__Z_to_change_the_impedance_from_the_default_50_Ohms // give_examples_of_using_design_coupler.c:78 // 0x409cf8 // \\\"Other options include -Z to change the impedance from the default 50 Ohms\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Other options include -Z to change the impedance from the default 50 Ohms\\\")\\n        edi = str.and__C_to_see_the_fully_copyright__Licensing_and_distribution_information // give_examples_of_using_design_coupler.c:79 // 0x409d48 // \\\"and -C to see the fully copyright, Licensing and distribution information\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"and -C to see the fully copyright, Licensing and distribution information\\\")\\n        esi = 0       // give_examples_of_using_design_coupler.c:80\\n        edi = 0x403513 // '\\\\x135@'\\n        rsp += 8      // give_examples_of_using_design_coupler.c:81\\n        goto loc_0x402e60 // give_examples_of_using_design_coupler.c:80 // dbg.exit_with_msg_and_exit_code // dbg.exit_with_msg_and_exit_code // dbg.exit_with_msg_and_exit_code(0x403513)\\n        // chop\\n         // do {\\n    loc_0x402e60:\\n        // XREFS: CALL 0x00400a17  CALL 0x00400aaa  CALL 0x00400cdb\\n        // XREFS: CALL 0x0040137e  CALL 0x00401596  CODE 0x00402e4f\\n        // XREFS: CALL 0x004030ea  CALL 0x0040341a\\n        var = rdi & rdi // exit_with_msg_and_exit_code.c:38 // arg1 \\u001b[0m// void exit_with_msg_and_exit_code(char const * s,int exitnumber)//\\n        push  (rbx)\\n        ebx = esi     // arg2\\n        if  (!var) goto loc_0x402e6d // exit_with_msg_and_exit_code.c:39 // likely\\n         // } while (?);\\n        }\\n        return eax;\\n    loc_0x402e68:\\n        var = byte [rdi] - 0 // exit_with_msg_and_exit_code.c:39 // arg1\\n        if  (var) goto loc_0x402e74 // likely\\n        // chop\\n            \\n    loc_0x402e74:\\n        // CODE XREF from dbg.exit_with_msg_and_exit_code @ 0x402e6b(x)\\n        rdx = rdi     // exit_with_msg_and_exit_code.c:40 //   ...\\n        rdi = qword [obj.stderr] // obj.stderr__GLIBC_2.2.5\\n        // [0x60a540:8]=0 // FILE *stream\\n        esi = 0x404d69 // 'iM@' // \\\"%s\\\\n\\\" // const char *format\\n        eax = 0\\n        sym.imp.fprintf  ()\\n        // int fprintf(?, \\\"%s\\\\n\\\", ?)\\n        goto loc_0x402e6d\\n        // chop\\n}\\n\"}\n"