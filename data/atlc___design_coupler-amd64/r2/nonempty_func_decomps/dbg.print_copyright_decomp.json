"{\"annotations\":[{\"start\":62,\"end\":62,\"offset\":4202016,\"type\":\"offset\"},{\"start\":111,\"end\":111,\"offset\":4202016,\"type\":\"offset\"},{\"start\":198,\"end\":198,\"offset\":4202020,\"type\":\"offset\"},{\"start\":228,\"end\":228,\"offset\":4202023,\"type\":\"offset\"},{\"start\":273,\"end\":273,\"offset\":4202025,\"type\":\"offset\"},{\"start\":432,\"end\":432,\"offset\":4202030,\"type\":\"offset\"},{\"start\":459,\"end\":459,\"offset\":4202030,\"type\":\"offset\"},{\"start\":535,\"end\":535,\"offset\":4202035,\"type\":\"offset\"},{\"start\":706,\"end\":706,\"offset\":4202040,\"type\":\"offset\"},{\"start\":731,\"end\":731,\"offset\":4202040,\"type\":\"offset\"},{\"start\":802,\"end\":802,\"offset\":4202045,\"type\":\"offset\"},{\"start\":1007,\"end\":1007,\"offset\":4202050,\"type\":\"offset\"},{\"start\":1032,\"end\":1032,\"offset\":4202050,\"type\":\"offset\"},{\"start\":1120,\"end\":1120,\"offset\":4202055,\"type\":\"offset\"},{\"start\":1321,\"end\":1321,\"offset\":4202060,\"type\":\"offset\"},{\"start\":1346,\"end\":1346,\"offset\":4202060,\"type\":\"offset\"},{\"start\":1432,\"end\":1432,\"offset\":4202065,\"type\":\"offset\"},{\"start\":1628,\"end\":1628,\"offset\":4202070,\"type\":\"offset\"},{\"start\":1653,\"end\":1653,\"offset\":4202070,\"type\":\"offset\"},{\"start\":1736,\"end\":1736,\"offset\":4202075,\"type\":\"offset\"},{\"start\":1955,\"end\":1955,\"offset\":4202080,\"type\":\"offset\"},{\"start\":1980,\"end\":1980,\"offset\":4202080,\"type\":\"offset\"},{\"start\":2075,\"end\":2075,\"offset\":4202085,\"type\":\"offset\"},{\"start\":2281,\"end\":2281,\"offset\":4202090,\"type\":\"offset\"},{\"start\":2306,\"end\":2306,\"offset\":4202090,\"type\":\"offset\"},{\"start\":2394,\"end\":2394,\"offset\":4202095,\"type\":\"offset\"},{\"start\":2598,\"end\":2598,\"offset\":4202100,\"type\":\"offset\"},{\"start\":2623,\"end\":2623,\"offset\":4202100,\"type\":\"offset\"},{\"start\":2710,\"end\":2710,\"offset\":4202105,\"type\":\"offset\"},{\"start\":2913,\"end\":2913,\"offset\":4202110,\"type\":\"offset\"},{\"start\":2938,\"end\":2938,\"offset\":4202110,\"type\":\"offset\"},{\"start\":3025,\"end\":3025,\"offset\":4202115,\"type\":\"offset\"},{\"start\":3225,\"end\":3225,\"offset\":4202120,\"type\":\"offset\"},{\"start\":3250,\"end\":3250,\"offset\":4202120,\"type\":\"offset\"},{\"start\":3335,\"end\":3335,\"offset\":4202125,\"type\":\"offset\"},{\"start\":3537,\"end\":3537,\"offset\":4202130,\"type\":\"offset\"},{\"start\":3562,\"end\":3562,\"offset\":4202130,\"type\":\"offset\"},{\"start\":3648,\"end\":3648,\"offset\":4202135,\"type\":\"offset\"},{\"start\":3812,\"end\":3812,\"offset\":4202140,\"type\":\"offset\"},{\"start\":3837,\"end\":3837,\"offset\":4202140,\"type\":\"offset\"},{\"start\":3904,\"end\":3904,\"offset\":4202145,\"type\":\"offset\"},{\"start\":4082,\"end\":4082,\"offset\":4202150,\"type\":\"offset\"},{\"start\":4107,\"end\":4107,\"offset\":4202150,\"type\":\"offset\"},{\"start\":4181,\"end\":4181,\"offset\":4202155,\"type\":\"offset\"},{\"start\":4371,\"end\":4371,\"offset\":4202160,\"type\":\"offset\"},{\"start\":4396,\"end\":4396,\"offset\":4202160,\"type\":\"offset\"},{\"start\":4476,\"end\":4476,\"offset\":4202165,\"type\":\"offset\"},{\"start\":4710,\"end\":4710,\"offset\":4202170,\"type\":\"offset\"},{\"start\":4735,\"end\":4735,\"offset\":4202170,\"type\":\"offset\"},{\"start\":4837,\"end\":4837,\"offset\":4202175,\"type\":\"offset\"},{\"start\":5037,\"end\":5037,\"offset\":4202180,\"type\":\"offset\"},{\"start\":5062,\"end\":5062,\"offset\":4202180,\"type\":\"offset\"},{\"start\":5147,\"end\":5147,\"offset\":4202185,\"type\":\"offset\"},{\"start\":5345,\"end\":5345,\"offset\":4202190,\"type\":\"offset\"},{\"start\":5370,\"end\":5370,\"offset\":4202190,\"type\":\"offset\"},{\"start\":5454,\"end\":5454,\"offset\":4202195,\"type\":\"offset\"},{\"start\":5598,\"end\":5598,\"offset\":4202200,\"type\":\"offset\"},{\"start\":5623,\"end\":5623,\"offset\":4202200,\"type\":\"offset\"},{\"start\":5680,\"end\":5680,\"offset\":4202205,\"type\":\"offset\"},{\"start\":5886,\"end\":5886,\"offset\":4202210,\"type\":\"offset\"},{\"start\":5911,\"end\":5911,\"offset\":4202210,\"type\":\"offset\"},{\"start\":5999,\"end\":5999,\"offset\":4202215,\"type\":\"offset\"},{\"start\":6213,\"end\":6213,\"offset\":4202220,\"type\":\"offset\"},{\"start\":6238,\"end\":6238,\"offset\":4202220,\"type\":\"offset\"},{\"start\":6330,\"end\":6330,\"offset\":4202225,\"type\":\"offset\"},{\"start\":6548,\"end\":6548,\"offset\":4202230,\"type\":\"offset\"},{\"start\":6573,\"end\":6573,\"offset\":4202230,\"type\":\"offset\"},{\"start\":6667,\"end\":6667,\"offset\":4202235,\"type\":\"offset\"},{\"start\":6881,\"end\":6881,\"offset\":4202240,\"type\":\"offset\"},{\"start\":6906,\"end\":6906,\"offset\":4202240,\"type\":\"offset\"},{\"start\":6998,\"end\":6998,\"offset\":4202245,\"type\":\"offset\"},{\"start\":7194,\"end\":7194,\"offset\":4202250,\"type\":\"offset\"},{\"start\":7219,\"end\":7219,\"offset\":4202250,\"type\":\"offset\"},{\"start\":7302,\"end\":7302,\"offset\":4202255,\"type\":\"offset\"},{\"start\":7519,\"end\":7519,\"offset\":4202260,\"type\":\"offset\"},{\"start\":7544,\"end\":7544,\"offset\":4202260,\"type\":\"offset\"},{\"start\":7638,\"end\":7638,\"offset\":4202265,\"type\":\"offset\"},{\"start\":7856,\"end\":7856,\"offset\":4202270,\"type\":\"offset\"},{\"start\":7881,\"end\":7881,\"offset\":4202270,\"type\":\"offset\"},{\"start\":7975,\"end\":7975,\"offset\":4202275,\"type\":\"offset\"},{\"start\":8191,\"end\":8191,\"offset\":4202280,\"type\":\"offset\"},{\"start\":8216,\"end\":8216,\"offset\":4202280,\"type\":\"offset\"},{\"start\":8309,\"end\":8309,\"offset\":4202285,\"type\":\"offset\"},{\"start\":8429,\"end\":8429,\"offset\":4202290,\"type\":\"offset\"},{\"start\":8454,\"end\":8454,\"offset\":4202290,\"type\":\"offset\"},{\"start\":8499,\"end\":8499,\"offset\":4202295,\"type\":\"offset\"},{\"start\":8709,\"end\":8709,\"offset\":4202300,\"type\":\"offset\"},{\"start\":8734,\"end\":8734,\"offset\":4202300,\"type\":\"offset\"},{\"start\":8824,\"end\":8824,\"offset\":4202305,\"type\":\"offset\"},{\"start\":9042,\"end\":9042,\"offset\":4202310,\"type\":\"offset\"},{\"start\":9067,\"end\":9067,\"offset\":4202310,\"type\":\"offset\"},{\"start\":9161,\"end\":9161,\"offset\":4202315,\"type\":\"offset\"},{\"start\":9379,\"end\":9379,\"offset\":4202320,\"type\":\"offset\"},{\"start\":9404,\"end\":9404,\"offset\":4202320,\"type\":\"offset\"},{\"start\":9498,\"end\":9498,\"offset\":4202325,\"type\":\"offset\"},{\"start\":9714,\"end\":9714,\"offset\":4202330,\"type\":\"offset\"},{\"start\":9739,\"end\":9739,\"offset\":4202330,\"type\":\"offset\"},{\"start\":9832,\"end\":9832,\"offset\":4202335,\"type\":\"offset\"},{\"start\":10046,\"end\":10046,\"offset\":4202340,\"type\":\"offset\"},{\"start\":10071,\"end\":10071,\"offset\":4202340,\"type\":\"offset\"},{\"start\":10163,\"end\":10163,\"offset\":4202345,\"type\":\"offset\"},{\"start\":10374,\"end\":10374,\"offset\":4202350,\"type\":\"offset\"},{\"start\":10399,\"end\":10399,\"offset\":4202350,\"type\":\"offset\"},{\"start\":10490,\"end\":10490,\"offset\":4202355,\"type\":\"offset\"},{\"start\":10700,\"end\":10700,\"offset\":4202360,\"type\":\"offset\"},{\"start\":10725,\"end\":10725,\"offset\":4202360,\"type\":\"offset\"},{\"start\":10815,\"end\":10815,\"offset\":4202365,\"type\":\"offset\"},{\"start\":11033,\"end\":11033,\"offset\":4202370,\"type\":\"offset\"},{\"start\":11058,\"end\":11058,\"offset\":4202370,\"type\":\"offset\"},{\"start\":11152,\"end\":11152,\"offset\":4202375,\"type\":\"offset\"},{\"start\":11372,\"end\":11372,\"offset\":4202380,\"type\":\"offset\"},{\"start\":11397,\"end\":11397,\"offset\":4202380,\"type\":\"offset\"},{\"start\":11492,\"end\":11492,\"offset\":4202385,\"type\":\"offset\"},{\"start\":11684,\"end\":11684,\"offset\":4202390,\"type\":\"offset\"},{\"start\":11709,\"end\":11709,\"offset\":4202390,\"type\":\"offset\"},{\"start\":11790,\"end\":11790,\"offset\":4202395,\"type\":\"offset\"},{\"start\":12000,\"end\":12000,\"offset\":4202400,\"type\":\"offset\"},{\"start\":12025,\"end\":12025,\"offset\":4202400,\"type\":\"offset\"},{\"start\":12115,\"end\":12115,\"offset\":4202405,\"type\":\"offset\"},{\"start\":12331,\"end\":12331,\"offset\":4202410,\"type\":\"offset\"},{\"start\":12356,\"end\":12356,\"offset\":4202410,\"type\":\"offset\"},{\"start\":12449,\"end\":12449,\"offset\":4202415,\"type\":\"offset\"},{\"start\":12663,\"end\":12663,\"offset\":4202420,\"type\":\"offset\"},{\"start\":12688,\"end\":12688,\"offset\":4202420,\"type\":\"offset\"},{\"start\":12780,\"end\":12780,\"offset\":4202425,\"type\":\"offset\"},{\"start\":12992,\"end\":12992,\"offset\":4202430,\"type\":\"offset\"},{\"start\":13017,\"end\":13017,\"offset\":4202430,\"type\":\"offset\"},{\"start\":13108,\"end\":13108,\"offset\":4202435,\"type\":\"offset\"},{\"start\":13200,\"end\":13200,\"offset\":4202440,\"type\":\"offset\"},{\"start\":13225,\"end\":13225,\"offset\":4202440,\"type\":\"offset\"},{\"start\":13256,\"end\":13256,\"offset\":4202445,\"type\":\"offset\"},{\"start\":13311,\"end\":13311,\"offset\":4202450,\"type\":\"offset\"},{\"start\":13339,\"end\":13339,\"offset\":4202450,\"type\":\"offset\"},{\"start\":13365,\"end\":13365,\"offset\":4202455,\"type\":\"offset\"},{\"start\":13587,\"end\":13587,\"offset\":4202460,\"type\":\"offset\"},{\"start\":13612,\"end\":13612,\"offset\":4202460,\"type\":\"offset\"},{\"start\":13708,\"end\":13708,\"offset\":4202465,\"type\":\"offset\"},{\"start\":13922,\"end\":13922,\"offset\":4202470,\"type\":\"offset\"},{\"start\":13947,\"end\":13947,\"offset\":4202470,\"type\":\"offset\"},{\"start\":14039,\"end\":14039,\"offset\":4202475,\"type\":\"offset\"},{\"start\":14193,\"end\":14193,\"offset\":4202480,\"type\":\"offset\"},{\"start\":14218,\"end\":14218,\"offset\":4202480,\"type\":\"offset\"},{\"start\":14280,\"end\":14280,\"offset\":4202485,\"type\":\"offset\"},{\"start\":14335,\"end\":14335,\"offset\":4202490,\"type\":\"offset\"},{\"start\":14363,\"end\":14363,\"offset\":4202490,\"type\":\"offset\"},{\"start\":14389,\"end\":14389,\"offset\":4202495,\"type\":\"offset\"},{\"start\":14606,\"end\":14606,\"offset\":4202500,\"type\":\"offset\"},{\"start\":14631,\"end\":14631,\"offset\":4202500,\"type\":\"offset\"},{\"start\":14725,\"end\":14725,\"offset\":4202505,\"type\":\"offset\"},{\"start\":14933,\"end\":14933,\"offset\":4202510,\"type\":\"offset\"},{\"start\":14958,\"end\":14958,\"offset\":4202510,\"type\":\"offset\"},{\"start\":15047,\"end\":15047,\"offset\":4202515,\"type\":\"offset\"},{\"start\":15269,\"end\":15269,\"offset\":4202520,\"type\":\"offset\"},{\"start\":15294,\"end\":15294,\"offset\":4202520,\"type\":\"offset\"},{\"start\":15390,\"end\":15390,\"offset\":4202525,\"type\":\"offset\"},{\"start\":15610,\"end\":15610,\"offset\":4202530,\"type\":\"offset\"},{\"start\":15635,\"end\":15635,\"offset\":4202530,\"type\":\"offset\"},{\"start\":15730,\"end\":15730,\"offset\":4202535,\"type\":\"offset\"},{\"start\":15950,\"end\":15950,\"offset\":4202540,\"type\":\"offset\"},{\"start\":15975,\"end\":15975,\"offset\":4202540,\"type\":\"offset\"},{\"start\":16070,\"end\":16070,\"offset\":4202545,\"type\":\"offset\"},{\"start\":16189,\"end\":16189,\"offset\":4202550,\"type\":\"offset\"},{\"start\":16214,\"end\":16214,\"offset\":4202550,\"type\":\"offset\"},{\"start\":16259,\"end\":16259,\"offset\":4202555,\"type\":\"offset\"},{\"start\":16314,\"end\":16314,\"offset\":4202560,\"type\":\"offset\"},{\"start\":16342,\"end\":16342,\"offset\":4202560,\"type\":\"offset\"},{\"start\":16368,\"end\":16368,\"offset\":4202565,\"type\":\"offset\"},{\"start\":16574,\"end\":16574,\"offset\":4202570,\"type\":\"offset\"},{\"start\":16599,\"end\":16599,\"offset\":4202570,\"type\":\"offset\"},{\"start\":16687,\"end\":16687,\"offset\":4202575,\"type\":\"offset\"},{\"start\":16899,\"end\":16899,\"offset\":4202580,\"type\":\"offset\"},{\"start\":16924,\"end\":16924,\"offset\":4202580,\"type\":\"offset\"},{\"start\":17015,\"end\":17015,\"offset\":4202585,\"type\":\"offset\"},{\"start\":17233,\"end\":17233,\"offset\":4202590,\"type\":\"offset\"},{\"start\":17258,\"end\":17258,\"offset\":4202590,\"type\":\"offset\"},{\"start\":17352,\"end\":17352,\"offset\":4202595,\"type\":\"offset\"},{\"start\":17568,\"end\":17568,\"offset\":4202600,\"type\":\"offset\"},{\"start\":17593,\"end\":17593,\"offset\":4202600,\"type\":\"offset\"},{\"start\":17686,\"end\":17686,\"offset\":4202605,\"type\":\"offset\"},{\"start\":17905,\"end\":17905,\"offset\":4202610,\"type\":\"offset\"},{\"start\":17930,\"end\":17930,\"offset\":4202610,\"type\":\"offset\"},{\"start\":18025,\"end\":18025,\"offset\":4202615,\"type\":\"offset\"},{\"start\":18080,\"end\":18080,\"offset\":4202620,\"type\":\"offset\"},{\"start\":18108,\"end\":18108,\"offset\":4202620,\"type\":\"offset\"},{\"start\":18134,\"end\":18134,\"offset\":4202625,\"type\":\"offset\"},{\"start\":18340,\"end\":18340,\"offset\":4202630,\"type\":\"offset\"},{\"start\":18365,\"end\":18365,\"offset\":4202630,\"type\":\"offset\"},{\"start\":18453,\"end\":18453,\"offset\":4202635,\"type\":\"offset\"},{\"start\":18571,\"end\":18571,\"offset\":4202640,\"type\":\"offset\"},{\"start\":18596,\"end\":18596,\"offset\":4202640,\"type\":\"offset\"},{\"start\":18640,\"end\":18640,\"offset\":4202645,\"type\":\"offset\"},{\"start\":18704,\"end\":18704,\"offset\":4202650,\"type\":\"offset\"},{\"start\":18729,\"end\":18729,\"offset\":4202650,\"type\":\"offset\"},{\"start\":18755,\"end\":18755,\"offset\":4202655,\"type\":\"offset\"},{\"start\":18901,\"end\":18901,\"offset\":4202660,\"type\":\"offset\"},{\"start\":18926,\"end\":18926,\"offset\":4202660,\"type\":\"offset\"},{\"start\":18984,\"end\":18984,\"offset\":4202665,\"type\":\"offset\"},{\"start\":19194,\"end\":19194,\"offset\":4202670,\"type\":\"offset\"},{\"start\":19219,\"end\":19219,\"offset\":4202670,\"type\":\"offset\"},{\"start\":19309,\"end\":19309,\"offset\":4202675,\"type\":\"offset\"},{\"start\":19364,\"end\":19364,\"offset\":4202680,\"type\":\"offset\"},{\"start\":19392,\"end\":19392,\"offset\":4202680,\"type\":\"offset\"},{\"start\":19418,\"end\":19418,\"offset\":4202685,\"type\":\"offset\"},{\"start\":19634,\"end\":19634,\"offset\":4202690,\"type\":\"offset\"},{\"start\":19659,\"end\":19659,\"offset\":4202690,\"type\":\"offset\"},{\"start\":19752,\"end\":19752,\"offset\":4202695,\"type\":\"offset\"},{\"start\":19966,\"end\":19966,\"offset\":4202700,\"type\":\"offset\"},{\"start\":19991,\"end\":19991,\"offset\":4202700,\"type\":\"offset\"},{\"start\":20083,\"end\":20083,\"offset\":4202705,\"type\":\"offset\"},{\"start\":20303,\"end\":20303,\"offset\":4202710,\"type\":\"offset\"},{\"start\":20328,\"end\":20328,\"offset\":4202710,\"type\":\"offset\"},{\"start\":20424,\"end\":20424,\"offset\":4202715,\"type\":\"offset\"},{\"start\":20642,\"end\":20642,\"offset\":4202720,\"type\":\"offset\"},{\"start\":20667,\"end\":20667,\"offset\":4202720,\"type\":\"offset\"},{\"start\":20762,\"end\":20762,\"offset\":4202725,\"type\":\"offset\"},{\"start\":20976,\"end\":20976,\"offset\":4202730,\"type\":\"offset\"},{\"start\":21001,\"end\":21001,\"offset\":4202730,\"type\":\"offset\"},{\"start\":21093,\"end\":21093,\"offset\":4202735,\"type\":\"offset\"},{\"start\":21301,\"end\":21301,\"offset\":4202740,\"type\":\"offset\"},{\"start\":21326,\"end\":21326,\"offset\":4202740,\"type\":\"offset\"},{\"start\":21415,\"end\":21415,\"offset\":4202745,\"type\":\"offset\"},{\"start\":21629,\"end\":21629,\"offset\":4202750,\"type\":\"offset\"},{\"start\":21654,\"end\":21654,\"offset\":4202750,\"type\":\"offset\"},{\"start\":21746,\"end\":21746,\"offset\":4202755,\"type\":\"offset\"},{\"start\":21964,\"end\":21964,\"offset\":4202760,\"type\":\"offset\"},{\"start\":21989,\"end\":21989,\"offset\":4202760,\"type\":\"offset\"},{\"start\":22083,\"end\":22083,\"offset\":4202765,\"type\":\"offset\"},{\"start\":22291,\"end\":22291,\"offset\":4202770,\"type\":\"offset\"},{\"start\":22316,\"end\":22316,\"offset\":4202770,\"type\":\"offset\"},{\"start\":22407,\"end\":22407,\"offset\":4202775,\"type\":\"offset\"},{\"start\":22462,\"end\":22462,\"offset\":4202780,\"type\":\"offset\"},{\"start\":22490,\"end\":22490,\"offset\":4202780,\"type\":\"offset\"},{\"start\":22516,\"end\":22516,\"offset\":4202785,\"type\":\"offset\"},{\"start\":22730,\"end\":22730,\"offset\":4202790,\"type\":\"offset\"},{\"start\":22755,\"end\":22755,\"offset\":4202790,\"type\":\"offset\"},{\"start\":22847,\"end\":22847,\"offset\":4202795,\"type\":\"offset\"},{\"start\":23054,\"end\":23054,\"offset\":4202800,\"type\":\"offset\"},{\"start\":23079,\"end\":23079,\"offset\":4202800,\"type\":\"offset\"},{\"start\":23168,\"end\":23168,\"offset\":4202805,\"type\":\"offset\"},{\"start\":23386,\"end\":23386,\"offset\":4202810,\"type\":\"offset\"},{\"start\":23411,\"end\":23411,\"offset\":4202810,\"type\":\"offset\"},{\"start\":23505,\"end\":23505,\"offset\":4202815,\"type\":\"offset\"},{\"start\":23707,\"end\":23707,\"offset\":4202820,\"type\":\"offset\"},{\"start\":23732,\"end\":23732,\"offset\":4202820,\"type\":\"offset\"},{\"start\":23818,\"end\":23818,\"offset\":4202825,\"type\":\"offset\"},{\"start\":24026,\"end\":24026,\"offset\":4202830,\"type\":\"offset\"},{\"start\":24051,\"end\":24051,\"offset\":4202830,\"type\":\"offset\"},{\"start\":24140,\"end\":24140,\"offset\":4202835,\"type\":\"offset\"},{\"start\":24326,\"end\":24326,\"offset\":4202840,\"type\":\"offset\"},{\"start\":24351,\"end\":24351,\"offset\":4202840,\"type\":\"offset\"},{\"start\":24429,\"end\":24429,\"offset\":4202845,\"type\":\"offset\"},{\"start\":24484,\"end\":24484,\"offset\":4202850,\"type\":\"offset\"},{\"start\":24512,\"end\":24512,\"offset\":4202850,\"type\":\"offset\"},{\"start\":24538,\"end\":24538,\"offset\":4202855,\"type\":\"offset\"},{\"start\":24745,\"end\":24745,\"offset\":4202860,\"type\":\"offset\"},{\"start\":24770,\"end\":24770,\"offset\":4202860,\"type\":\"offset\"},{\"start\":24859,\"end\":24859,\"offset\":4202865,\"type\":\"offset\"},{\"start\":25063,\"end\":25063,\"offset\":4202870,\"type\":\"offset\"},{\"start\":25088,\"end\":25088,\"offset\":4202870,\"type\":\"offset\"},{\"start\":25175,\"end\":25175,\"offset\":4202875,\"type\":\"offset\"},{\"start\":25387,\"end\":25387,\"offset\":4202880,\"type\":\"offset\"},{\"start\":25412,\"end\":25412,\"offset\":4202880,\"type\":\"offset\"},{\"start\":25503,\"end\":25503,\"offset\":4202885,\"type\":\"offset\"},{\"start\":25711,\"end\":25711,\"offset\":4202890,\"type\":\"offset\"},{\"start\":25736,\"end\":25736,\"offset\":4202890,\"type\":\"offset\"},{\"start\":25825,\"end\":25825,\"offset\":4202895,\"type\":\"offset\"},{\"start\":26045,\"end\":26045,\"offset\":4202900,\"type\":\"offset\"},{\"start\":26070,\"end\":26070,\"offset\":4202900,\"type\":\"offset\"},{\"start\":26165,\"end\":26165,\"offset\":4202905,\"type\":\"offset\"},{\"start\":26378,\"end\":26378,\"offset\":4202910,\"type\":\"offset\"},{\"start\":26403,\"end\":26403,\"offset\":4202910,\"type\":\"offset\"},{\"start\":26494,\"end\":26494,\"offset\":4202915,\"type\":\"offset\"},{\"start\":26619,\"end\":26619,\"offset\":4202920,\"type\":\"offset\"},{\"start\":26644,\"end\":26644,\"offset\":4202920,\"type\":\"offset\"},{\"start\":26691,\"end\":26691,\"offset\":4202925,\"type\":\"offset\"},{\"start\":26747,\"end\":26747,\"offset\":4202930,\"type\":\"offset\"},{\"start\":26775,\"end\":26775,\"offset\":4202930,\"type\":\"offset\"},{\"start\":26801,\"end\":26801,\"offset\":4202935,\"type\":\"offset\"},{\"start\":27018,\"end\":27018,\"offset\":4202940,\"type\":\"offset\"},{\"start\":27043,\"end\":27043,\"offset\":4202940,\"type\":\"offset\"},{\"start\":27136,\"end\":27136,\"offset\":4202945,\"type\":\"offset\"},{\"start\":27357,\"end\":27357,\"offset\":4202950,\"type\":\"offset\"},{\"start\":27382,\"end\":27382,\"offset\":4202950,\"type\":\"offset\"},{\"start\":27477,\"end\":27477,\"offset\":4202955,\"type\":\"offset\"},{\"start\":27533,\"end\":27533,\"offset\":4202960,\"type\":\"offset\"},{\"start\":27561,\"end\":27561,\"offset\":4202960,\"type\":\"offset\"},{\"start\":27587,\"end\":27587,\"offset\":4202965,\"type\":\"offset\"},{\"start\":27804,\"end\":27804,\"offset\":4202970,\"type\":\"offset\"},{\"start\":27829,\"end\":27829,\"offset\":4202970,\"type\":\"offset\"},{\"start\":27922,\"end\":27922,\"offset\":4202975,\"type\":\"offset\"},{\"start\":28123,\"end\":28123,\"offset\":4202980,\"type\":\"offset\"},{\"start\":28148,\"end\":28148,\"offset\":4202980,\"type\":\"offset\"},{\"start\":28233,\"end\":28233,\"offset\":4202985,\"type\":\"offset\"},{\"start\":28444,\"end\":28444,\"offset\":4202990,\"type\":\"offset\"},{\"start\":28469,\"end\":28469,\"offset\":4202990,\"type\":\"offset\"},{\"start\":28559,\"end\":28559,\"offset\":4202995,\"type\":\"offset\"},{\"start\":28756,\"end\":28756,\"offset\":4203000,\"type\":\"offset\"},{\"start\":28781,\"end\":28781,\"offset\":4203000,\"type\":\"offset\"},{\"start\":28864,\"end\":28864,\"offset\":4203005,\"type\":\"offset\"},{\"start\":28920,\"end\":28920,\"offset\":4203010,\"type\":\"offset\"},{\"start\":28948,\"end\":28948,\"offset\":4203010,\"type\":\"offset\"},{\"start\":28974,\"end\":28974,\"offset\":4203015,\"type\":\"offset\"},{\"start\":29187,\"end\":29187,\"offset\":4203020,\"type\":\"offset\"},{\"start\":29212,\"end\":29212,\"offset\":4203020,\"type\":\"offset\"},{\"start\":29303,\"end\":29303,\"offset\":4203025,\"type\":\"offset\"},{\"start\":29514,\"end\":29514,\"offset\":4203030,\"type\":\"offset\"},{\"start\":29539,\"end\":29539,\"offset\":4203030,\"type\":\"offset\"},{\"start\":29629,\"end\":29629,\"offset\":4203035,\"type\":\"offset\"},{\"start\":29685,\"end\":29685,\"offset\":4203040,\"type\":\"offset\"},{\"start\":29713,\"end\":29713,\"offset\":4203040,\"type\":\"offset\"},{\"start\":29739,\"end\":29739,\"offset\":4203045,\"type\":\"offset\"},{\"start\":29958,\"end\":29958,\"offset\":4203050,\"type\":\"offset\"},{\"start\":29983,\"end\":29983,\"offset\":4203050,\"type\":\"offset\"},{\"start\":30077,\"end\":30077,\"offset\":4203055,\"type\":\"offset\"},{\"start\":30290,\"end\":30290,\"offset\":4203060,\"type\":\"offset\"},{\"start\":30315,\"end\":30315,\"offset\":4203060,\"type\":\"offset\"},{\"start\":30406,\"end\":30406,\"offset\":4203065,\"type\":\"offset\"},{\"start\":30623,\"end\":30623,\"offset\":4203070,\"type\":\"offset\"},{\"start\":30648,\"end\":30648,\"offset\":4203070,\"type\":\"offset\"},{\"start\":30741,\"end\":30741,\"offset\":4203075,\"type\":\"offset\"},{\"start\":30908,\"end\":30908,\"offset\":4203080,\"type\":\"offset\"},{\"start\":30933,\"end\":30933,\"offset\":4203080,\"type\":\"offset\"},{\"start\":31001,\"end\":31001,\"offset\":4203085,\"type\":\"offset\"},{\"start\":31057,\"end\":31057,\"offset\":4203090,\"type\":\"offset\"},{\"start\":31085,\"end\":31085,\"offset\":4203090,\"type\":\"offset\"},{\"start\":31111,\"end\":31111,\"offset\":4203095,\"type\":\"offset\"},{\"start\":31326,\"end\":31326,\"offset\":4203100,\"type\":\"offset\"},{\"start\":31351,\"end\":31351,\"offset\":4203100,\"type\":\"offset\"},{\"start\":31443,\"end\":31443,\"offset\":4203105,\"type\":\"offset\"},{\"start\":31646,\"end\":31646,\"offset\":4203110,\"type\":\"offset\"},{\"start\":31671,\"end\":31671,\"offset\":4203110,\"type\":\"offset\"},{\"start\":31757,\"end\":31757,\"offset\":4203115,\"type\":\"offset\"},{\"start\":31972,\"end\":31972,\"offset\":4203120,\"type\":\"offset\"},{\"start\":31997,\"end\":31997,\"offset\":4203120,\"type\":\"offset\"},{\"start\":32089,\"end\":32089,\"offset\":4203125,\"type\":\"offset\"},{\"start\":32296,\"end\":32296,\"offset\":4203130,\"type\":\"offset\"},{\"start\":32321,\"end\":32321,\"offset\":4203130,\"type\":\"offset\"},{\"start\":32409,\"end\":32409,\"offset\":4203135,\"type\":\"offset\"},{\"start\":32628,\"end\":32628,\"offset\":4203140,\"type\":\"offset\"},{\"start\":32653,\"end\":32653,\"offset\":4203140,\"type\":\"offset\"},{\"start\":32747,\"end\":32747,\"offset\":4203145,\"type\":\"offset\"},{\"start\":32956,\"end\":32956,\"offset\":4203150,\"type\":\"offset\"},{\"start\":32981,\"end\":32981,\"offset\":4203150,\"type\":\"offset\"},{\"start\":33070,\"end\":33070,\"offset\":4203155,\"type\":\"offset\"},{\"start\":33287,\"end\":33287,\"offset\":4203160,\"type\":\"offset\"},{\"start\":33312,\"end\":33312,\"offset\":4203160,\"type\":\"offset\"},{\"start\":33405,\"end\":33405,\"offset\":4203165,\"type\":\"offset\"},{\"start\":33616,\"end\":33616,\"offset\":4203170,\"type\":\"offset\"},{\"start\":33641,\"end\":33641,\"offset\":4203170,\"type\":\"offset\"},{\"start\":33731,\"end\":33731,\"offset\":4203175,\"type\":\"offset\"},{\"start\":33946,\"end\":33946,\"offset\":4203180,\"type\":\"offset\"},{\"start\":33971,\"end\":33971,\"offset\":4203180,\"type\":\"offset\"},{\"start\":34063,\"end\":34063,\"offset\":4203185,\"type\":\"offset\"},{\"start\":34258,\"end\":34258,\"offset\":4203190,\"type\":\"offset\"},{\"start\":34283,\"end\":34283,\"offset\":4203190,\"type\":\"offset\"},{\"start\":34365,\"end\":34365,\"offset\":4203195,\"type\":\"offset\"},{\"start\":34430,\"end\":34430,\"offset\":4203200,\"type\":\"offset\"},{\"start\":34455,\"end\":34455,\"offset\":4203200,\"type\":\"offset\"},{\"start\":34481,\"end\":34481,\"offset\":4203205,\"type\":\"offset\"},{\"start\":34682,\"end\":34682,\"offset\":4203210,\"type\":\"offset\"},{\"start\":34707,\"end\":34707,\"offset\":4203210,\"type\":\"offset\"},{\"start\":34792,\"end\":34792,\"offset\":4203215,\"type\":\"offset\"},{\"start\":35007,\"end\":35007,\"offset\":4203220,\"type\":\"offset\"},{\"start\":35032,\"end\":35032,\"offset\":4203220,\"type\":\"offset\"},{\"start\":35124,\"end\":35124,\"offset\":4203225,\"type\":\"offset\"},{\"start\":35335,\"end\":35335,\"offset\":4203230,\"type\":\"offset\"},{\"start\":35360,\"end\":35360,\"offset\":4203230,\"type\":\"offset\"},{\"start\":35450,\"end\":35450,\"offset\":4203235,\"type\":\"offset\"},{\"start\":35663,\"end\":35663,\"offset\":4203240,\"type\":\"offset\"},{\"start\":35688,\"end\":35688,\"offset\":4203240,\"type\":\"offset\"},{\"start\":35779,\"end\":35779,\"offset\":4203245,\"type\":\"offset\"},{\"start\":35990,\"end\":35990,\"offset\":4203250,\"type\":\"offset\"},{\"start\":36015,\"end\":36015,\"offset\":4203250,\"type\":\"offset\"},{\"start\":36105,\"end\":36105,\"offset\":4203255,\"type\":\"offset\"},{\"start\":36322,\"end\":36322,\"offset\":4203260,\"type\":\"offset\"},{\"start\":36347,\"end\":36347,\"offset\":4203260,\"type\":\"offset\"},{\"start\":36440,\"end\":36440,\"offset\":4203265,\"type\":\"offset\"},{\"start\":36657,\"end\":36657,\"offset\":4203270,\"type\":\"offset\"},{\"start\":36682,\"end\":36682,\"offset\":4203270,\"type\":\"offset\"},{\"start\":36775,\"end\":36775,\"offset\":4203275,\"type\":\"offset\"},{\"start\":36984,\"end\":36984,\"offset\":4203280,\"type\":\"offset\"},{\"start\":37009,\"end\":37009,\"offset\":4203280,\"type\":\"offset\"},{\"start\":37098,\"end\":37098,\"offset\":4203285,\"type\":\"offset\"},{\"start\":37323,\"end\":37323,\"offset\":4203290,\"type\":\"offset\"},{\"start\":37348,\"end\":37348,\"offset\":4203290,\"type\":\"offset\"},{\"start\":37445,\"end\":37445,\"offset\":4203295,\"type\":\"offset\"},{\"start\":37501,\"end\":37501,\"offset\":4203300,\"type\":\"offset\"},{\"start\":37529,\"end\":37529,\"offset\":4203300,\"type\":\"offset\"},{\"start\":37555,\"end\":37555,\"offset\":4203305,\"type\":\"offset\"},{\"start\":37772,\"end\":37772,\"offset\":4203310,\"type\":\"offset\"},{\"start\":37797,\"end\":37797,\"offset\":4203310,\"type\":\"offset\"},{\"start\":37890,\"end\":37890,\"offset\":4203315,\"type\":\"offset\"},{\"start\":38108,\"end\":38108,\"offset\":4203320,\"type\":\"offset\"},{\"start\":38133,\"end\":38133,\"offset\":4203320,\"type\":\"offset\"},{\"start\":38227,\"end\":38227,\"offset\":4203325,\"type\":\"offset\"},{\"start\":38432,\"end\":38432,\"offset\":4203330,\"type\":\"offset\"},{\"start\":38457,\"end\":38457,\"offset\":4203330,\"type\":\"offset\"},{\"start\":38544,\"end\":38544,\"offset\":4203335,\"type\":\"offset\"},{\"start\":38699,\"end\":38699,\"offset\":4203340,\"type\":\"offset\"},{\"start\":38724,\"end\":38724,\"offset\":4203340,\"type\":\"offset\"},{\"start\":38786,\"end\":38786,\"offset\":4203345,\"type\":\"offset\"},{\"start\":38842,\"end\":38842,\"offset\":4203350,\"type\":\"offset\"},{\"start\":38870,\"end\":38870,\"offset\":4203350,\"type\":\"offset\"},{\"start\":38896,\"end\":38896,\"offset\":4203355,\"type\":\"offset\"},{\"start\":39115,\"end\":39115,\"offset\":4203360,\"type\":\"offset\"},{\"start\":39140,\"end\":39140,\"offset\":4203360,\"type\":\"offset\"},{\"start\":39234,\"end\":39234,\"offset\":4203365,\"type\":\"offset\"},{\"start\":39451,\"end\":39451,\"offset\":4203370,\"type\":\"offset\"},{\"start\":39476,\"end\":39476,\"offset\":4203370,\"type\":\"offset\"},{\"start\":39569,\"end\":39569,\"offset\":4203375,\"type\":\"offset\"},{\"start\":39784,\"end\":39784,\"offset\":4203380,\"type\":\"offset\"},{\"start\":39809,\"end\":39809,\"offset\":4203380,\"type\":\"offset\"},{\"start\":39901,\"end\":39901,\"offset\":4203385,\"type\":\"offset\"},{\"start\":40032,\"end\":40032,\"offset\":4203390,\"type\":\"offset\"},{\"start\":40057,\"end\":40057,\"offset\":4203390,\"type\":\"offset\"},{\"start\":40107,\"end\":40107,\"offset\":4203395,\"type\":\"offset\"},{\"start\":40163,\"end\":40163,\"offset\":4203400,\"type\":\"offset\"},{\"start\":40191,\"end\":40191,\"offset\":4203400,\"type\":\"offset\"},{\"start\":40217,\"end\":40217,\"offset\":4203405,\"type\":\"offset\"},{\"start\":40432,\"end\":40432,\"offset\":4203410,\"type\":\"offset\"},{\"start\":40457,\"end\":40457,\"offset\":4203410,\"type\":\"offset\"},{\"start\":40549,\"end\":40549,\"offset\":4203415,\"type\":\"offset\"},{\"start\":40766,\"end\":40766,\"offset\":4203420,\"type\":\"offset\"},{\"start\":40791,\"end\":40791,\"offset\":4203420,\"type\":\"offset\"},{\"start\":40884,\"end\":40884,\"offset\":4203425,\"type\":\"offset\"},{\"start\":41103,\"end\":41103,\"offset\":4203430,\"type\":\"offset\"},{\"start\":41128,\"end\":41128,\"offset\":4203430,\"type\":\"offset\"},{\"start\":41222,\"end\":41222,\"offset\":4203435,\"type\":\"offset\"},{\"start\":41278,\"end\":41278,\"offset\":4203440,\"type\":\"offset\"},{\"start\":41306,\"end\":41306,\"offset\":4203440,\"type\":\"offset\"},{\"start\":41332,\"end\":41332,\"offset\":4203445,\"type\":\"offset\"},{\"start\":41547,\"end\":41547,\"offset\":4203450,\"type\":\"offset\"},{\"start\":41572,\"end\":41572,\"offset\":4203450,\"type\":\"offset\"},{\"start\":41664,\"end\":41664,\"offset\":4203455,\"type\":\"offset\"},{\"start\":41883,\"end\":41883,\"offset\":4203460,\"type\":\"offset\"},{\"start\":41908,\"end\":41908,\"offset\":4203460,\"type\":\"offset\"},{\"start\":42002,\"end\":42002,\"offset\":4203465,\"type\":\"offset\"},{\"start\":42234,\"end\":42234,\"offset\":4203470,\"type\":\"offset\"},{\"start\":42259,\"end\":42259,\"offset\":4203470,\"type\":\"offset\"},{\"start\":42360,\"end\":42360,\"offset\":4203475,\"type\":\"offset\"},{\"start\":42416,\"end\":42416,\"offset\":4203480,\"type\":\"offset\"},{\"start\":42444,\"end\":42444,\"offset\":4203480,\"type\":\"offset\"},{\"start\":42470,\"end\":42470,\"offset\":4203485,\"type\":\"offset\"},{\"start\":42681,\"end\":42681,\"offset\":4203490,\"type\":\"offset\"},{\"start\":42706,\"end\":42706,\"offset\":4203490,\"type\":\"offset\"},{\"start\":42796,\"end\":42796,\"offset\":4203495,\"type\":\"offset\"},{\"start\":43007,\"end\":43007,\"offset\":4203500,\"type\":\"offset\"},{\"start\":43032,\"end\":43032,\"offset\":4203500,\"type\":\"offset\"},{\"start\":43122,\"end\":43122,\"offset\":4203505,\"type\":\"offset\"},{\"start\":43331,\"end\":43331,\"offset\":4203510,\"type\":\"offset\"},{\"start\":43356,\"end\":43356,\"offset\":4203510,\"type\":\"offset\"},{\"start\":43445,\"end\":43445,\"offset\":4203515,\"type\":\"offset\"},{\"start\":43654,\"end\":43654,\"offset\":4203520,\"type\":\"offset\"},{\"start\":43679,\"end\":43679,\"offset\":4203520,\"type\":\"offset\"},{\"start\":43768,\"end\":43768,\"offset\":4203525,\"type\":\"offset\"},{\"start\":43985,\"end\":43985,\"offset\":4203530,\"type\":\"offset\"},{\"start\":44010,\"end\":44010,\"offset\":4203530,\"type\":\"offset\"},{\"start\":44103,\"end\":44103,\"offset\":4203535,\"type\":\"offset\"},{\"start\":44283,\"end\":44283,\"offset\":4203540,\"type\":\"offset\"},{\"start\":44308,\"end\":44308,\"offset\":4203540,\"type\":\"offset\"},{\"start\":44383,\"end\":44383,\"offset\":4203545,\"type\":\"offset\"},{\"start\":44439,\"end\":44439,\"offset\":4203550,\"type\":\"offset\"},{\"start\":44467,\"end\":44467,\"offset\":4203550,\"type\":\"offset\"},{\"start\":44493,\"end\":44493,\"offset\":4203555,\"type\":\"offset\"},{\"start\":44710,\"end\":44710,\"offset\":4203560,\"type\":\"offset\"},{\"start\":44735,\"end\":44735,\"offset\":4203560,\"type\":\"offset\"},{\"start\":44828,\"end\":44828,\"offset\":4203565,\"type\":\"offset\"},{\"start\":45039,\"end\":45039,\"offset\":4203570,\"type\":\"offset\"},{\"start\":45064,\"end\":45064,\"offset\":4203570,\"type\":\"offset\"},{\"start\":45154,\"end\":45154,\"offset\":4203575,\"type\":\"offset\"},{\"start\":45359,\"end\":45359,\"offset\":4203580,\"type\":\"offset\"},{\"start\":45384,\"end\":45384,\"offset\":4203580,\"type\":\"offset\"},{\"start\":45471,\"end\":45471,\"offset\":4203585,\"type\":\"offset\"},{\"start\":45686,\"end\":45686,\"offset\":4203590,\"type\":\"offset\"},{\"start\":45711,\"end\":45711,\"offset\":4203590,\"type\":\"offset\"},{\"start\":45803,\"end\":45803,\"offset\":4203595,\"type\":\"offset\"},{\"start\":45980,\"end\":45980,\"offset\":4203600,\"type\":\"offset\"},{\"start\":46005,\"end\":46005,\"offset\":4203600,\"type\":\"offset\"},{\"start\":46078,\"end\":46078,\"offset\":4203605,\"type\":\"offset\"},{\"start\":46134,\"end\":46134,\"offset\":4203610,\"type\":\"offset\"},{\"start\":46162,\"end\":46162,\"offset\":4203610,\"type\":\"offset\"},{\"start\":46188,\"end\":46188,\"offset\":4203615,\"type\":\"offset\"},{\"start\":46401,\"end\":46401,\"offset\":4203620,\"type\":\"offset\"},{\"start\":46426,\"end\":46426,\"offset\":4203620,\"type\":\"offset\"},{\"start\":46517,\"end\":46517,\"offset\":4203625,\"type\":\"offset\"},{\"start\":46732,\"end\":46732,\"offset\":4203630,\"type\":\"offset\"},{\"start\":46757,\"end\":46757,\"offset\":4203630,\"type\":\"offset\"},{\"start\":46849,\"end\":46849,\"offset\":4203635,\"type\":\"offset\"},{\"start\":47064,\"end\":47064,\"offset\":4203640,\"type\":\"offset\"},{\"start\":47089,\"end\":47089,\"offset\":4203640,\"type\":\"offset\"},{\"start\":47181,\"end\":47181,\"offset\":4203645,\"type\":\"offset\"},{\"start\":47386,\"end\":47386,\"offset\":4203650,\"type\":\"offset\"},{\"start\":47411,\"end\":47411,\"offset\":4203650,\"type\":\"offset\"},{\"start\":47498,\"end\":47498,\"offset\":4203655,\"type\":\"offset\"},{\"start\":47717,\"end\":47717,\"offset\":4203660,\"type\":\"offset\"},{\"start\":47742,\"end\":47742,\"offset\":4203660,\"type\":\"offset\"},{\"start\":47836,\"end\":47836,\"offset\":4203665,\"type\":\"offset\"},{\"start\":48041,\"end\":48041,\"offset\":4203670,\"type\":\"offset\"},{\"start\":48066,\"end\":48066,\"offset\":4203670,\"type\":\"offset\"},{\"start\":48153,\"end\":48153,\"offset\":4203675,\"type\":\"offset\"},{\"start\":48362,\"end\":48362,\"offset\":4203680,\"type\":\"offset\"},{\"start\":48387,\"end\":48387,\"offset\":4203680,\"type\":\"offset\"},{\"start\":48476,\"end\":48476,\"offset\":4203685,\"type\":\"offset\"},{\"start\":48691,\"end\":48691,\"offset\":4203690,\"type\":\"offset\"},{\"start\":48716,\"end\":48716,\"offset\":4203690,\"type\":\"offset\"},{\"start\":48808,\"end\":48808,\"offset\":4203695,\"type\":\"offset\"},{\"start\":49023,\"end\":49023,\"offset\":4203700,\"type\":\"offset\"},{\"start\":49048,\"end\":49048,\"offset\":4203700,\"type\":\"offset\"},{\"start\":49140,\"end\":49140,\"offset\":4203705,\"type\":\"offset\"},{\"start\":49287,\"end\":49287,\"offset\":4203710,\"type\":\"offset\"},{\"start\":49312,\"end\":49312,\"offset\":4203710,\"type\":\"offset\"},{\"start\":49370,\"end\":49370,\"offset\":4203715,\"type\":\"offset\"},{\"start\":49426,\"end\":49426,\"offset\":4203720,\"type\":\"offset\"},{\"start\":49454,\"end\":49454,\"offset\":4203720,\"type\":\"offset\"},{\"start\":49480,\"end\":49480,\"offset\":4203725,\"type\":\"offset\"},{\"start\":49687,\"end\":49687,\"offset\":4203730,\"type\":\"offset\"},{\"start\":49712,\"end\":49712,\"offset\":4203730,\"type\":\"offset\"},{\"start\":49800,\"end\":49800,\"offset\":4203735,\"type\":\"offset\"},{\"start\":50007,\"end\":50007,\"offset\":4203740,\"type\":\"offset\"},{\"start\":50032,\"end\":50032,\"offset\":4203740,\"type\":\"offset\"},{\"start\":50120,\"end\":50120,\"offset\":4203745,\"type\":\"offset\"},{\"start\":50319,\"end\":50319,\"offset\":4203750,\"type\":\"offset\"},{\"start\":50344,\"end\":50344,\"offset\":4203750,\"type\":\"offset\"},{\"start\":50428,\"end\":50428,\"offset\":4203755,\"type\":\"offset\"},{\"start\":50639,\"end\":50639,\"offset\":4203760,\"type\":\"offset\"},{\"start\":50664,\"end\":50664,\"offset\":4203760,\"type\":\"offset\"},{\"start\":50754,\"end\":50754,\"offset\":4203765,\"type\":\"offset\"},{\"start\":50945,\"end\":50945,\"offset\":4203770,\"type\":\"offset\"},{\"start\":50970,\"end\":50970,\"offset\":4203770,\"type\":\"offset\"},{\"start\":51050,\"end\":51050,\"offset\":4203775,\"type\":\"offset\"},{\"start\":51115,\"end\":51115,\"offset\":4203780,\"type\":\"offset\"},{\"start\":51140,\"end\":51140,\"offset\":4203780,\"type\":\"offset\"},{\"start\":51166,\"end\":51166,\"offset\":4203785,\"type\":\"offset\"},{\"start\":51381,\"end\":51381,\"offset\":4203790,\"type\":\"offset\"},{\"start\":51406,\"end\":51406,\"offset\":4203790,\"type\":\"offset\"},{\"start\":51498,\"end\":51498,\"offset\":4203795,\"type\":\"offset\"},{\"start\":51699,\"end\":51699,\"offset\":4203800,\"type\":\"offset\"},{\"start\":51724,\"end\":51724,\"offset\":4203800,\"type\":\"offset\"},{\"start\":51809,\"end\":51809,\"offset\":4203805,\"type\":\"offset\"},{\"start\":52020,\"end\":52020,\"offset\":4203810,\"type\":\"offset\"},{\"start\":52045,\"end\":52045,\"offset\":4203810,\"type\":\"offset\"},{\"start\":52135,\"end\":52135,\"offset\":4203815,\"type\":\"offset\"},{\"start\":52354,\"end\":52354,\"offset\":4203820,\"type\":\"offset\"},{\"start\":52379,\"end\":52379,\"offset\":4203820,\"type\":\"offset\"},{\"start\":52473,\"end\":52473,\"offset\":4203825,\"type\":\"offset\"},{\"start\":52688,\"end\":52688,\"offset\":4203830,\"type\":\"offset\"},{\"start\":52713,\"end\":52713,\"offset\":4203830,\"type\":\"offset\"},{\"start\":52805,\"end\":52805,\"offset\":4203835,\"type\":\"offset\"},{\"start\":53020,\"end\":53020,\"offset\":4203840,\"type\":\"offset\"},{\"start\":53045,\"end\":53045,\"offset\":4203840,\"type\":\"offset\"},{\"start\":53137,\"end\":53137,\"offset\":4203845,\"type\":\"offset\"},{\"start\":53284,\"end\":53284,\"offset\":4203850,\"type\":\"offset\"},{\"start\":53309,\"end\":53309,\"offset\":4203850,\"type\":\"offset\"},{\"start\":53367,\"end\":53367,\"offset\":4203855,\"type\":\"offset\"},{\"start\":53423,\"end\":53423,\"offset\":4203860,\"type\":\"offset\"},{\"start\":53451,\"end\":53451,\"offset\":4203860,\"type\":\"offset\"},{\"start\":53477,\"end\":53477,\"offset\":4203865,\"type\":\"offset\"},{\"start\":53692,\"end\":53692,\"offset\":4203870,\"type\":\"offset\"},{\"start\":53717,\"end\":53717,\"offset\":4203870,\"type\":\"offset\"},{\"start\":53809,\"end\":53809,\"offset\":4203875,\"type\":\"offset\"},{\"start\":54024,\"end\":54024,\"offset\":4203880,\"type\":\"offset\"},{\"start\":54049,\"end\":54049,\"offset\":4203880,\"type\":\"offset\"},{\"start\":54141,\"end\":54141,\"offset\":4203885,\"type\":\"offset\"},{\"start\":54352,\"end\":54352,\"offset\":4203890,\"type\":\"offset\"},{\"start\":54377,\"end\":54377,\"offset\":4203890,\"type\":\"offset\"},{\"start\":54467,\"end\":54467,\"offset\":4203895,\"type\":\"offset\"},{\"start\":54680,\"end\":54680,\"offset\":4203900,\"type\":\"offset\"},{\"start\":54705,\"end\":54705,\"offset\":4203900,\"type\":\"offset\"},{\"start\":54796,\"end\":54796,\"offset\":4203905,\"type\":\"offset\"},{\"start\":55001,\"end\":55001,\"offset\":4203910,\"type\":\"offset\"},{\"start\":55026,\"end\":55026,\"offset\":4203910,\"type\":\"offset\"},{\"start\":55113,\"end\":55113,\"offset\":4203915,\"type\":\"offset\"},{\"start\":55328,\"end\":55328,\"offset\":4203920,\"type\":\"offset\"},{\"start\":55353,\"end\":55353,\"offset\":4203920,\"type\":\"offset\"},{\"start\":55445,\"end\":55445,\"offset\":4203925,\"type\":\"offset\"},{\"start\":55658,\"end\":55658,\"offset\":4203930,\"type\":\"offset\"},{\"start\":55683,\"end\":55683,\"offset\":4203930,\"type\":\"offset\"},{\"start\":55774,\"end\":55774,\"offset\":4203935,\"type\":\"offset\"},{\"start\":55919,\"end\":55919,\"offset\":4203940,\"type\":\"offset\"},{\"start\":55944,\"end\":55944,\"offset\":4203940,\"type\":\"offset\"},{\"start\":56001,\"end\":56001,\"offset\":4203945,\"type\":\"offset\"},{\"start\":56057,\"end\":56057,\"offset\":4203950,\"type\":\"offset\"},{\"start\":56085,\"end\":56085,\"offset\":4203950,\"type\":\"offset\"},{\"start\":56111,\"end\":56111,\"offset\":4203955,\"type\":\"offset\"},{\"start\":56328,\"end\":56328,\"offset\":4203960,\"type\":\"offset\"},{\"start\":56353,\"end\":56353,\"offset\":4203960,\"type\":\"offset\"},{\"start\":56446,\"end\":56446,\"offset\":4203965,\"type\":\"offset\"},{\"start\":56655,\"end\":56655,\"offset\":4203970,\"type\":\"offset\"},{\"start\":56680,\"end\":56680,\"offset\":4203970,\"type\":\"offset\"},{\"start\":56769,\"end\":56769,\"offset\":4203975,\"type\":\"offset\"},{\"start\":56988,\"end\":56988,\"offset\":4203980,\"type\":\"offset\"},{\"start\":57013,\"end\":57013,\"offset\":4203980,\"type\":\"offset\"},{\"start\":57107,\"end\":57107,\"offset\":4203985,\"type\":\"offset\"},{\"start\":57304,\"end\":57304,\"offset\":4203990,\"type\":\"offset\"},{\"start\":57329,\"end\":57329,\"offset\":4203990,\"type\":\"offset\"},{\"start\":57412,\"end\":57412,\"offset\":4203995,\"type\":\"offset\"},{\"start\":57630,\"end\":57630,\"offset\":4204000,\"type\":\"offset\"},{\"start\":57655,\"end\":57655,\"offset\":4204000,\"type\":\"offset\"},{\"start\":57749,\"end\":57749,\"offset\":4204005,\"type\":\"offset\"},{\"start\":57964,\"end\":57964,\"offset\":4204010,\"type\":\"offset\"},{\"start\":57989,\"end\":57989,\"offset\":4204010,\"type\":\"offset\"},{\"start\":58081,\"end\":58081,\"offset\":4204015,\"type\":\"offset\"},{\"start\":58165,\"end\":58165,\"offset\":4204020,\"type\":\"offset\"},{\"start\":58190,\"end\":58190,\"offset\":4204020,\"type\":\"offset\"},{\"start\":58227,\"end\":58227,\"offset\":4204025,\"type\":\"offset\"},{\"start\":58283,\"end\":58283,\"offset\":4204030,\"type\":\"offset\"},{\"start\":58311,\"end\":58311,\"offset\":4204030,\"type\":\"offset\"},{\"start\":58337,\"end\":58337,\"offset\":4204035,\"type\":\"offset\"},{\"start\":58554,\"end\":58554,\"offset\":4204040,\"type\":\"offset\"},{\"start\":58579,\"end\":58579,\"offset\":4204040,\"type\":\"offset\"},{\"start\":58672,\"end\":58672,\"offset\":4204045,\"type\":\"offset\"},{\"start\":58887,\"end\":58887,\"offset\":4204050,\"type\":\"offset\"},{\"start\":58912,\"end\":58912,\"offset\":4204050,\"type\":\"offset\"},{\"start\":59004,\"end\":59004,\"offset\":4204055,\"type\":\"offset\"},{\"start\":59217,\"end\":59217,\"offset\":4204060,\"type\":\"offset\"},{\"start\":59242,\"end\":59242,\"offset\":4204060,\"type\":\"offset\"},{\"start\":59333,\"end\":59333,\"offset\":4204065,\"type\":\"offset\"},{\"start\":59552,\"end\":59552,\"offset\":4204070,\"type\":\"offset\"},{\"start\":59577,\"end\":59577,\"offset\":4204070,\"type\":\"offset\"},{\"start\":59671,\"end\":59671,\"offset\":4204075,\"type\":\"offset\"},{\"start\":59874,\"end\":59874,\"offset\":4204080,\"type\":\"offset\"},{\"start\":59899,\"end\":59899,\"offset\":4204080,\"type\":\"offset\"},{\"start\":59985,\"end\":59985,\"offset\":4204085,\"type\":\"offset\"},{\"start\":60204,\"end\":60204,\"offset\":4204090,\"type\":\"offset\"},{\"start\":60229,\"end\":60229,\"offset\":4204090,\"type\":\"offset\"},{\"start\":60323,\"end\":60323,\"offset\":4204095,\"type\":\"offset\"},{\"start\":60542,\"end\":60542,\"offset\":4204100,\"type\":\"offset\"},{\"start\":60567,\"end\":60567,\"offset\":4204100,\"type\":\"offset\"},{\"start\":60661,\"end\":60661,\"offset\":4204105,\"type\":\"offset\"},{\"start\":60868,\"end\":60868,\"offset\":4204110,\"type\":\"offset\"},{\"start\":60893,\"end\":60893,\"offset\":4204110,\"type\":\"offset\"},{\"start\":60981,\"end\":60981,\"offset\":4204115,\"type\":\"offset\"},{\"start\":61200,\"end\":61200,\"offset\":4204120,\"type\":\"offset\"},{\"start\":61225,\"end\":61225,\"offset\":4204120,\"type\":\"offset\"},{\"start\":61319,\"end\":61319,\"offset\":4204125,\"type\":\"offset\"},{\"start\":61536,\"end\":61536,\"offset\":4204130,\"type\":\"offset\"},{\"start\":61561,\"end\":61561,\"offset\":4204130,\"type\":\"offset\"},{\"start\":61654,\"end\":61654,\"offset\":4204135,\"type\":\"offset\"},{\"start\":61867,\"end\":61867,\"offset\":4204140,\"type\":\"offset\"},{\"start\":61892,\"end\":61892,\"offset\":4204140,\"type\":\"offset\"},{\"start\":61983,\"end\":61983,\"offset\":4204145,\"type\":\"offset\"},{\"start\":62162,\"end\":62162,\"offset\":4204150,\"type\":\"offset\"},{\"start\":62187,\"end\":62187,\"offset\":4204150,\"type\":\"offset\"},{\"start\":62261,\"end\":62261,\"offset\":4204155,\"type\":\"offset\"},{\"start\":62317,\"end\":62317,\"offset\":4204160,\"type\":\"offset\"},{\"start\":62345,\"end\":62345,\"offset\":4204160,\"type\":\"offset\"},{\"start\":62371,\"end\":62371,\"offset\":4204165,\"type\":\"offset\"},{\"start\":62588,\"end\":62588,\"offset\":4204170,\"type\":\"offset\"},{\"start\":62613,\"end\":62613,\"offset\":4204170,\"type\":\"offset\"},{\"start\":62706,\"end\":62706,\"offset\":4204175,\"type\":\"offset\"},{\"start\":62925,\"end\":62925,\"offset\":4204180,\"type\":\"offset\"},{\"start\":62950,\"end\":62950,\"offset\":4204180,\"type\":\"offset\"},{\"start\":63044,\"end\":63044,\"offset\":4204185,\"type\":\"offset\"},{\"start\":63247,\"end\":63247,\"offset\":4204190,\"type\":\"offset\"},{\"start\":63272,\"end\":63272,\"offset\":4204190,\"type\":\"offset\"},{\"start\":63358,\"end\":63358,\"offset\":4204195,\"type\":\"offset\"},{\"start\":63465,\"end\":63465,\"offset\":4204200,\"type\":\"offset\"},{\"start\":63490,\"end\":63490,\"offset\":4204200,\"type\":\"offset\"},{\"start\":63528,\"end\":63528,\"offset\":4204205,\"type\":\"offset\"},{\"start\":63584,\"end\":63584,\"offset\":4204210,\"type\":\"offset\"},{\"start\":63612,\"end\":63612,\"offset\":4204210,\"type\":\"offset\"},{\"start\":63638,\"end\":63638,\"offset\":4204215,\"type\":\"offset\"},{\"start\":63851,\"end\":63851,\"offset\":4204220,\"type\":\"offset\"},{\"start\":63876,\"end\":63876,\"offset\":4204220,\"type\":\"offset\"},{\"start\":63967,\"end\":63967,\"offset\":4204225,\"type\":\"offset\"},{\"start\":64182,\"end\":64182,\"offset\":4204230,\"type\":\"offset\"},{\"start\":64207,\"end\":64207,\"offset\":4204230,\"type\":\"offset\"},{\"start\":64299,\"end\":64299,\"offset\":4204235,\"type\":\"offset\"},{\"start\":64507,\"end\":64507,\"offset\":4204240,\"type\":\"offset\"},{\"start\":64532,\"end\":64532,\"offset\":4204240,\"type\":\"offset\"},{\"start\":64621,\"end\":64621,\"offset\":4204245,\"type\":\"offset\"},{\"start\":64820,\"end\":64820,\"offset\":4204250,\"type\":\"offset\"},{\"start\":64845,\"end\":64845,\"offset\":4204250,\"type\":\"offset\"},{\"start\":64929,\"end\":64929,\"offset\":4204255,\"type\":\"offset\"},{\"start\":65134,\"end\":65134,\"offset\":4204260,\"type\":\"offset\"},{\"start\":65159,\"end\":65159,\"offset\":4204260,\"type\":\"offset\"},{\"start\":65246,\"end\":65246,\"offset\":4204265,\"type\":\"offset\"},{\"start\":65453,\"end\":65453,\"offset\":4204270,\"type\":\"offset\"},{\"start\":65478,\"end\":65478,\"offset\":4204270,\"type\":\"offset\"},{\"start\":65566,\"end\":65566,\"offset\":4204275,\"type\":\"offset\"},{\"start\":65775,\"end\":65775,\"offset\":4204280,\"type\":\"offset\"},{\"start\":65800,\"end\":65800,\"offset\":4204280,\"type\":\"offset\"},{\"start\":65889,\"end\":65889,\"offset\":4204285,\"type\":\"offset\"},{\"start\":66109,\"end\":66109,\"offset\":4204290,\"type\":\"offset\"},{\"start\":66134,\"end\":66134,\"offset\":4204290,\"type\":\"offset\"},{\"start\":66229,\"end\":66229,\"offset\":4204295,\"type\":\"offset\"},{\"start\":66446,\"end\":66446,\"offset\":4204300,\"type\":\"offset\"},{\"start\":66471,\"end\":66471,\"offset\":4204300,\"type\":\"offset\"},{\"start\":66564,\"end\":66564,\"offset\":4204305,\"type\":\"offset\"},{\"start\":66681,\"end\":66681,\"offset\":4204310,\"type\":\"offset\"},{\"start\":66706,\"end\":66706,\"offset\":4204310,\"type\":\"offset\"},{\"start\":66749,\"end\":66749,\"offset\":4204315,\"type\":\"offset\"},{\"start\":66805,\"end\":66805,\"offset\":4204320,\"type\":\"offset\"},{\"start\":66833,\"end\":66833,\"offset\":4204320,\"type\":\"offset\"},{\"start\":66859,\"end\":66859,\"offset\":4204325,\"type\":\"offset\"},{\"start\":67076,\"end\":67076,\"offset\":4204330,\"type\":\"offset\"},{\"start\":67101,\"end\":67101,\"offset\":4204330,\"type\":\"offset\"},{\"start\":67194,\"end\":67194,\"offset\":4204335,\"type\":\"offset\"},{\"start\":67363,\"end\":67363,\"offset\":4204340,\"type\":\"offset\"},{\"start\":67388,\"end\":67388,\"offset\":4204340,\"type\":\"offset\"},{\"start\":67457,\"end\":67457,\"offset\":4204345,\"type\":\"offset\"},{\"start\":67522,\"end\":67522,\"offset\":4204350,\"type\":\"offset\"},{\"start\":67547,\"end\":67547,\"offset\":4204350,\"type\":\"offset\"},{\"start\":67573,\"end\":67573,\"offset\":4204355,\"type\":\"offset\"},{\"start\":67786,\"end\":67786,\"offset\":4204360,\"type\":\"offset\"},{\"start\":67811,\"end\":67811,\"offset\":4204360,\"type\":\"offset\"},{\"start\":67902,\"end\":67902,\"offset\":4204365,\"type\":\"offset\"},{\"start\":68119,\"end\":68119,\"offset\":4204370,\"type\":\"offset\"},{\"start\":68144,\"end\":68144,\"offset\":4204370,\"type\":\"offset\"},{\"start\":68237,\"end\":68237,\"offset\":4204375,\"type\":\"offset\"},{\"start\":68450,\"end\":68450,\"offset\":4204380,\"type\":\"offset\"},{\"start\":68475,\"end\":68475,\"offset\":4204380,\"type\":\"offset\"},{\"start\":68566,\"end\":68566,\"offset\":4204385,\"type\":\"offset\"},{\"start\":68777,\"end\":68777,\"offset\":4204390,\"type\":\"offset\"},{\"start\":68802,\"end\":68802,\"offset\":4204390,\"type\":\"offset\"},{\"start\":68892,\"end\":68892,\"offset\":4204395,\"type\":\"offset\"},{\"start\":69105,\"end\":69105,\"offset\":4204400,\"type\":\"offset\"},{\"start\":69130,\"end\":69130,\"offset\":4204400,\"type\":\"offset\"},{\"start\":69221,\"end\":69221,\"offset\":4204405,\"type\":\"offset\"},{\"start\":69438,\"end\":69438,\"offset\":4204410,\"type\":\"offset\"},{\"start\":69463,\"end\":69463,\"offset\":4204410,\"type\":\"offset\"},{\"start\":69556,\"end\":69556,\"offset\":4204415,\"type\":\"offset\"},{\"start\":69749,\"end\":69749,\"offset\":4204420,\"type\":\"offset\"},{\"start\":69774,\"end\":69774,\"offset\":4204420,\"type\":\"offset\"},{\"start\":69855,\"end\":69855,\"offset\":4204425,\"type\":\"offset\"},{\"start\":69911,\"end\":69911,\"offset\":4204430,\"type\":\"offset\"},{\"start\":69939,\"end\":69939,\"offset\":4204430,\"type\":\"offset\"},{\"start\":69965,\"end\":69965,\"offset\":4204435,\"type\":\"offset\"},{\"start\":70190,\"end\":70190,\"offset\":4204440,\"type\":\"offset\"},{\"start\":70215,\"end\":70215,\"offset\":4204440,\"type\":\"offset\"},{\"start\":70312,\"end\":70312,\"offset\":4204445,\"type\":\"offset\"},{\"start\":70535,\"end\":70535,\"offset\":4204450,\"type\":\"offset\"},{\"start\":70560,\"end\":70560,\"offset\":4204450,\"type\":\"offset\"},{\"start\":70656,\"end\":70656,\"offset\":4204455,\"type\":\"offset\"},{\"start\":70895,\"end\":70895,\"offset\":4204460,\"type\":\"offset\"},{\"start\":70920,\"end\":70920,\"offset\":4204460,\"type\":\"offset\"},{\"start\":71024,\"end\":71024,\"offset\":4204465,\"type\":\"offset\"},{\"start\":71169,\"end\":71169,\"offset\":4204470,\"type\":\"offset\"},{\"start\":71194,\"end\":71194,\"offset\":4204470,\"type\":\"offset\"},{\"start\":71251,\"end\":71251,\"offset\":4204475,\"type\":\"offset\"},{\"start\":71307,\"end\":71307,\"offset\":4204480,\"type\":\"offset\"},{\"start\":71335,\"end\":71335,\"offset\":4204480,\"type\":\"offset\"},{\"start\":71361,\"end\":71361,\"offset\":4204485,\"type\":\"offset\"},{\"start\":71612,\"end\":71612,\"offset\":4204490,\"type\":\"offset\"},{\"start\":71637,\"end\":71637,\"offset\":4204490,\"type\":\"offset\"},{\"start\":71747,\"end\":71747,\"offset\":4204495,\"type\":\"offset\"},{\"start\":71985,\"end\":71985,\"offset\":4204500,\"type\":\"offset\"},{\"start\":72010,\"end\":72010,\"offset\":4204500,\"type\":\"offset\"},{\"start\":72114,\"end\":72114,\"offset\":4204505,\"type\":\"offset\"},{\"start\":72356,\"end\":72356,\"offset\":4204510,\"type\":\"offset\"},{\"start\":72381,\"end\":72381,\"offset\":4204510,\"type\":\"offset\"},{\"start\":72487,\"end\":72487,\"offset\":4204515,\"type\":\"offset\"},{\"start\":72734,\"end\":72734,\"offset\":4204520,\"type\":\"offset\"},{\"start\":72759,\"end\":72759,\"offset\":4204520,\"type\":\"offset\"},{\"start\":72867,\"end\":72867,\"offset\":4204525,\"type\":\"offset\"},{\"start\":73108,\"end\":73108,\"offset\":4204530,\"type\":\"offset\"},{\"start\":73133,\"end\":73133,\"offset\":4204530,\"type\":\"offset\"},{\"start\":73238,\"end\":73238,\"offset\":4204535,\"type\":\"offset\"},{\"start\":73485,\"end\":73485,\"offset\":4204540,\"type\":\"offset\"},{\"start\":73510,\"end\":73510,\"offset\":4204540,\"type\":\"offset\"},{\"start\":73618,\"end\":73618,\"offset\":4204545,\"type\":\"offset\"},{\"start\":73719,\"end\":73719,\"offset\":4204550,\"type\":\"offset\"},{\"start\":73744,\"end\":73744,\"offset\":4204550,\"type\":\"offset\"},{\"start\":73779,\"end\":73779,\"offset\":4204555,\"type\":\"offset\"},{\"start\":73835,\"end\":73835,\"offset\":4204560,\"type\":\"offset\"},{\"start\":73863,\"end\":73863,\"offset\":4204560,\"type\":\"offset\"},{\"start\":73889,\"end\":73889,\"offset\":4204565,\"type\":\"offset\"},{\"start\":74106,\"end\":74106,\"offset\":4204570,\"type\":\"offset\"},{\"start\":74131,\"end\":74131,\"offset\":4204570,\"type\":\"offset\"},{\"start\":74224,\"end\":74224,\"offset\":4204575,\"type\":\"offset\"},{\"start\":74449,\"end\":74449,\"offset\":4204580,\"type\":\"offset\"},{\"start\":74474,\"end\":74474,\"offset\":4204580,\"type\":\"offset\"},{\"start\":74571,\"end\":74571,\"offset\":4204585,\"type\":\"offset\"},{\"start\":74788,\"end\":74788,\"offset\":4204590,\"type\":\"offset\"},{\"start\":74813,\"end\":74813,\"offset\":4204590,\"type\":\"offset\"},{\"start\":74906,\"end\":74906,\"offset\":4204595,\"type\":\"offset\"},{\"start\":75130,\"end\":75130,\"offset\":4204600,\"type\":\"offset\"},{\"start\":75155,\"end\":75155,\"offset\":4204600,\"type\":\"offset\"},{\"start\":75252,\"end\":75252,\"offset\":4204605,\"type\":\"offset\"},{\"start\":75473,\"end\":75473,\"offset\":4204610,\"type\":\"offset\"},{\"start\":75498,\"end\":75498,\"offset\":4204610,\"type\":\"offset\"},{\"start\":75593,\"end\":75593,\"offset\":4204615,\"type\":\"offset\"},{\"start\":75818,\"end\":75818,\"offset\":4204620,\"type\":\"offset\"},{\"start\":75843,\"end\":75843,\"offset\":4204620,\"type\":\"offset\"},{\"start\":75940,\"end\":75940,\"offset\":4204625,\"type\":\"offset\"},{\"start\":76133,\"end\":76133,\"offset\":4204630,\"type\":\"offset\"},{\"start\":76158,\"end\":76158,\"offset\":4204630,\"type\":\"offset\"},{\"start\":76239,\"end\":76239,\"offset\":4204635,\"type\":\"offset\"},{\"start\":76295,\"end\":76295,\"offset\":4204640,\"type\":\"offset\"},{\"start\":76323,\"end\":76323,\"offset\":4204640,\"type\":\"offset\"},{\"start\":76349,\"end\":76349,\"offset\":4204645,\"type\":\"offset\"},{\"start\":76470,\"end\":76470,\"offset\":4204650,\"type\":\"offset\"},{\"start\":76495,\"end\":76495,\"offset\":4204650,\"type\":\"offset\"},{\"start\":76540,\"end\":76540,\"offset\":4204655,\"type\":\"offset\"},{\"start\":76596,\"end\":76596,\"offset\":4204660,\"type\":\"offset\"},{\"start\":76624,\"end\":76624,\"offset\":4204660,\"type\":\"offset\"},{\"start\":76650,\"end\":76650,\"offset\":4204665,\"type\":\"offset\"},{\"start\":76877,\"end\":76877,\"offset\":4204670,\"type\":\"offset\"},{\"start\":76902,\"end\":76902,\"offset\":4204670,\"type\":\"offset\"},{\"start\":77000,\"end\":77000,\"offset\":4204675,\"type\":\"offset\"},{\"start\":77223,\"end\":77223,\"offset\":4204680,\"type\":\"offset\"},{\"start\":77248,\"end\":77248,\"offset\":4204680,\"type\":\"offset\"},{\"start\":77344,\"end\":77344,\"offset\":4204685,\"type\":\"offset\"},{\"start\":77563,\"end\":77563,\"offset\":4204690,\"type\":\"offset\"},{\"start\":77588,\"end\":77588,\"offset\":4204690,\"type\":\"offset\"},{\"start\":77682,\"end\":77682,\"offset\":4204695,\"type\":\"offset\"},{\"start\":77911,\"end\":77911,\"offset\":4204700,\"type\":\"offset\"},{\"start\":77936,\"end\":77936,\"offset\":4204700,\"type\":\"offset\"},{\"start\":78036,\"end\":78036,\"offset\":4204705,\"type\":\"offset\"},{\"start\":78251,\"end\":78251,\"offset\":4204710,\"type\":\"offset\"},{\"start\":78276,\"end\":78276,\"offset\":4204710,\"type\":\"offset\"},{\"start\":78368,\"end\":78368,\"offset\":4204715,\"type\":\"offset\"},{\"start\":78593,\"end\":78593,\"offset\":4204720,\"type\":\"offset\"},{\"start\":78618,\"end\":78618,\"offset\":4204720,\"type\":\"offset\"},{\"start\":78715,\"end\":78715,\"offset\":4204725,\"type\":\"offset\"},{\"start\":78934,\"end\":78934,\"offset\":4204730,\"type\":\"offset\"},{\"start\":78959,\"end\":78959,\"offset\":4204730,\"type\":\"offset\"},{\"start\":79053,\"end\":79053,\"offset\":4204735,\"type\":\"offset\"},{\"start\":79276,\"end\":79276,\"offset\":4204740,\"type\":\"offset\"},{\"start\":79301,\"end\":79301,\"offset\":4204740,\"type\":\"offset\"},{\"start\":79397,\"end\":79397,\"offset\":4204745,\"type\":\"offset\"},{\"start\":79518,\"end\":79518,\"offset\":4204750,\"type\":\"offset\"},{\"start\":79543,\"end\":79543,\"offset\":4204750,\"type\":\"offset\"},{\"start\":79588,\"end\":79588,\"offset\":4204755,\"type\":\"offset\"},{\"start\":79644,\"end\":79644,\"offset\":4204760,\"type\":\"offset\"},{\"start\":79672,\"end\":79672,\"offset\":4204760,\"type\":\"offset\"},{\"start\":79698,\"end\":79698,\"offset\":4204765,\"type\":\"offset\"},{\"start\":79927,\"end\":79927,\"offset\":4204770,\"type\":\"offset\"},{\"start\":79952,\"end\":79952,\"offset\":4204770,\"type\":\"offset\"},{\"start\":80051,\"end\":80051,\"offset\":4204775,\"type\":\"offset\"},{\"start\":80264,\"end\":80264,\"offset\":4204780,\"type\":\"offset\"},{\"start\":80289,\"end\":80289,\"offset\":4204780,\"type\":\"offset\"},{\"start\":80380,\"end\":80380,\"offset\":4204785,\"type\":\"offset\"},{\"start\":80607,\"end\":80607,\"offset\":4204790,\"type\":\"offset\"},{\"start\":80632,\"end\":80632,\"offset\":4204790,\"type\":\"offset\"},{\"start\":80730,\"end\":80730,\"offset\":4204795,\"type\":\"offset\"},{\"start\":80959,\"end\":80959,\"offset\":4204800,\"type\":\"offset\"},{\"start\":80984,\"end\":80984,\"offset\":4204800,\"type\":\"offset\"},{\"start\":81083,\"end\":81083,\"offset\":4204805,\"type\":\"offset\"},{\"start\":81308,\"end\":81308,\"offset\":4204810,\"type\":\"offset\"},{\"start\":81333,\"end\":81333,\"offset\":4204810,\"type\":\"offset\"},{\"start\":81430,\"end\":81430,\"offset\":4204815,\"type\":\"offset\"},{\"start\":81653,\"end\":81653,\"offset\":4204820,\"type\":\"offset\"},{\"start\":81678,\"end\":81678,\"offset\":4204820,\"type\":\"offset\"},{\"start\":81774,\"end\":81774,\"offset\":4204825,\"type\":\"offset\"},{\"start\":82001,\"end\":82001,\"offset\":4204830,\"type\":\"offset\"},{\"start\":82026,\"end\":82026,\"offset\":4204830,\"type\":\"offset\"},{\"start\":82124,\"end\":82124,\"offset\":4204835,\"type\":\"offset\"},{\"start\":82341,\"end\":82341,\"offset\":4204840,\"type\":\"offset\"},{\"start\":82366,\"end\":82366,\"offset\":4204840,\"type\":\"offset\"},{\"start\":82459,\"end\":82459,\"offset\":4204845,\"type\":\"offset\"},{\"start\":82594,\"end\":82594,\"offset\":4204850,\"type\":\"offset\"},{\"start\":82619,\"end\":82619,\"offset\":4204850,\"type\":\"offset\"},{\"start\":82671,\"end\":82671,\"offset\":4204855,\"type\":\"offset\"},{\"start\":82727,\"end\":82727,\"offset\":4204860,\"type\":\"offset\"},{\"start\":82755,\"end\":82755,\"offset\":4204860,\"type\":\"offset\"},{\"start\":82781,\"end\":82781,\"offset\":4204865,\"type\":\"offset\"},{\"start\":82915,\"end\":82915,\"offset\":4204870,\"type\":\"offset\"},{\"start\":82962,\"end\":82962,\"offset\":4204874,\"type\":\"offset\"},{\"start\":83045,\"end\":83045,\"offset\":4204874,\"type\":\"offset\"}],\"code\":\"int dbg.print_copyright (int esi, int edx) {\\n    loc_0x401e20:\\n        // CALL XREF from dbg.main @ 0x400a0b(x)\\n        rsp -= 8      // print_copyright.c:6 // void print_copyright(char const * s)//\\n        rsi = rdi     // arg1\\n        eax = 0       // print_copyright.c:7\\n        edi = str.Copyright__C___s._Dr._David_Kirkby__PhD__G8WRB_._n // 0x404dc8 // \\\"Copyright (C) %s. Dr. David Kirkby, PhD (G8WRB).\\\\n\\\" // const char *format\\n        sym.imp.printf  ()\\n        // int printf(\\\"Copyright (C) %s. Dr. David Kirkby, PhD (G8WRB).\\\\n\\\")\\n        edi = str.Dr._David_Kirkby__e_mail_drkirkby_at_gmail.com_ // print_copyright.c:8 // 0x404e00 // \\\"Dr. David Kirkby, e-mail drkirkby at gmail.com \\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Dr. David Kirkby, e-mail drkirkby at gmail.com \\\")\\n        edi = str.Stokes_Hall_Lodge__Burnham_Road__Althorne__Essex__CM3_6DT__UK._n // print_copyright.c:9 // 0x404e30 // \\\"Stokes Hall Lodge, Burnham Road, Althorne, Essex, CM3 6DT, UK.\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Stokes Hall Lodge, Burnham Road, Althorne, Essex, CM3 6DT, UK.\\\\n\\\")\\n        edi = str.This_program_is_free_software__you_can_redistribute_it_and_or // print_copyright.c:11 // 0x404e70 // \\\"This program is free software// you can redistribute it and/or\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"This program is free software// you can redistribute it and/or\\\")\\n        edi = str.modify_it_under_the_terms_of_the_GNU_General_Public_License // print_copyright.c:12 // 0x404eb0 // \\\"modify it under the terms of the GNU General Public License\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"modify it under the terms of the GNU General Public License\\\")\\n        edi = str.as_published_by_the_Free_Software_Foundation__either_package_version_2 // print_copyright.c:13 // 0x404ef0 // \\\"as published by the Free Software Foundation// either package_version 2\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"as published by the Free Software Foundation// either package_version 2\\\")\\n        edi = str.of_the_License__or__at_your_option__any_later_package_version._n // print_copyright.c:14 // 0x404f38 // \\\"of the License, or (at your option) any later package_version.\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"of the License, or (at your option) any later package_version.\\\\n\\\")\\n        edi = str.This_program_is_distributed_in_the_hope_that_it_will_be_useful_ // print_copyright.c:16 // 0x404f78 // \\\"This program is distributed in the hope that it will be useful,\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"This program is distributed in the hope that it will be useful,\\\")\\n        edi = str.but_WITHOUT_ANY_WARRANTY__without_even_the_implied_warranty_of // print_copyright.c:17 // 0x404fb8 // \\\"but WITHOUT ANY WARRANTY// without even the implied warranty of\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"but WITHOUT ANY WARRANTY// without even the implied warranty of\\\")\\n        edi = str.MERCHANTABILITY_or_FITNESS_FOR_A_PARTICULAR_PURPOSE.__See_the // print_copyright.c:18 // 0x404ff8 // \\\"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\\")\\n        edi = str.GNU_General_Public_License__printed_below__for_more_details._n // print_copyright.c:19 // 0x405038 // \\\"GNU General Public License, printed below, for more details.\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"GNU General Public License, printed below, for more details.\\\\n\\\")\\n        edi = str._________________GNU_GENERAL_PUBLIC_LICENSE // print_copyright.c:22 // 0x405078 // \\\"                 GNU GENERAL PUBLIC LICENSE\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"                 GNU GENERAL PUBLIC LICENSE\\\")\\n        edi = str.____________________Package_version_2__June_1991_n // print_copyright.c:23 // 0x4050a8 // \\\"                    Package_version 2, June 1991\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"                    Package_version 2, June 1991\\\\n\\\")\\n        edi = str._Copyright__C__1989__1991_Free_Software_Foundation__Inc. // print_copyright.c:24 // 0x4050e0 // \\\" Copyright (C) 1989, 1991 Free Software Foundation, Inc.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\" Copyright (C) 1989, 1991 Free Software Foundation, Inc.\\\")\\n        edi = str._______________________59_Temple_Place__Suite_330__Boston__MA__02111_1307__USA // print_copyright.c:25 // 0x405120 // \\\"                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\\\")\\n        edi = str._Everyone_is_permitted_to_copy_and_distribute_verbatim_copies // print_copyright.c:26 // 0x405170 // \\\" Everyone is permitted to copy and distribute verbatim copies\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\" Everyone is permitted to copy and distribute verbatim copies\\\")\\n        edi = str._of_this_license_document__but_changing_it_is_not_allowed._n // print_copyright.c:27 // 0x4051b0 // \\\" of this license document, but changing it is not allowed.\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\" of this license document, but changing it is not allowed.\\\\n\\\")\\n        edi = str._________________________Preamble // print_copyright.c:28 // 0x4051f0 // \\\"                         Preamble\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"                         Preamble\\\")\\n        edi = str.___The_licenses_for_most_software_are_designed_to_take_away_your // print_copyright.c:29 // 0x405218 // \\\"   The licenses for most software are designed to take away your\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"   The licenses for most software are designed to take away your\\\")\\n        edi = str.freedom_to_share_and_change_it.__By_contrast__the_GNU_General_Public // print_copyright.c:30 // 0x405260 // \\\"freedom to share and change it.  By contrast, the GNU General Public\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"freedom to share and change it.  By contrast, the GNU General Public\\\")\\n        edi = str.License_is_intended_to_guarantee_your_freedom_to_share_and_change_free // print_copyright.c:31 // 0x4052a8 // \\\"License is intended to guarantee your freedom to share and change free\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"License is intended to guarantee your freedom to share and change free\\\")\\n        edi = str.software__to_make_sure_the_software_is_free_for_all_its_users.__This // print_copyright.c:32 // 0x4052f0 // \\\"software--to make sure the software is free for all its users.  This\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"software--to make sure the software is free for all its users.  This\\\")\\n        edi = str.General_Public_License_applies_to_most_of_the_Free_Software // print_copyright.c:33 // 0x405338 // \\\"General Public License applies to most of the Free Software\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"General Public License applies to most of the Free Software\\\")\\n        edi = str.Foundations_software_and_to_any_other_program_whose_authors_commit_to // print_copyright.c:34 // 0x405378 // \\\"Foundation's software and to any other program whose authors commit to\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Foundation's software and to any other program whose authors commit to\\\")\\n        edi = str.using_it.___Some_other_Free_Software_Foundation_software_is_covered_by // print_copyright.c:35 // 0x4053c0 // \\\"using it.  (Some other Free Software Foundation software is covered by\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"using it.  (Some other Free Software Foundation software is covered by\\\")\\n        edi = str.the_GNU_Library_General_Public_License_instead.___You_can_apply_it_to // print_copyright.c:36 // 0x405408 // \\\"the GNU Library General Public License instead.)  You can apply it to\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"the GNU Library General Public License instead.)  You can apply it to\\\")\\n        edi = str.your_programs__too._n // print_copyright.c:37 // 0x408deb // \\\"your programs, too.\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"your programs, too.\\\\n\\\")\\n        edi = str.__When_we_speak_of_free_software__we_are_referring_to_freedom__not // print_copyright.c:39 // 0x405450 // \\\"  When we speak of free software, we are referring to freedom, not\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  When we speak of free software, we are referring to freedom, not\\\")\\n        edi = str.price.__Our_General_Public_Licenses_are_designed_to_make_sure_that_you // print_copyright.c:40 // 0x405498 // \\\"price.  Our General Public Licenses are designed to make sure that you\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"price.  Our General Public Licenses are designed to make sure that you\\\")\\n        edi = str.have_the_freedom_to_distribute_copies_of_free_software__and_charge_for // print_copyright.c:41 // 0x4054e0 // \\\"have the freedom to distribute copies of free software (and charge for\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"have the freedom to distribute copies of free software (and charge for\\\")\\n        edi = str.this_service_if_you_wish___that_you_receive_source_code_or_can_get_it // print_copyright.c:42 // 0x405528 // \\\"this service if you wish), that you receive source code or can get it\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"this service if you wish), that you receive source code or can get it\\\")\\n        edi = str.if_you_want_it__that_you_can_change_the_software_or_use_pieces_of_it // print_copyright.c:43 // 0x405570 // \\\"if you want it, that you can change the software or use pieces of it\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"if you want it, that you can change the software or use pieces of it\\\")\\n        edi = str.in_new_free_programs__and_that_you_know_you_can_do_these_things._n // print_copyright.c:44 // 0x4055b8 // \\\"in new free programs// and that you know you can do these things.\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"in new free programs// and that you know you can do these things.\\\\n\\\")\\n        edi = str.__To_protect_your_rights__we_need_to_make_restrictions_that_forbid // print_copyright.c:46 // 0x405600 // \\\"  To protect your rights, we need to make restrictions that forbid\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  To protect your rights, we need to make restrictions that forbid\\\")\\n        edi = str.anyone_to_deny_you_these_rights_or_to_ask_you_to_surrender_the_rights. // print_copyright.c:47 // 0x405648 // \\\"anyone to deny you these rights or to ask you to surrender the rights.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"anyone to deny you these rights or to ask you to surrender the rights.\\\")\\n        edi = str.These_restrictions_translate_to_certain_responsibilities_for_you_if_you // print_copyright.c:48 // 0x405690 // \\\"These restrictions translate to certain responsibilities for you if you\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"These restrictions translate to certain responsibilities for you if you\\\")\\n        edi = str.distribute_copies_of_the_software__or_if_you_modify_it._n // print_copyright.c:49 // 0x4056d8 // \\\"distribute copies of the software, or if you modify it.\\\\n\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"distribute copies of the software, or if you modify it.\\\\n\\\")\\n        edi = str.__For_example__if_you_distribute_copies_of_such_a_program__whether // print_copyright.c:51 // 0x405718 // \\\"  For example, if you distribute copies of such a program, whether\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  For example, if you distribute copies of such a program, whether\\\")\\n        edi = str.gratis_or_for_a_fee__you_must_give_the_recipients_all_the_rights_that // print_copyright.c:52 // 0x405760 // \\\"gratis or for a fee, you must give the recipients all the rights that\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"gratis or for a fee, you must give the recipients all the rights that\\\")\\n        edi = str.you_have.__You_must_make_sure_that_they__too__receive_or_can_get_the // print_copyright.c:53 // 0x4057a8 // \\\"you have.  You must make sure that they, too, receive or can get the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"you have.  You must make sure that they, too, receive or can get the\\\")\\n        edi = str.source_code.__And_you_must_show_them_these_terms_so_they_know_their // print_copyright.c:54 // 0x4057f0 // \\\"source code.  And you must show them these terms so they know their\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"source code.  And you must show them these terms so they know their\\\")\\n        edi = str.rights. // print_copyright.c:55 // 0x408e00 // \\\"rights.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"rights.\\\")\\n        edi = 0xa     // print_copyright.c:56 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__We_protect_your_rights_with_two_steps:__1__copyright_the_software__and // print_copyright.c:57 // 0x405838 // \\\"  We protect your rights with two steps: (1) copyright the software, and\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  We protect your rights with two steps: (1) copyright the software, and\\\")\\n        edi = str._2__offer_you_this_license_which_gives_you_legal_permission_to_copy_ // print_copyright.c:58 // 0x405888 // \\\"(2) offer you this license which gives you legal permission to copy,\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"(2) offer you this license which gives you legal permission to copy,\\\")\\n        edi = str.distribute_and_or_modify_the_software. // print_copyright.c:59 // 0x4058d0 // \\\"distribute and/or modify the software.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"distribute and/or modify the software.\\\")\\n        edi = 0xa     // print_copyright.c:60 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__Also__for_each_authors_protection_and_ours__we_want_to_make_certain // print_copyright.c:61 // 0x4058f8 // \\\"  Also, for each author's protection and ours, we want to make certain\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  Also, for each author's protection and ours, we want to make certain\\\")\\n        edi = str.that_everyone_understands_that_there_is_no_warranty_for_this_free // print_copyright.c:62 // 0x405940 // \\\"that everyone understands that there is no warranty for this free\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"that everyone understands that there is no warranty for this free\\\")\\n        edi = str.software.__If_the_software_is_modified_by_someone_else_and_passed_on__we // print_copyright.c:63 // 0x405988 // \\\"software.  If the software is modified by someone else and passed on, we\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"software.  If the software is modified by someone else and passed on, we\\\")\\n        edi = str.want_its_recipients_to_know_that_what_they_have_is_not_the_original__so // print_copyright.c:64 // 0x4059d8 // \\\"want its recipients to know that what they have is not the original, so\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"want its recipients to know that what they have is not the original, so\\\")\\n        edi = str.that_any_problems_introduced_by_others_will_not_reflect_on_the_original // print_copyright.c:65 // 0x405a20 // \\\"that any problems introduced by others will not reflect on the original\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"that any problems introduced by others will not reflect on the original\\\")\\n        edi = str.authors_reputations. // print_copyright.c:66 // 0x408e08 // \\\"authors' reputations.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"authors' reputations.\\\")\\n        edi = 0xa     // print_copyright.c:67 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__Finally__any_free_program_is_threatened_constantly_by_software // print_copyright.c:68 // 0x405a68 // \\\"  Finally, any free program is threatened constantly by software\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  Finally, any free program is threatened constantly by software\\\")\\n        edi = str.patents.__We_wish_to_avoid_the_danger_that_redistributors_of_a_free // print_copyright.c:69 // 0x405ab0 // \\\"patents.  We wish to avoid the danger that redistributors of a free\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"patents.  We wish to avoid the danger that redistributors of a free\\\")\\n        edi = str.program_will_individually_obtain_patent_licenses__in_effect_making_the // print_copyright.c:70 // 0x405af8 // \\\"program will individually obtain patent licenses, in effect making the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"program will individually obtain patent licenses, in effect making the\\\")\\n        edi = str.program_proprietary.__To_prevent_this__we_have_made_it_clear_that_any // print_copyright.c:71 // 0x405b40 // \\\"program proprietary.  To prevent this, we have made it clear that any\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"program proprietary.  To prevent this, we have made it clear that any\\\")\\n        edi = str.patent_must_be_licensed_for_everyones_free_use_or_not_licensed_at_all. // print_copyright.c:72 // 0x405b88 // \\\"patent must be licensed for everyone's free use or not licensed at all.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"patent must be licensed for everyone's free use or not licensed at all.\\\")\\n        edi = 0xa     // print_copyright.c:73 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__The_precise_terms_and_conditions_for_copying__distribution_and // print_copyright.c:74 // 0x405bd0 // \\\"  The precise terms and conditions for copying, distribution and\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  The precise terms and conditions for copying, distribution and\\\")\\n        edi = str.modification_follow. // print_copyright.c:75 // 0x408e1e // \\\"modification follow.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"modification follow.\\\")\\n        edi = 0x408e33 // print_copyright.c:76 // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"\\\\f\\\")\\n        edi = str._t_t____GNU_GENERAL_PUBLIC_LICENSE // print_copyright.c:77 // 0x405c18 // \\\"\\\\t\\\\t    GNU GENERAL PUBLIC LICENSE\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"\\\\t\\\\t    GNU GENERAL PUBLIC LICENSE\\\")\\n        edi = str.___TERMS_AND_CONDITIONS_FOR_COPYING__DISTRIBUTION_AND_MODIFICATION // print_copyright.c:78 // 0x405c40 // \\\"   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\\\")\\n        edi = 0xa     // print_copyright.c:79 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__0._This_License_applies_to_any_program_or_other_work_which_contains // print_copyright.c:80 // 0x405c88 // \\\"  0. This License applies to any program or other work which contains\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  0. This License applies to any program or other work which contains\\\")\\n        edi = str.a_notice_placed_by_the_copyright_holder_saying_it_may_be_distributed // print_copyright.c:81 // 0x405cd0 // \\\"a notice placed by the copyright holder saying it may be distributed\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"a notice placed by the copyright holder saying it may be distributed\\\")\\n        edi = str.under_the_terms_of_this_General_Public_License.__The__Program___below_ // print_copyright.c:82 // 0x405d18 // \\\"under the terms of this General Public License.  The \\\\\\\"Program\\\\\\\", below,\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"under the terms of this General Public License.  The \\\\\\\"Program\\\\\\\", below,\\\")\\n        edi = str.refers_to_any_such_program_or_work__and_a__work_based_on_the_Program_ // print_copyright.c:83 // 0x405d60 // \\\"refers to any such program or work, and a \\\\\\\"work based on the Program\\\\\\\"\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"refers to any such program or work, and a \\\\\\\"work based on the Program\\\\\\\"\\\")\\n        edi = str.means_either_the_Program_or_any_derivative_work_under_copyright_law: // print_copyright.c:84 // 0x405da8 // \\\"means either the Program or any derivative work under copyright law:\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"means either the Program or any derivative work under copyright law:\\\")\\n        edi = str.that_is_to_say__a_work_containing_the_Program_or_a_portion_of_it_ // print_copyright.c:85 // 0x405df0 // \\\"that is to say, a work containing the Program or a portion of it,\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"that is to say, a work containing the Program or a portion of it,\\\")\\n        edi = str.either_verbatim_or_with_modifications_and_or_translated_into_another // print_copyright.c:86 // 0x405e38 // \\\"either verbatim or with modifications and/or translated into another\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"either verbatim or with modifications and/or translated into another\\\")\\n        edi = str.language.___Hereinafter__translation_is_included_without_limitation_in // print_copyright.c:87 // 0x405e80 // \\\"language.  (Hereinafter, translation is included without limitation in\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"language.  (Hereinafter, translation is included without limitation in\\\")\\n        edi = str.the_term__modification_.___Each_licensee_is_addressed_as__you_. // print_copyright.c:88 // 0x405ec8 // \\\"the term \\\\\\\"modification\\\\\\\".)  Each licensee is addressed as \\\\\\\"you\\\\\\\".\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"the term \\\\\\\"modification\\\\\\\".)  Each licensee is addressed as \\\\\\\"you\\\\\\\".\\\")\\n        edi = 0xa     // print_copyright.c:89 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.Activities_other_than_copying__distribution_and_modification_are_not // print_copyright.c:90 // 0x405f08 // \\\"Activities other than copying, distribution and modification are not\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Activities other than copying, distribution and modification are not\\\")\\n        edi = str.covered_by_this_License__they_are_outside_its_scope.__The_act_of // print_copyright.c:91 // 0x405f50 // \\\"covered by this License// they are outside its scope.  The act of\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"covered by this License// they are outside its scope.  The act of\\\")\\n        edi = str.running_the_Program_is_not_restricted__and_the_output_from_the_Program // print_copyright.c:92 // 0x405f98 // \\\"running the Program is not restricted, and the output from the Program\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"running the Program is not restricted, and the output from the Program\\\")\\n        edi = str.is_covered_only_if_its_contents_constitute_a_work_based_on_the // print_copyright.c:93 // 0x405fe0 // \\\"is covered only if its contents constitute a work based on the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"is covered only if its contents constitute a work based on the\\\")\\n        edi = str.Program__independent_of_having_been_made_by_running_the_Program_. // print_copyright.c:94 // 0x406020 // \\\"Program (independent of having been made by running the Program).\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Program (independent of having been made by running the Program).\\\")\\n        edi = str.Whether_that_is_true_depends_on_what_the_Program_does. // print_copyright.c:95 // 0x406068 // \\\"Whether that is true depends on what the Program does.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Whether that is true depends on what the Program does.\\\")\\n        edi = 0xa     // print_copyright.c:96 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__1._You_may_copy_and_distribute_verbatim_copies_of_the_Programs // print_copyright.c:97 // 0x4060a0 // \\\"  1. You may copy and distribute verbatim copies of the Program's\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  1. You may copy and distribute verbatim copies of the Program's\\\")\\n        edi = str.source_code_as_you_receive_it__in_any_medium__provided_that_you // print_copyright.c:98 // 0x4060e8 // \\\"source code as you receive it, in any medium, provided that you\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"source code as you receive it, in any medium, provided that you\\\")\\n        edi = str.conspicuously_and_appropriately_publish_on_each_copy_an_appropriate // print_copyright.c:99 // 0x406128 // \\\"conspicuously and appropriately publish on each copy an appropriate\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"conspicuously and appropriately publish on each copy an appropriate\\\")\\n        edi = str.copyright_notice_and_disclaimer_of_warranty__keep_intact_all_the // print_copyright.c:100 // 0x406170 // \\\"copyright notice and disclaimer of warranty// keep intact all the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"copyright notice and disclaimer of warranty// keep intact all the\\\")\\n        edi = str.notices_that_refer_to_this_License_and_to_the_absence_of_any_warranty_ // print_copyright.c:101 // 0x4061b8 // \\\"notices that refer to this License and to the absence of any warranty//\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"notices that refer to this License and to the absence of any warranty//\\\")\\n        edi = str.and_give_any_other_recipients_of_the_Program_a_copy_of_this_License // print_copyright.c:102 // 0x406200 // \\\"and give any other recipients of the Program a copy of this License\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"and give any other recipients of the Program a copy of this License\\\")\\n        edi = str.along_with_the_Program. // print_copyright.c:103 // 0x408e35 // \\\"along with the Program.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"along with the Program.\\\")\\n        edi = 0xa     // print_copyright.c:104 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.You_may_charge_a_fee_for_the_physical_act_of_transferring_a_copy__and // print_copyright.c:105 // 0x406248 // \\\"You may charge a fee for the physical act of transferring a copy, and\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"You may charge a fee for the physical act of transferring a copy, and\\\")\\n        edi = str.you_may_at_your_option_offer_warranty_protection_in_exchange_for_a_fee. // print_copyright.c:106 // 0x406290 // \\\"you may at your option offer warranty protection in exchange for a fee.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"you may at your option offer warranty protection in exchange for a fee.\\\")\\n        edi = 0xa     // print_copyright.c:107 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__2._You_may_modify_your_copy_or_copies_of_the_Program_or_any_portion // print_copyright.c:108 // 0x4062d8 // \\\"  2. You may modify your copy or copies of the Program or any portion\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  2. You may modify your copy or copies of the Program or any portion\\\")\\n        edi = str.of_it__thus_forming_a_work_based_on_the_Program__and_copy_and // print_copyright.c:109 // 0x406320 // \\\"of it, thus forming a work based on the Program, and copy and\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"of it, thus forming a work based on the Program, and copy and\\\")\\n        edi = str.distribute_such_modifications_or_work_under_the_terms_of_Section_1 // print_copyright.c:110 // 0x406360 // \\\"distribute such modifications or work under the terms of Section 1\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"distribute such modifications or work under the terms of Section 1\\\")\\n        edi = str.above__provided_that_you_also_meet_all_of_these_conditions: // print_copyright.c:111 // 0x4063a8 // \\\"above, provided that you also meet all of these conditions:\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"above, provided that you also meet all of these conditions:\\\")\\n        edi = 0xa     // print_copyright.c:112 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.____a__You_must_cause_the_modified_files_to_carry_prominent_notices // print_copyright.c:113 // 0x4063e8 // \\\"    a) You must cause the modified files to carry prominent notices\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    a) You must cause the modified files to carry prominent notices\\\")\\n        edi = str.____stating_that_you_changed_the_files_and_the_date_of_any_change. // print_copyright.c:114 // 0x406430 // \\\"    stating that you changed the files and the date of any change.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    stating that you changed the files and the date of any change.\\\")\\n        edi = 0xa     // print_copyright.c:115 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.____b__You_must_cause_any_work_that_you_distribute_or_publish__that_in // print_copyright.c:116 // 0x406478 // \\\"    b) You must cause any work that you distribute or publish, that in\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    b) You must cause any work that you distribute or publish, that in\\\")\\n        edi = str.____whole_or_in_part_contains_or_is_derived_from_the_Program_or_any // print_copyright.c:117 // 0x4064c0 // \\\"    whole or in part contains or is derived from the Program or any\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    whole or in part contains or is derived from the Program or any\\\")\\n        edi = str.____part_thereof__to_be_licensed_as_a_whole_at_no_charge_to_all_third // print_copyright.c:118 // 0x406508 // \\\"    part thereof, to be licensed as a whole at no charge to all third\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    part thereof, to be licensed as a whole at no charge to all third\\\")\\n        edi = str.____parties_under_the_terms_of_this_License. // print_copyright.c:119 // 0x406550 // \\\"    parties under the terms of this License.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    parties under the terms of this License.\\\")\\n        edi = 0xa     // print_copyright.c:120 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.____c__If_the_modified_program_normally_reads_commands_interactively // print_copyright.c:121 // 0x406580 // \\\"    c) If the modified program normally reads commands interactively\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    c) If the modified program normally reads commands interactively\\\")\\n        edi = str.____when_run__you_must_cause_it__when_started_running_for_such // print_copyright.c:122 // 0x4065c8 // \\\"    when run, you must cause it, when started running for such\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    when run, you must cause it, when started running for such\\\")\\n        edi = str.____interactive_use_in_the_most_ordinary_way__to_print_or_display_an // print_copyright.c:123 // 0x406608 // \\\"    interactive use in the most ordinary way, to print or display an\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    interactive use in the most ordinary way, to print or display an\\\")\\n        edi = str.____announcement_including_an_appropriate_copyright_notice_and_a // print_copyright.c:124 // 0x406650 // \\\"    announcement including an appropriate copyright notice and a\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    announcement including an appropriate copyright notice and a\\\")\\n        edi = str.____notice_that_there_is_no_warranty__or_else__saying_that_you_provide // print_copyright.c:125 // 0x406698 // \\\"    notice that there is no warranty (or else, saying that you provide\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    notice that there is no warranty (or else, saying that you provide\\\")\\n        edi = str.____a_warranty__and_that_users_may_redistribute_the_program_under // print_copyright.c:126 // 0x4066e0 // \\\"    a warranty) and that users may redistribute the program under\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    a warranty) and that users may redistribute the program under\\\")\\n        edi = str.____these_conditions__and_telling_the_user_how_to_view_a_copy_of_this // print_copyright.c:127 // 0x406728 // \\\"    these conditions, and telling the user how to view a copy of this\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    these conditions, and telling the user how to view a copy of this\\\")\\n        edi = str.____License.___Exception:_if_the_Program_itself_is_interactive_but // print_copyright.c:128 // 0x406770 // \\\"    License.  (Exception: if the Program itself is interactive but\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    License.  (Exception: if the Program itself is interactive but\\\")\\n        edi = str.____does_not_normally_print_such_an_announcement__your_work_based_on // print_copyright.c:129 // 0x4067b8 // \\\"    does not normally print such an announcement, your work based on\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    does not normally print such an announcement, your work based on\\\")\\n        edi = str.____the_Program_is_not_required_to_print_an_announcement._ // print_copyright.c:130 // 0x406800 // \\\"    the Program is not required to print an announcement.)\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    the Program is not required to print an announcement.)\\\")\\n        edi = 0x408e33 // print_copyright.c:131 // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"\\\\f\\\")\\n        edi = str.These_requirements_apply_to_the_modified_work_as_a_whole.__If // print_copyright.c:132 // 0x406840 // \\\"These requirements apply to the modified work as a whole.  If\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"These requirements apply to the modified work as a whole.  If\\\")\\n        edi = str.identifiable_sections_of_that_work_are_not_derived_from_the_Program_ // print_copyright.c:133 // 0x406880 // \\\"identifiable sections of that work are not derived from the Program,\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"identifiable sections of that work are not derived from the Program,\\\")\\n        edi = str.and_can_be_reasonably_considered_independent_and_separate_works_in // print_copyright.c:134 // 0x4068c8 // \\\"and can be reasonably considered independent and separate works in\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"and can be reasonably considered independent and separate works in\\\")\\n        edi = str.themselves__then_this_License__and_its_terms__do_not_apply_to_those // print_copyright.c:135 // 0x406910 // \\\"themselves, then this License, and its terms, do not apply to those\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"themselves, then this License, and its terms, do not apply to those\\\")\\n        edi = str.sections_when_you_distribute_them_as_separate_works.__But_when_you // print_copyright.c:136 // 0x406958 // \\\"sections when you distribute them as separate works.  But when you\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"sections when you distribute them as separate works.  But when you\\\")\\n        edi = str.distribute_the_same_sections_as_part_of_a_whole_which_is_a_work_based // print_copyright.c:137 // 0x4069a0 // \\\"distribute the same sections as part of a whole which is a work based\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"distribute the same sections as part of a whole which is a work based\\\")\\n        edi = str.on_the_Program__the_distribution_of_the_whole_must_be_on_the_terms_of // print_copyright.c:138 // 0x4069e8 // \\\"on the Program, the distribution of the whole must be on the terms of\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"on the Program, the distribution of the whole must be on the terms of\\\")\\n        edi = str.this_License__whose_permissions_for_other_licensees_extend_to_the // print_copyright.c:139 // 0x406a30 // \\\"this License, whose permissions for other licensees extend to the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"this License, whose permissions for other licensees extend to the\\\")\\n        edi = str.entire_whole__and_thus_to_each_and_every_part_regardless_of_who_wrote_it. // print_copyright.c:140 // 0x406a78 // \\\"entire whole, and thus to each and every part regardless of who wrote it.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"entire whole, and thus to each and every part regardless of who wrote it.\\\")\\n        edi = 0xa     // print_copyright.c:141 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.Thus__it_is_not_the_intent_of_this_section_to_claim_rights_or_contest // print_copyright.c:142 // 0x406ac8 // \\\"Thus, it is not the intent of this section to claim rights or contest\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Thus, it is not the intent of this section to claim rights or contest\\\")\\n        edi = str.your_rights_to_work_written_entirely_by_you__rather__the_intent_is_to // print_copyright.c:143 // 0x406b10 // \\\"your rights to work written entirely by you// rather, the intent is to\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"your rights to work written entirely by you// rather, the intent is to\\\")\\n        edi = str.exercise_the_right_to_control_the_distribution_of_derivative_or // print_copyright.c:144 // 0x406b58 // \\\"exercise the right to control the distribution of derivative or\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"exercise the right to control the distribution of derivative or\\\")\\n        edi = str.collective_works_based_on_the_Program. // print_copyright.c:145 // 0x406b98 // \\\"collective works based on the Program.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"collective works based on the Program.\\\")\\n        edi = 0xa     // print_copyright.c:146 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.In_addition__mere_aggregation_of_another_work_not_based_on_the_Program // print_copyright.c:147 // 0x406bc0 // \\\"In addition, mere aggregation of another work not based on the Program\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"In addition, mere aggregation of another work not based on the Program\\\")\\n        edi = str.with_the_Program__or_with_a_work_based_on_the_Program__on_a_volume_of // print_copyright.c:148 // 0x406c08 // \\\"with the Program (or with a work based on the Program) on a volume of\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"with the Program (or with a work based on the Program) on a volume of\\\")\\n        edi = str.a_storage_or_distribution_medium_does_not_bring_the_other_work_under // print_copyright.c:149 // 0x406c50 // \\\"a storage or distribution medium does not bring the other work under\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"a storage or distribution medium does not bring the other work under\\\")\\n        edi = str.the_scope_of_this_License. // print_copyright.c:150 // 0x408e4d // \\\"the scope of this License.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"the scope of this License.\\\")\\n        edi = 0xa     // print_copyright.c:151 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__3._You_may_copy_and_distribute_the_Program__or_a_work_based_on_it_ // print_copyright.c:152 // 0x406c98 // \\\"  3. You may copy and distribute the Program (or a work based on it,\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  3. You may copy and distribute the Program (or a work based on it,\\\")\\n        edi = str.under_Section_2__in_object_code_or_executable_form_under_the_terms_of // print_copyright.c:153 // 0x406ce0 // \\\"under Section 2) in object code or executable form under the terms of\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"under Section 2) in object code or executable form under the terms of\\\")\\n        edi = str.Sections_1_and_2_above_provided_that_you_also_do_one_of_the_following: // print_copyright.c:154 // 0x406d28 // \\\"Sections 1 and 2 above provided that you also do one of the following:\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Sections 1 and 2 above provided that you also do one of the following:\\\")\\n        edi = 0xa     // print_copyright.c:155 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.____a__Accompany_it_with_the_complete_corresponding_machine_readable // print_copyright.c:156 // 0x406d70 // \\\"    a) Accompany it with the complete corresponding machine-readable\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    a) Accompany it with the complete corresponding machine-readable\\\")\\n        edi = str.____source_code__which_must_be_distributed_under_the_terms_of_Sections // print_copyright.c:157 // 0x406db8 // \\\"    source code, which must be distributed under the terms of Sections\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    source code, which must be distributed under the terms of Sections\\\")\\n        edi = str.____1_and_2_above_on_a_medium_customarily_used_for_software_interchange__or_ // print_copyright.c:158 // 0x406e00 // \\\"    1 and 2 above on a medium customarily used for software interchange// or,\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    1 and 2 above on a medium customarily used for software interchange// or,\\\")\\n        edi = 0xa     // print_copyright.c:159 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.____b__Accompany_it_with_a_written_offer__valid_for_at_least_three // print_copyright.c:160 // 0x406e50 // \\\"    b) Accompany it with a written offer, valid for at least three\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    b) Accompany it with a written offer, valid for at least three\\\")\\n        edi = str.____years__to_give_any_third_party__for_a_charge_no_more_than_your // print_copyright.c:161 // 0x406e98 // \\\"    years, to give any third party, for a charge no more than your\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    years, to give any third party, for a charge no more than your\\\")\\n        edi = str.____cost_of_physically_performing_source_distribution__a_complete // print_copyright.c:162 // 0x406ee0 // \\\"    cost of physically performing source distribution, a complete\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    cost of physically performing source distribution, a complete\\\")\\n        edi = str.____machine_readable_copy_of_the_corresponding_source_code__to_be // print_copyright.c:163 // 0x406f28 // \\\"    machine-readable copy of the corresponding source code, to be\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    machine-readable copy of the corresponding source code, to be\\\")\\n        edi = str.____distributed_under_the_terms_of_Sections_1_and_2_above_on_a_medium // print_copyright.c:164 // 0x406f70 // \\\"    distributed under the terms of Sections 1 and 2 above on a medium\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    distributed under the terms of Sections 1 and 2 above on a medium\\\")\\n        edi = str.____customarily_used_for_software_interchange__or_ // print_copyright.c:165 // 0x406fb8 // \\\"    customarily used for software interchange// or,\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    customarily used for software interchange// or,\\\")\\n        edi = 0xa     // print_copyright.c:166 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.____c__Accompany_it_with_the_information_you_received_as_to_the_offer // print_copyright.c:167 // 0x406ff0 // \\\"    c) Accompany it with the information you received as to the offer\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    c) Accompany it with the information you received as to the offer\\\")\\n        edi = str.____to_distribute_corresponding_source_code.___This_alternative_is // print_copyright.c:168 // 0x407038 // \\\"    to distribute corresponding source code.  (This alternative is\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    to distribute corresponding source code.  (This alternative is\\\")\\n        edi = str.____allowed_only_for_noncommercial_distribution_and_only_if_you // print_copyright.c:169 // 0x407080 // \\\"    allowed only for noncommercial distribution and only if you\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    allowed only for noncommercial distribution and only if you\\\")\\n        edi = str.____received_the_program_in_object_code_or_executable_form_with_such // print_copyright.c:170 // 0x4070c0 // \\\"    received the program in object code or executable form with such\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    received the program in object code or executable form with such\\\")\\n        edi = str.____an_offer__in_accord_with_Subsection_b_above._ // print_copyright.c:171 // 0x407108 // \\\"    an offer, in accord with Subsection b above.)\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"    an offer, in accord with Subsection b above.)\\\")\\n        edi = 0xa     // print_copyright.c:172 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.The_source_code_for_a_work_means_the_preferred_form_of_the_work_for // print_copyright.c:173 // 0x407140 // \\\"The source code for a work means the preferred form of the work for\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"The source code for a work means the preferred form of the work for\\\")\\n        edi = str.making_modifications_to_it.__For_an_executable_work__complete_source // print_copyright.c:174 // 0x407188 // \\\"making modifications to it.  For an executable work, complete source\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"making modifications to it.  For an executable work, complete source\\\")\\n        edi = str.code_means_all_the_source_code_for_all_modules_it_contains__plus_any // print_copyright.c:175 // 0x4071d0 // \\\"code means all the source code for all modules it contains, plus any\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"code means all the source code for all modules it contains, plus any\\\")\\n        edi = str.associated_interface_definition_files__plus_the_scripts_used_to // print_copyright.c:176 // 0x407218 // \\\"associated interface definition files, plus the scripts used to\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"associated interface definition files, plus the scripts used to\\\")\\n        edi = str.control_compilation_and_installation_of_the_executable.__However__as_a // print_copyright.c:177 // 0x407258 // \\\"control compilation and installation of the executable.  However, as a\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"control compilation and installation of the executable.  However, as a\\\")\\n        edi = str.special_exception__the_source_code_distributed_need_not_include // print_copyright.c:178 // 0x4072a0 // \\\"special exception, the source code distributed need not include\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"special exception, the source code distributed need not include\\\")\\n        edi = str.anything_that_is_normally_distributed__in_either_source_or_binary // print_copyright.c:179 // 0x4072e0 // \\\"anything that is normally distributed (in either source or binary\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"anything that is normally distributed (in either source or binary\\\")\\n        edi = str.form__with_the_major_components__compiler__kernel__and_so_on__of_the // print_copyright.c:180 // 0x407328 // \\\"form) with the major components (compiler, kernel, and so on) of the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"form) with the major components (compiler, kernel, and so on) of the\\\")\\n        edi = str.operating_system_on_which_the_executable_runs__unless_that_component // print_copyright.c:181 // 0x407370 // \\\"operating system on which the executable runs, unless that component\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"operating system on which the executable runs, unless that component\\\")\\n        edi = str.itself_accompanies_the_executable. // print_copyright.c:182 // 0x4073b8 // \\\"itself accompanies the executable.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"itself accompanies the executable.\\\")\\n        edi = 0xa     // print_copyright.c:183 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.If_distribution_of_executable_or_object_code_is_made_by_offering // print_copyright.c:184 // 0x4073e0 // \\\"If distribution of executable or object code is made by offering\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"If distribution of executable or object code is made by offering\\\")\\n        edi = str.access_to_copy_from_a_designated_place__then_offering_equivalent // print_copyright.c:185 // 0x407428 // \\\"access to copy from a designated place, then offering equivalent\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"access to copy from a designated place, then offering equivalent\\\")\\n        edi = str.access_to_copy_the_source_code_from_the_same_place_counts_as // print_copyright.c:186 // 0x407470 // \\\"access to copy the source code from the same place counts as\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"access to copy the source code from the same place counts as\\\")\\n        edi = str.distribution_of_the_source_code__even_though_third_parties_are_not // print_copyright.c:187 // 0x4074b0 // \\\"distribution of the source code, even though third parties are not\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"distribution of the source code, even though third parties are not\\\")\\n        edi = str.compelled_to_copy_the_source_along_with_the_object_code. // print_copyright.c:188 // 0x4074f8 // \\\"compelled to copy the source along with the object code.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"compelled to copy the source along with the object code.\\\")\\n        edi = 0x408e33 // print_copyright.c:189 // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"\\\\f\\\")\\n        edi = str.__4._You_may_not_copy__modify__sublicense__or_distribute_the_Program // print_copyright.c:190 // 0x407538 // \\\"  4. You may not copy, modify, sublicense, or distribute the Program\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  4. You may not copy, modify, sublicense, or distribute the Program\\\")\\n        edi = str.except_as_expressly_provided_under_this_License.__Any_attempt // print_copyright.c:191 // 0x407580 // \\\"except as expressly provided under this License.  Any attempt\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"except as expressly provided under this License.  Any attempt\\\")\\n        edi = str.otherwise_to_copy__modify__sublicense_or_distribute_the_Program_is // print_copyright.c:192 // 0x4075c0 // \\\"otherwise to copy, modify, sublicense or distribute the Program is\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"otherwise to copy, modify, sublicense or distribute the Program is\\\")\\n        edi = str.void__and_will_automatically_terminate_your_rights_under_this_License. // print_copyright.c:193 // 0x407608 // \\\"void, and will automatically terminate your rights under this License.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"void, and will automatically terminate your rights under this License.\\\")\\n        edi = str.However__parties_who_have_received_copies__or_rights__from_you_under // print_copyright.c:194 // 0x407650 // \\\"However, parties who have received copies, or rights, from you under\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"However, parties who have received copies, or rights, from you under\\\")\\n        edi = str.this_License_will_not_have_their_licenses_terminated_so_long_as_such // print_copyright.c:195 // 0x407698 // \\\"this License will not have their licenses terminated so long as such\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"this License will not have their licenses terminated so long as such\\\")\\n        edi = str.parties_remain_in_full_compliance. // print_copyright.c:196 // 0x4076e0 // \\\"parties remain in full compliance.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"parties remain in full compliance.\\\")\\n        edi = 0xa     // print_copyright.c:197 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__5._You_are_not_required_to_accept_this_License__since_you_have_not // print_copyright.c:198 // 0x407708 // \\\"  5. You are not required to accept this License, since you have not\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  5. You are not required to accept this License, since you have not\\\")\\n        edi = str.signed_it.__However__nothing_else_grants_you_permission_to_modify_or // print_copyright.c:199 // 0x407750 // \\\"signed it.  However, nothing else grants you permission to modify or\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"signed it.  However, nothing else grants you permission to modify or\\\")\\n        edi = str.distribute_the_Program_or_its_derivative_works.__These_actions_are // print_copyright.c:200 // 0x407798 // \\\"distribute the Program or its derivative works.  These actions are\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"distribute the Program or its derivative works.  These actions are\\\")\\n        edi = str.prohibited_by_law_if_you_do_not_accept_this_License.__Therefore__by // print_copyright.c:201 // 0x4077e0 // \\\"prohibited by law if you do not accept this License.  Therefore, by\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"prohibited by law if you do not accept this License.  Therefore, by\\\")\\n        edi = str.modifying_or_distributing_the_Program__or_any_work_based_on_the // print_copyright.c:202 // 0x407828 // \\\"modifying or distributing the Program (or any work based on the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"modifying or distributing the Program (or any work based on the\\\")\\n        edi = str.Program___you_indicate_your_acceptance_of_this_License_to_do_so__and // print_copyright.c:203 // 0x407868 // \\\"Program), you indicate your acceptance of this License to do so, and\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Program), you indicate your acceptance of this License to do so, and\\\")\\n        edi = str.all_its_terms_and_conditions_for_copying__distributing_or_modifying // print_copyright.c:204 // 0x4078b0 // \\\"all its terms and conditions for copying, distributing or modifying\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"all its terms and conditions for copying, distributing or modifying\\\")\\n        edi = str.the_Program_or_works_based_on_it. // print_copyright.c:205 // 0x4078f8 // \\\"the Program or works based on it.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"the Program or works based on it.\\\")\\n        edi = 0xa     // print_copyright.c:206 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__6._Each_time_you_redistribute_the_Program__or_any_work_based_on_the // print_copyright.c:207 // 0x407920 // \\\"  6. Each time you redistribute the Program (or any work based on the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  6. Each time you redistribute the Program (or any work based on the\\\")\\n        edi = str.Program___the_recipient_automatically_receives_a_license_from_the // print_copyright.c:208 // 0x407968 // \\\"Program), the recipient automatically receives a license from the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Program), the recipient automatically receives a license from the\\\")\\n        edi = str.original_licensor_to_copy__distribute_or_modify_the_Program_subject_to // print_copyright.c:209 // 0x4079b0 // \\\"original licensor to copy, distribute or modify the Program subject to\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"original licensor to copy, distribute or modify the Program subject to\\\")\\n        edi = str.these_terms_and_conditions.__You_may_not_impose_any_further // print_copyright.c:210 // 0x4079f8 // \\\"these terms and conditions.  You may not impose any further\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"these terms and conditions.  You may not impose any further\\\")\\n        edi = str.restrictions_on_the_recipients_exercise_of_the_rights_granted_herein. // print_copyright.c:211 // 0x407a38 // \\\"restrictions on the recipients' exercise of the rights granted herein.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"restrictions on the recipients' exercise of the rights granted herein.\\\")\\n        edi = str.You_are_not_responsible_for_enforcing_compliance_by_third_parties_to // print_copyright.c:212 // 0x407a80 // \\\"You are not responsible for enforcing compliance by third parties to\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"You are not responsible for enforcing compliance by third parties to\\\")\\n        edi = 0x408e5a // print_copyright.c:213 // \\\"this License.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"this License.\\\")\\n        edi = 0xa     // print_copyright.c:214 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__7._If__as_a_consequence_of_a_court_judgment_or_allegation_of_patent // print_copyright.c:215 // 0x407ac8 // \\\"  7. If, as a consequence of a court judgment or allegation of patent\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  7. If, as a consequence of a court judgment or allegation of patent\\\")\\n        edi = str.infringement_or_for_any_other_reason__not_limited_to_patent_issues__ // print_copyright.c:216 // 0x407b10 // \\\"infringement or for any other reason (not limited to patent issues),\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"infringement or for any other reason (not limited to patent issues),\\\")\\n        edi = str.conditions_are_imposed_on_you__whether_by_court_order__agreement_or // print_copyright.c:217 // 0x407b58 // \\\"conditions are imposed on you (whether by court order, agreement or\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"conditions are imposed on you (whether by court order, agreement or\\\")\\n        edi = str.otherwise__that_contradict_the_conditions_of_this_License__they_do_not // print_copyright.c:218 // 0x407ba0 // \\\"otherwise) that contradict the conditions of this License, they do not\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"otherwise) that contradict the conditions of this License, they do not\\\")\\n        edi = str.excuse_you_from_the_conditions_of_this_License.__If_you_cannot // print_copyright.c:219 // 0x407be8 // \\\"excuse you from the conditions of this License.  If you cannot\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"excuse you from the conditions of this License.  If you cannot\\\")\\n        edi = str.distribute_so_as_to_satisfy_simultaneously_your_obligations_under_this // print_copyright.c:220 // 0x407c28 // \\\"distribute so as to satisfy simultaneously your obligations under this\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"distribute so as to satisfy simultaneously your obligations under this\\\")\\n        edi = str.License_and_any_other_pertinent_obligations__then_as_a_consequence_you // print_copyright.c:221 // 0x407c70 // \\\"License and any other pertinent obligations, then as a consequence you\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"License and any other pertinent obligations, then as a consequence you\\\")\\n        edi = str.may_not_distribute_the_Program_at_all.__For_example__if_a_patent // print_copyright.c:222 // 0x407cb8 // \\\"may not distribute the Program at all.  For example, if a patent\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"may not distribute the Program at all.  For example, if a patent\\\")\\n        edi = str.license_would_not_permit_royalty_free_redistribution_of_the_Program_by // print_copyright.c:223 // 0x407d00 // \\\"license would not permit royalty-free redistribution of the Program by\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"license would not permit royalty-free redistribution of the Program by\\\")\\n        edi = str.all_those_who_receive_copies_directly_or_indirectly_through_you__then // print_copyright.c:224 // 0x407d48 // \\\"all those who receive copies directly or indirectly through you, then\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"all those who receive copies directly or indirectly through you, then\\\")\\n        edi = str.the_only_way_you_could_satisfy_both_it_and_this_License_would_be_to // print_copyright.c:225 // 0x407d90 // \\\"the only way you could satisfy both it and this License would be to\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"the only way you could satisfy both it and this License would be to\\\")\\n        edi = str.refrain_entirely_from_distribution_of_the_Program. // print_copyright.c:226 // 0x407dd8 // \\\"refrain entirely from distribution of the Program.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"refrain entirely from distribution of the Program.\\\")\\n        edi = 0xa     // print_copyright.c:227 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.If_any_portion_of_this_section_is_held_invalid_or_unenforceable_under // print_copyright.c:228 // 0x407e10 // \\\"If any portion of this section is held invalid or unenforceable under\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"If any portion of this section is held invalid or unenforceable under\\\")\\n        edi = str.any_particular_circumstance__the_balance_of_the_section_is_intended_to // print_copyright.c:229 // 0x407e58 // \\\"any particular circumstance, the balance of the section is intended to\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"any particular circumstance, the balance of the section is intended to\\\")\\n        edi = str.apply_and_the_section_as_a_whole_is_intended_to_apply_in_other // print_copyright.c:230 // 0x407ea0 // \\\"apply and the section as a whole is intended to apply in other\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"apply and the section as a whole is intended to apply in other\\\")\\n        edi = str.circumstances. // print_copyright.c:231 // 0x408e68 // \\\"circumstances.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"circumstances.\\\")\\n        edi = 0xa     // print_copyright.c:232 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.It_is_not_the_purpose_of_this_section_to_induce_you_to_infringe_any // print_copyright.c:233 // 0x407ee0 // \\\"It is not the purpose of this section to induce you to infringe any\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"It is not the purpose of this section to induce you to infringe any\\\")\\n        edi = str.patents_or_other_property_right_claims_or_to_contest_validity_of_any // print_copyright.c:234 // 0x407f28 // \\\"patents or other property right claims or to contest validity of any\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"patents or other property right claims or to contest validity of any\\\")\\n        edi = str.such_claims__this_section_has_the_sole_purpose_of_protecting_the // print_copyright.c:235 // 0x407f70 // \\\"such claims// this section has the sole purpose of protecting the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"such claims// this section has the sole purpose of protecting the\\\")\\n        edi = str.integrity_of_the_free_software_distribution_system__which_is // print_copyright.c:236 // 0x407fb8 // \\\"integrity of the free software distribution system, which is\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"integrity of the free software distribution system, which is\\\")\\n        edi = str.implemented_by_public_license_practices.__Many_people_have_made // print_copyright.c:237 // 0x407ff8 // \\\"implemented by public license practices.  Many people have made\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"implemented by public license practices.  Many people have made\\\")\\n        edi = str.generous_contributions_to_the_wide_range_of_software_distributed // print_copyright.c:238 // 0x408038 // \\\"generous contributions to the wide range of software distributed\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"generous contributions to the wide range of software distributed\\\")\\n        edi = str.through_that_system_in_reliance_on_consistent_application_of_that // print_copyright.c:239 // 0x408080 // \\\"through that system in reliance on consistent application of that\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"through that system in reliance on consistent application of that\\\")\\n        edi = str.system__it_is_up_to_the_author_donor_to_decide_if_he_or_she_is_willing // print_copyright.c:240 // 0x4080c8 // \\\"system// it is up to the author/donor to decide if he or she is willing\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"system// it is up to the author/donor to decide if he or she is willing\\\")\\n        edi = str.to_distribute_software_through_any_other_system_and_a_licensee_cannot // print_copyright.c:241 // 0x408110 // \\\"to distribute software through any other system and a licensee cannot\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"to distribute software through any other system and a licensee cannot\\\")\\n        edi = str.impose_that_choice. // print_copyright.c:242 // 0x408e77 // \\\"impose that choice.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"impose that choice.\\\")\\n        edi = 0xa     // print_copyright.c:243 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.This_section_is_intended_to_make_thoroughly_clear_what_is_believed_to // print_copyright.c:244 // 0x408158 // \\\"This section is intended to make thoroughly clear what is believed to\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"This section is intended to make thoroughly clear what is believed to\\\")\\n        edi = str.be_a_consequence_of_the_rest_of_this_License. // print_copyright.c:245 // 0x4081a0 // \\\"be a consequence of the rest of this License.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"be a consequence of the rest of this License.\\\")\\n        edi = 0x408e33 // print_copyright.c:246 // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"\\\\f\\\")\\n        edi = str.__8._If_the_distribution_and_or_use_of_the_Program_is_restricted_in // print_copyright.c:247 // 0x4081d0 // \\\"  8. If the distribution and/or use of the Program is restricted in\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  8. If the distribution and/or use of the Program is restricted in\\\")\\n        edi = str.certain_countries_either_by_patents_or_by_copyrighted_interfaces__the // print_copyright.c:248 // 0x408218 // \\\"certain countries either by patents or by copyrighted interfaces, the\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"certain countries either by patents or by copyrighted interfaces, the\\\")\\n        edi = str.original_copyright_holder_who_places_the_Program_under_this_License // print_copyright.c:249 // 0x408260 // \\\"original copyright holder who places the Program under this License\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"original copyright holder who places the Program under this License\\\")\\n        edi = str.may_add_an_explicit_geographical_distribution_limitation_excluding // print_copyright.c:250 // 0x4082a8 // \\\"may add an explicit geographical distribution limitation excluding\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"may add an explicit geographical distribution limitation excluding\\\")\\n        edi = str.those_countries__so_that_distribution_is_permitted_only_in_or_among // print_copyright.c:251 // 0x4082f0 // \\\"those countries, so that distribution is permitted only in or among\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"those countries, so that distribution is permitted only in or among\\\")\\n        edi = str.countries_not_thus_excluded.__In_such_case__this_License_incorporates // print_copyright.c:252 // 0x408338 // \\\"countries not thus excluded.  In such case, this License incorporates\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"countries not thus excluded.  In such case, this License incorporates\\\")\\n        edi = str.the_limitation_as_if_written_in_the_body_of_this_License. // print_copyright.c:253 // 0x408380 // \\\"the limitation as if written in the body of this License.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"the limitation as if written in the body of this License.\\\")\\n        edi = 0xa     // print_copyright.c:254 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__9._The_Free_Software_Foundation_may_publish_revised_and_or_new_versions // print_copyright.c:255 // 0x4083c0 // \\\"  9. The Free Software Foundation may publish revised and/or new versions\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  9. The Free Software Foundation may publish revised and/or new versions\\\")\\n        edi = str.of_the_General_Public_License_from_time_to_time.__Such_new_versions_will // print_copyright.c:256 // 0x408410 // \\\"of the General Public License from time to time.  Such new versions will\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"of the General Public License from time to time.  Such new versions will\\\")\\n        edi = str.be_similar_in_spirit_to_the_present_package_version__but_may_differ_in_detail_to // print_copyright.c:257 // 0x408460 // \\\"be similar in spirit to the present package_version, but may differ in detail to\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"be similar in spirit to the present package_version, but may differ in detail to\\\")\\n        edi = str.address_new_problems_or_concerns. // print_copyright.c:258 // 0x4084b8 // \\\"address new problems or concerns.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"address new problems or concerns.\\\")\\n        edi = 0xa     // print_copyright.c:259 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.Each_package_version_is_given_a_distinguishing_package_version_number.__If_the_Program // print_copyright.c:260 // 0x4084e0 // \\\"Each package_version is given a distinguishing package_version number.  If the Program\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Each package_version is given a distinguishing package_version number.  If the Program\\\")\\n        edi = str.specifies_a_package_version_number_of_this_License_which_applies_to_it_and__any // print_copyright.c:261 // 0x408538 // \\\"specifies a package_version number of this License which applies to it and \\\\\\\"any\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"specifies a package_version number of this License which applies to it and \\\\\\\"any\\\")\\n        edi = str.later_package_version___you_have_the_option_of_following_the_terms_and_conditions // print_copyright.c:262 // 0x408588 // \\\"later package_version\\\\\\\", you have the option of following the terms and conditions\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"later package_version\\\\\\\", you have the option of following the terms and conditions\\\")\\n        edi = str.either_of_that_package_version_or_of_any_later_package_version_published_by_the_Free // print_copyright.c:263 // 0x4085e0 // \\\"either of that package_version or of any later package_version published by the Free\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"either of that package_version or of any later package_version published by the Free\\\")\\n        edi = str.Software_Foundation.__If_the_Program_does_not_specify_a_package_version_number_of // print_copyright.c:264 // 0x408638 // \\\"Software Foundation.  If the Program does not specify a package_version number of\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Software Foundation.  If the Program does not specify a package_version number of\\\")\\n        edi = str.this_License__you_may_choose_any_package_version_ever_published_by_the_Free_Software // print_copyright.c:265 // 0x408690 // \\\"this License, you may choose any package_version ever published by the Free Software\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"this License, you may choose any package_version ever published by the Free Software\\\")\\n        edi = str.Foundation. // print_copyright.c:266 // 0x408e8b // \\\"Foundation.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Foundation.\\\")\\n        edi = 0xa     // print_copyright.c:267 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__10._If_you_wish_to_incorporate_parts_of_the_Program_into_other_free // print_copyright.c:268 // 0x4086e8 // \\\"  10. If you wish to incorporate parts of the Program into other free\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  10. If you wish to incorporate parts of the Program into other free\\\")\\n        edi = str.programs_whose_distribution_conditions_are_different__write_to_the_author // print_copyright.c:269 // 0x408730 // \\\"programs whose distribution conditions are different, write to the author\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"programs whose distribution conditions are different, write to the author\\\")\\n        edi = str.to_ask_for_permission.__For_software_which_is_copyrighted_by_the_Free // print_copyright.c:270 // 0x408780 // \\\"to ask for permission.  For software which is copyrighted by the Free\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"to ask for permission.  For software which is copyrighted by the Free\\\")\\n        edi = str.Software_Foundation__write_to_the_Free_Software_Foundation__we_sometimes // print_copyright.c:271 // 0x4087c8 // \\\"Software Foundation, write to the Free Software Foundation// we sometimes\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"Software Foundation, write to the Free Software Foundation// we sometimes\\\")\\n        edi = str.make_exceptions_for_this.__Our_decision_will_be_guided_by_the_two_goals // print_copyright.c:272 // 0x408818 // \\\"make exceptions for this.  Our decision will be guided by the two goals\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"make exceptions for this.  Our decision will be guided by the two goals\\\")\\n        edi = str.of_preserving_the_free_status_of_all_derivatives_of_our_free_software_and // print_copyright.c:273 // 0x408860 // \\\"of preserving the free status of all derivatives of our free software and\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"of preserving the free status of all derivatives of our free software and\\\")\\n        edi = str.of_promoting_the_sharing_and_reuse_of_software_generally. // print_copyright.c:274 // 0x4088b0 // \\\"of promoting the sharing and reuse of software generally.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"of promoting the sharing and reuse of software generally.\\\")\\n        edi = 0xa     // print_copyright.c:275 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str._t_t_t____NO_WARRANTY // print_copyright.c:276 // 0x408e97 // \\\"\\\\t\\\\t\\\\t    NO WARRANTY\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"\\\\t\\\\t\\\\t    NO WARRANTY\\\")\\n        edi = 0xa     // print_copyright.c:277 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__11._BECAUSE_THE_PROGRAM_IS_LICENSED_FREE_OF_CHARGE__THERE_IS_NO_WARRANTY // print_copyright.c:278 // 0x4088f0 // \\\"  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\\\")\\n        edi = str.FOR_THE_PROGRAM__TO_THE_EXTENT_PERMITTED_BY_APPLICABLE_LAW.__EXCEPT_WHEN // print_copyright.c:279 // 0x408940 // \\\"FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\\\")\\n        edi = str.OTHERWISE_STATED_IN_WRITING_THE_COPYRIGHT_HOLDERS_AND_OR_OTHER_PARTIES // print_copyright.c:280 // 0x408990 // \\\"OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\\\")\\n        edi = str.PROVIDE_THE_PROGRAM__AS_IS__WITHOUT_WARRANTY_OF_ANY_KIND__EITHER_EXPRESSED // print_copyright.c:281 // 0x4089d8 // \\\"PROVIDE THE PROGRAM \\\\\\\"AS IS\\\\\\\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"PROVIDE THE PROGRAM \\\\\\\"AS IS\\\\\\\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\\\")\\n        edi = str.OR_IMPLIED__INCLUDING__BUT_NOT_LIMITED_TO__THE_IMPLIED_WARRANTIES_OF // print_copyright.c:282 // 0x408a28 // \\\"OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\\\")\\n        edi = str.MERCHANTABILITY_AND_FITNESS_FOR_A_PARTICULAR_PURPOSE.__THE_ENTIRE_RISK_AS // print_copyright.c:283 // 0x408a70 // \\\"MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\\\")\\n        edi = str.TO_THE_QUALITY_AND_PERFORMANCE_OF_THE_PROGRAM_IS_WITH_YOU.__SHOULD_THE // print_copyright.c:284 // 0x408ac0 // \\\"TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\\\")\\n        edi = str.PROGRAM_PROVE_DEFECTIVE__YOU_ASSUME_THE_COST_OF_ALL_NECESSARY_SERVICING_ // print_copyright.c:285 // 0x408b08 // \\\"PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\\\")\\n        edi = str.REPAIR_OR_CORRECTION. // print_copyright.c:286 // 0x408eaa // \\\"REPAIR OR CORRECTION.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"REPAIR OR CORRECTION.\\\")\\n        edi = 0xa     // print_copyright.c:287 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str.__12._IN_NO_EVENT_UNLESS_REQUIRED_BY_APPLICABLE_LAW_OR_AGREED_TO_IN_WRITING // print_copyright.c:288 // 0x408b58 // \\\"  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\\\")\\n        edi = str.WILL_ANY_COPYRIGHT_HOLDER__OR_ANY_OTHER_PARTY_WHO_MAY_MODIFY_AND_OR // print_copyright.c:289 // 0x408ba8 // \\\"WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\\\")\\n        edi = str.REDISTRIBUTE_THE_PROGRAM_AS_PERMITTED_ABOVE__BE_LIABLE_TO_YOU_FOR_DAMAGES_ // print_copyright.c:290 // 0x408bf0 // \\\"REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\\\")\\n        edi = str.INCLUDING_ANY_GENERAL__SPECIAL__INCIDENTAL_OR_CONSEQUENTIAL_DAMAGES_ARISING // print_copyright.c:291 // 0x408c40 // \\\"INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\\\")\\n        edi = str.OUT_OF_THE_USE_OR_INABILITY_TO_USE_THE_PROGRAM__INCLUDING_BUT_NOT_LIMITED // print_copyright.c:292 // 0x408c90 // \\\"OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\\\")\\n        edi = str.TO_LOSS_OF_DATA_OR_DATA_BEING_RENDERED_INACCURATE_OR_LOSSES_SUSTAINED_BY // print_copyright.c:293 // 0x408ce0 // \\\"TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\\\")\\n        edi = str.YOU_OR_THIRD_PARTIES_OR_A_FAILURE_OF_THE_PROGRAM_TO_OPERATE_WITH_ANY_OTHER // print_copyright.c:294 // 0x408d30 // \\\"YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\\\")\\n        edi = str.PROGRAMS___EVEN_IF_SUCH_HOLDER_OR_OTHER_PARTY_HAS_BEEN_ADVISED_OF_THE // print_copyright.c:295 // 0x408d80 // \\\"PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\\\")\\n        edi = str.POSSIBILITY_OF_SUCH_DAMAGES. // print_copyright.c:296 // 0x408ec0 // \\\"POSSIBILITY OF SUCH DAMAGES.\\\" // const char *s\\n        sym.imp.puts  ()\\n        // int puts(\\\"POSSIBILITY OF SUCH DAMAGES.\\\")\\n        edi = 0xa     // print_copyright.c:297 // int c\\n        sym.imp.putchar  ()\\n        // int putchar(?)\\n        edi = str._t_t_____END_OF_TERMS_AND_CONDITIONS // print_copyright.c:298 // 0x408dc8 // \\\"\\\\t\\\\t     END OF TERMS AND CONDITIONS\\\"\\n        rsp += 8      // print_copyright.c:299\\n        goto loc_0x400800 // print_copyright.c:298 // sym.imp.puts // sym.imp.puts\\n        // int puts(\\\"\\\\t\\\\t     END OF TERMS AND CONDITIONS\\\")\\n         // (break)\\n}\\n\"}\n"