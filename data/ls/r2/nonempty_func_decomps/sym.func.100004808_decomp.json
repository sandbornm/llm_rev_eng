{"annotations":[{"start":64,"end":64,"offset":4294985736,"type":"offset"},{"start":112,"end":112,"offset":4294985736,"type":"offset"},{"start":132,"end":132,"offset":4294985737,"type":"offset"},{"start":150,"end":150,"offset":4294985740,"type":"offset"},{"start":170,"end":170,"offset":4294985742,"type":"offset"},{"start":190,"end":190,"offset":4294985744,"type":"offset"},{"start":210,"end":210,"offset":4294985746,"type":"offset"},{"start":230,"end":230,"offset":4294985748,"type":"offset"},{"start":250,"end":250,"offset":4294985749,"type":"offset"},{"start":270,"end":270,"offset":4294985753,"type":"offset"},{"start":315,"end":315,"offset":4294985755,"type":"offset"},{"start":344,"end":344,"offset":4294985757,"type":"offset"},{"start":392,"end":392,"offset":4294985757,"type":"offset"},{"start":415,"end":415,"offset":4294985764,"type":"offset"},{"start":431,"end":431,"offset":4294985766,"type":"offset"},{"start":489,"end":489,"offset":4294985773,"type":"offset"},{"start":534,"end":534,"offset":4294985777,"type":"offset"},{"start":580,"end":580,"offset":4294985780,"type":"offset"},{"start":610,"end":610,"offset":4294985783,"type":"offset"},{"start":646,"end":646,"offset":4294985785,"type":"offset"},{"start":683,"end":683,"offset":4294985785,"type":"offset"},{"start":733,"end":733,"offset":4294985790,"type":"offset"},{"start":757,"end":757,"offset":4294985793,"type":"offset"},{"start":843,"end":843,"offset":4294986291,"type":"offset"},{"start":905,"end":905,"offset":4294986291,"type":"offset"},{"start":978,"end":978,"offset":4294985799,"type":"offset"},{"start":996,"end":996,"offset":4294985802,"type":"offset"},{"start":1030,"end":1030,"offset":4294985805,"type":"offset"},{"start":1067,"end":1067,"offset":4294985807,"type":"offset"},{"start":1108,"end":1108,"offset":4294985807,"type":"offset"},{"start":1153,"end":1153,"offset":4294985812,"type":"offset"},{"start":1177,"end":1177,"offset":4294985815,"type":"offset"},{"start":1278,"end":1278,"offset":4294985817,"type":"offset"},{"start":1316,"end":1316,"offset":4294985819,"type":"offset"},{"start":1353,"end":1353,"offset":4294985822,"type":"offset"},{"start":1454,"end":1454,"offset":4294985827,"type":"offset"},{"start":1516,"end":1516,"offset":4294985827,"type":"offset"},{"start":1574,"end":1574,"offset":4294985834,"type":"offset"},{"start":1701,"end":1701,"offset":4294985836,"type":"offset"},{"start":1719,"end":1719,"offset":4294985839,"type":"offset"},{"start":1739,"end":1739,"offset":4294985843,"type":"offset"},{"start":1761,"end":1761,"offset":4294985844,"type":"offset"},{"start":1783,"end":1783,"offset":4294985846,"type":"offset"},{"start":1805,"end":1805,"offset":4294985848,"type":"offset"},{"start":1827,"end":1827,"offset":4294985850,"type":"offset"},{"start":1849,"end":1849,"offset":4294985852,"type":"offset"},{"start":1871,"end":1871,"offset":4294985853,"type":"offset"},{"start":1958,"end":1958,"offset":4294985853,"type":"offset"},{"start":2014,"end":2547,"offset":4294985853,"type":"offset"},{"start":3112,"end":3321,"offset":4294985853,"type":"offset"},{"start":3562,"end":3795,"offset":4294985853,"type":"offset"},{"start":4060,"end":4209,"offset":4294985853,"type":"offset"},{"start":4390,"end":4541,"offset":4294985853,"type":"offset"},{"start":4724,"end":4814,"offset":4294985853,"type":"offset"},{"start":4936,"end":5048,"offset":4294985853,"type":"offset"},{"start":5192,"end":5385,"offset":4294985853,"type":"offset"},{"start":5610,"end":5720,"offset":4294985853,"type":"offset"},{"start":5862,"end":5954,"offset":4294985853,"type":"offset"},{"start":6078,"end":6267,"offset":4294985853,"type":"offset"},{"start":6488,"end":6946,"offset":4294985853,"type":"offset"},{"start":7436,"end":7637,"offset":4294985853,"type":"offset"},{"start":7870,"end":7900,"offset":4294985853,"type":"offset"},{"start":7962,"end":8138,"offset":4294985853,"type":"offset"},{"start":8346,"end":8484,"offset":4294985853,"type":"offset"},{"start":8654,"end":8875,"offset":4294985853,"type":"offset"},{"start":9128,"end":9270,"offset":4294985853,"type":"offset"},{"start":9444,"end":9794,"offset":4294985853,"type":"offset"},{"start":10176,"end":10570,"offset":4294985853,"type":"offset"},{"start":10996,"end":11106,"offset":4294985853,"type":"offset"},{"start":11248,"end":11324,"offset":4294985853,"type":"offset"},{"start":11432,"end":11451,"offset":4294985853,"type":"offset"},{"start":11502,"end":11654,"offset":4294985853,"type":"offset"},{"start":11838,"end":11870,"offset":4294985853,"type":"offset"},{"start":11934,"end":12106,"offset":4294985853,"type":"offset"},{"start":12310,"end":12711,"offset":4294985853,"type":"offset"},{"start":13144,"end":13248,"offset":4294985853,"type":"offset"},{"start":13384,"end":13716,"offset":4294985853,"type":"offset"},{"start":14080,"end":14700,"offset":4294985853,"type":"offset"},{"start":15352,"end":15382,"offset":4294985853,"type":"offset"},{"start":15444,"end":15730,"offset":4294985853,"type":"offset"},{"start":16048,"end":16330,"offset":4294985853,"type":"offset"},{"start":16644,"end":16825,"offset":4294985853,"type":"offset"},{"start":17038,"end":17313,"offset":4294985853,"type":"offset"},{"start":17620,"end":17738,"offset":4294985853,"type":"offset"},{"start":17888,"end":18392,"offset":4294985853,"type":"offset"},{"start":18928,"end":19166,"offset":4294985853,"type":"offset"},{"start":19436,"end":19531,"offset":4294985853,"type":"offset"}],"code":"int sym.func.100004808 (int esi, int edx) {\n    loc_0x100004808:\n        // CALL XREF from main @ 0x100004641(x)\n        push  (rbp)\n        rbp = rsp\n        push  (r15)\n        push  (r14)\n        push  (r13)\n        push  (r12)\n        push  (rbx)\n        rsp -= 0x18\n        ecx = edx    // void *ftsen$INODE64t\n        ebx = edi    // arg1\n        rax = rip + 0x298 // sym.func.100004abc\n        // 0x100004abc\n        edx = 0\n        var = byte [0x100008638] - 0 // [0x100008638:1]=1\n        if  (!var) rdx = rax // void *compar\n        rdi = rsi    // const char *path_argv\n        dword [var_2ch] = ecx\n        esi = ecx    // int options\n        sym.imp.fts_open_INODE64  ()\n        // void *fts_open_INODE64(-1, -1, -1, -1)\n        var = rax & rax\n        if  (!var) goto loc_0x100004a33 // unlikely\n            \n    loc_0x100004a33:\n        // CODE XREF from sym.func.100004808 @ 0x100004841(x)\n        sym.func.100007228  ()\n         // } else {\n    loc_0x100004847:\n        r14 = rax\n        rdi = rax    // void*ftsp\n        esi = 0      // int opotions\n        sym.imp.fts_children_INODE64  ()\n        // void *fts_children_INODE64(?, -1)\n        var = rax & rax\n        if  (!var) goto loc_0x100004863 // likely\n        }\n        return eax;\n    loc_0x100004859:\n        edi = 0      // uint32_t arg1\n        rsi = rax    // int64_t arg2\n        sym.func.100004b25  () // sym.func.100004b25(0x0, 0x0)\n         // do {\n    loc_0x100004863:\n        // CODE XREF from sym.func.100004808 @ 0x100004857(x)\n        var = byte [0x100008657] - 1 // [0x100008658:1]=1\n        if  (var) goto loc_0x100004882 // unlikely\n         // } while (?);\n        }\n        return eax;\n    loc_0x10000486c:\n        rdi = r14\n        rsp += 0x18\n        rbx = pop  ()\n        r12 = pop  ()\n        r13 = pop  ()\n        r14 = pop  ()\n        r15 = pop  ()\n        rbp = pop  ()\n        goto loc_0x10000748e // sym.imp.fts_close_INODE64 // sym.imp.fts_close_INODE64\n        // int fts_close_INODE64(?)\n         // (break)             // CODE XREF from sym.func.100004808 @ 0x10000486a(x)\n             dword [var_30h] = ebx\n             ebx = byte [0x100008650] // [0x100008650:1]=1\n             sym.imp.__error  ()\n                                      // void __error(-1, -1, -1)\n             dword [rax] = 0\n             rdi = r14                // void*ftsp\n             sym.imp.fts_read_INODE64  ()\n                                      // void *fts_read_INODE64(?)\n             var = rax & rax\n             if  (!var) goto loc_0x100004a41 // likely\n\n    loc_0x100004882: // orphan\n             // CODE XREF from sym.func.100004808 @ 0x10000486a(x)\n             dword [var_30h] = ebx\n             ebx = byte [0x100008650] // [0x100008650:1]=1\n             sym.imp.__error  ()\n                                      // void __error(-1, -1, -1)\n             dword [rax] = 0\n             rdi = r14                // void*ftsp\n             sym.imp.fts_read_INODE64  ()\n                                      // void *fts_read_INODE64(?)\n             var = rax & rax\n             if  (!var) goto loc_0x100004a41 // likely\n         r13 = rax\n         eax = dword [var_2ch]\n         eax <<<= 5\n         ebx ^= 1\n         ebx <<<= 8\n         ebx &= eax\n         dword [opotions] = ebx\n         r12 = rip + 0x1c5        // 0x100004a88\n\n    loc_0x1000048a8: // orphan\n         r13 = rax\n         eax = dword [var_2ch]\n         eax <<<= 5\n         ebx ^= 1\n         ebx <<<= 8\n         ebx &= eax\n         dword [opotions] = ebx\n         r12 = rip + 0x1c5        // 0x100004a88\n         // CODE XREF from sym.func.100004808 @ 0x100004a17(x)\n         eax = dword [r13 + 0x58]\n         eax-\n         var = ax - 0xc\n         if  (((unsigned) var) > 0) goto case.0x1000048dd.3 // case.default.0x1000048dd // likely\n\n    loc_0x1000048c3: // orphan\n         // CODE XREF from sym.func.100004808 @ 0x100004a17(x)\n         eax = dword [r13 + 0x58]\n         eax-\n         var = ax - 0xc\n         if  (((unsigned) var) > 0) goto case.0x1000048dd.3 // case.default.0x1000048dd // likely\n         eax = ax\n         rax = dword [r12 + rax*4]\n         rax += r12\n         goto loc_rax             // switch table (13 cases) at 0x100004a88\n\n    loc_0x1000048d3: // orphan\n         eax = ax\n         rax = dword [r12 + rax*4]\n         rax += r12\n         goto loc_rax             // switch table (13 cases) at 0x100004a88\n         // CODE XREF from sym.func.100004808 @ 0x1000048dd(x)\n         var = word [r13 + 0x56] - 0\n         if  (!var) goto loc_0x1000048fb // likely\n\n    loc_0x1000048df: // orphan\n         // CODE XREF from sym.func.100004808 @ 0x1000048dd(x)\n         var = word [r13 + 0x56] - 0\n         if  (!var) goto loc_0x1000048fb // likely\n         var = byte [r13 + 0x68] - 0x2e\n         if  (var) goto loc_0x1000048fb // likely\n\n    loc_0x1000048e7: // orphan\n         var = byte [r13 + 0x68] - 0x2e\n         if  (var) goto loc_0x1000048fb // likely\n         var = byte [0x10000863c] & 1 // [0x10000863c:1]=1\n         if  (!var) goto loc_0x1000049ee // unlikely\n\n    loc_0x1000048ee: // orphan\n         var = byte [0x10000863c] & 1 // [0x10000863c:1]=1\n         if  (!var) goto loc_0x1000049ee // unlikely\n         // CODE XREFS from sym.func.100004808 @ 0x1000048e5(x), 0x1000048ec(x)\n         var = dword [0x1000085e0] - 0 // [0x1000085e0:4]=1\n         if  (!var) goto loc_0x100004917 // unlikely\n\n    loc_0x1000048fb: // orphan\n         // CODE XREFS from sym.func.100004808 @ 0x1000048e5(x), 0x1000048ec(x)\n         var = dword [0x1000085e0] - 0 // [0x1000085e0:4]=1\n         if  (!var) goto loc_0x100004917 // unlikely\n         rax = qword [r13 + 0x60]\n         var = rax & rax\n         if  (!var) goto loc_0x100004917 // likely\n\n    loc_0x100004904: // orphan\n         rax = qword [r13 + 0x60]\n         var = rax & rax\n         if  (!var) goto loc_0x100004917 // likely\n         var = byte [rax + 0x77] & 0x40\n         if  (var) goto loc_0x1000049ee // unlikely\n\n    loc_0x10000490d: // orphan\n         var = byte [rax + 0x77] & 0x40\n         if  (var) goto loc_0x1000049ee // unlikely\n         // CODE XREFS from sym.func.100004808 @ 0x100004902(x), 0x10000490b(x)\n         var = byte [0x10000867b] - 1 // [0x10000867c:1]=0\n         if  (var) goto loc_0x100004976 // likely\n\n    loc_0x100004917: // orphan\n         // CODE XREFS from sym.func.100004808 @ 0x100004902(x), 0x10000490b(x)\n         var = byte [0x10000867b] - 1 // [0x10000867c:1]=0\n         if  (var) goto loc_0x100004976 // likely\n         edi = 0xa                // int c\n         sym.imp.putchar  ()\n                                  // int putchar(0x00000700)\n         rdi = qword [r13 + 0x30] // int64_t arg1\n         sym.func.1000056ef  ()   // sym.func.1000056ef(0x0)\n         rdi = rip + 0x3293       // \":\"\n                                  // 0x100007bcd // const char *s\n         sym.imp.puts  ()\n                                  // int puts(\":\")\n         goto loc_0x100004998\n\n    loc_0x100004920: // orphan\n         edi = 0xa                // int c\n         sym.imp.putchar  ()\n                                  // int putchar(0x00000700)\n         rdi = qword [r13 + 0x30] // int64_t arg1\n         sym.func.1000056ef  ()   // sym.func.1000056ef(0x0)\n         rdi = rip + 0x3293       // \":\"\n                                  // 0x100007bcd // const char *s\n         sym.imp.puts  ()\n                                  // int puts(\":\")\n         goto loc_0x100004998\n         // CODE XREF from sym.func.100004808 @ 0x1000048dd(x)\n         ebx = dword [r13 + 0x38]\n         var = ebx & ebx\n         if  (!var) goto loc_0x1000049fe // case.default.0x1000048dd // likely\n\n    loc_0x100004941: // orphan\n         // CODE XREF from sym.func.100004808 @ 0x1000048dd(x)\n         ebx = dword [r13 + 0x38]\n         var = ebx & ebx\n         if  (!var) goto loc_0x1000049fe // case.default.0x1000048dd // likely\n         goto loc_0x100004a3a\n\n    loc_0x10000494d: // orphan\n         goto loc_0x100004a3a\n         // CODE XREF from sym.func.100004808 @ 0x1000048dd(x)\n         var = byte [var_2ch] & 2\n         if  (!var) goto loc_0x1000049fe // case.default.0x1000048dd // likely\n\n    loc_0x100004952: // orphan\n         // CODE XREF from sym.func.100004808 @ 0x1000048dd(x)\n         var = byte [var_2ch] & 2\n         if  (!var) goto loc_0x1000049fe // case.default.0x1000048dd // likely\n         var = byte [0x10000857c] - 0 // [0x10000857c:1]=0\n         if  (!var) goto loc_0x1000049fe // case.default.0x1000048dd // likely\n\n    loc_0x10000495c: // orphan\n         var = byte [0x10000857c] - 0 // [0x10000857c:1]=0\n         if  (!var) goto loc_0x1000049fe // case.default.0x1000048dd // likely\n         rdi = r13                // int64_t arg1\n         sym.func.1000072b1  ()   // sym.func.1000072b1(0x0)\n         goto loc_0x1000049fe     // case.default.0x1000048dd // case.default.0x1000048dd(0x0, 0x0, 0x0, 0x0)\n\n    loc_0x100004969: // orphan\n         rdi = r13                // int64_t arg1\n         sym.func.1000072b1  ()   // sym.func.1000072b1(0x0)\n         goto loc_0x1000049fe     // case.default.0x1000048dd // case.default.0x1000048dd(0x0, 0x0, 0x0, 0x0)\n         // CODE XREF from sym.func.100004808 @ 0x10000491e(x)\n         var = dword [var_30h] - 2\n         jl 0x100004998           // likely\n\n    loc_0x100004976: // orphan\n         // CODE XREF from sym.func.100004808 @ 0x10000491e(x)\n         var = dword [var_30h] - 2\n         jl 0x100004998           // likely\n         rdi = qword [r13 + 0x30] // int64_t arg1\n         sym.func.1000056ef  ()   // sym.func.1000056ef(0x0)\n         rdi = rip + 0x3241       // \":\"\n                                  // 0x100007bcd // const char *s\n         sym.imp.puts  ()\n                                  // int puts(\":\")\n         byte [0x10000867c] = 1   // [0x10000867c:1]=0\n\n    loc_0x10000497c: // orphan\n         rdi = qword [r13 + 0x30] // int64_t arg1\n         sym.func.1000056ef  ()   // sym.func.1000056ef(0x0)\n         rdi = rip + 0x3241       // \":\"\n                                  // 0x100007bcd // const char *s\n         sym.imp.puts  ()\n                                  // int puts(\":\")\n         byte [0x10000867c] = 1   // [0x10000867c:1]=0\n         // CODE XREFS from sym.func.100004808 @ 0x10000493f(x), 0x10000497a(x)\n         rdi = r14                // void*ftsp\n         esi = dword [opotions]   // int opotions\n         sym.imp.fts_children_INODE64  ()\n                                  // void *fts_children_INODE64(?, -1)\n         r15 = rax\n         var = byte [var_2ch] & 2\n         if  (!var) goto loc_0x1000049d5 // likely\n\n    loc_0x100004998: // orphan\n         // CODE XREFS from sym.func.100004808 @ 0x10000493f(x), 0x10000497a(x)\n         rdi = r14                // void*ftsp\n         esi = dword [opotions]   // int opotions\n         sym.imp.fts_children_INODE64  ()\n                                  // void *fts_children_INODE64(?, -1)\n         r15 = rax\n         var = byte [var_2ch] & 2\n         if  (!var) goto loc_0x1000049d5 // likely\n         var = byte [0x10000857c] - 0 // [0x10000857c:1]=0\n         if  (!var) goto loc_0x1000049d5 // likely\n\n    loc_0x1000049ac: // orphan\n         var = byte [0x10000857c] - 0 // [0x10000857c:1]=0\n         if  (!var) goto loc_0x1000049d5 // likely\n         var = r15 & r15\n         if  (!var) goto loc_0x1000049d5 // likely\n\n    loc_0x1000049b5: // orphan\n         var = r15 & r15\n         if  (!var) goto loc_0x1000049d5 // likely\n         rax = r15\n\n    loc_0x1000049ba: // orphan\n         rax = r15\n         // CODE XREF from sym.func.100004808 @ 0x1000049d3(x)\n         var = word [rax + 0x58] - 0xd\n         if  (var) goto loc_0x1000049cc // likely\n\n    loc_0x1000049bd: // orphan\n         // CODE XREF from sym.func.100004808 @ 0x1000049d3(x)\n         var = word [rax + 0x58] - 0xd\n         if  (var) goto loc_0x1000049cc // likely\n         qword [rax + 0x18] = 1\n\n    loc_0x1000049c4: // orphan\n         qword [rax + 0x18] = 1\n         // CODE XREF from sym.func.100004808 @ 0x1000049c2(x)\n         rax = qword [rax + 0x10]\n         var = rax & rax\n         if  (var) goto loc_0x1000049bd // likely\n\n    loc_0x1000049cc: // orphan\n         // CODE XREF from sym.func.100004808 @ 0x1000049c2(x)\n         rax = qword [rax + 0x10]\n         var = rax & rax\n         if  (var) goto loc_0x1000049bd // likely\n         // CODE XREFS from sym.func.100004808 @ 0x1000049aa(x), 0x1000049b3(x), 0x1000049b8(x)\n         rdi = r13                // uint32_t arg1\n         rsi = r15                // int64_t arg2\n         sym.func.100004b25  ()   // sym.func.100004b25(0x0, 0x0)\n         var = byte [0x10000864f] - 1 // [0x100008650:1]=1\n         if  (!var) goto loc_0x1000049fe // case.default.0x1000048dd // likely\n\n    loc_0x1000049d5: // orphan\n         // CODE XREFS from sym.func.100004808 @ 0x1000049aa(x), 0x1000049b3(x), 0x1000049b8(x)\n         rdi = r13                // uint32_t arg1\n         rsi = r15                // int64_t arg2\n         sym.func.100004b25  ()   // sym.func.100004b25(0x0, 0x0)\n         var = byte [0x10000864f] - 1 // [0x100008650:1]=1\n         if  (!var) goto loc_0x1000049fe // case.default.0x1000048dd // likely\n         var = r15 & r15\n         if  (!var) goto loc_0x1000049fe // case.default.0x1000048dd // likely\n\n    loc_0x1000049e9: // orphan\n         var = r15 & r15\n         if  (!var) goto loc_0x1000049fe // case.default.0x1000048dd // likely\n         // CODE XREFS from sym.func.100004808 @ 0x1000048f5(x), 0x100004911(x)\n         rdi = r14                // void*ftsp\n         rsi = r13                // void*f\n         edx = 4                  // int options\n         sym.imp.fts_set_INODE64  ()\n                                  // int fts_set_INODE64(?, ?, 0x02000000)\n\n    loc_0x1000049ee: // orphan\n         // CODE XREFS from sym.func.100004808 @ 0x1000048f5(x), 0x100004911(x)\n         rdi = r14                // void*ftsp\n         rsi = r13                // void*f\n         edx = 4                  // int options\n         sym.imp.fts_set_INODE64  ()\n                                  // int fts_set_INODE64(?, ?, 0x02000000)\n         // XREFS: CODE 0x1000048cd  CODE 0x1000048dd  CODE 0x100004947  \n         // XREFS: CODE 0x100004956  CODE 0x100004963  CODE 0x100004971  \n         // XREFS: CODE 0x1000049e7  CODE 0x1000049ec  CODE 0x100004a27  \n         // XREFS: CODE 0x100004a31  \n         sym.imp.__error  ()\n                                  // void __error(-1, -1, -1)\n         dword [rax] = 0\n         rdi = r14                // void*ftsp\n         sym.imp.fts_read_INODE64  ()\n                                  // void *fts_read_INODE64(?)\n         r13 = rax\n         var = rax & rax\n         if  (var) goto loc_0x1000048c3 // unlikely\n\n    loc_0x1000049fe: // orphan\n         // XREFS: CODE 0x1000048cd  CODE 0x1000048dd  CODE 0x100004947  \n         // XREFS: CODE 0x100004956  CODE 0x100004963  CODE 0x100004971  \n         // XREFS: CODE 0x1000049e7  CODE 0x1000049ec  CODE 0x100004a27  \n         // XREFS: CODE 0x100004a31  \n         sym.imp.__error  ()\n                                  // void __error(-1, -1, -1)\n         dword [rax] = 0\n         rdi = r14                // void*ftsp\n         sym.imp.fts_read_INODE64  ()\n                                  // void *fts_read_INODE64(?)\n         r13 = rax\n         var = rax & rax\n         if  (var) goto loc_0x1000048c3 // unlikely\n         goto loc_0x100004a41\n\n    loc_0x100004a1d: // orphan\n         goto loc_0x100004a41\n         // CODE XREF from sym.func.100004808 @ 0x1000048dd(x)\n         rdi = r13                // int64_t errnum\n         sym.func.10000727d  ()   // sym.func.10000727d(0x0)\n         goto loc_0x1000049fe     // case.default.0x1000048dd // case.default.0x1000048dd(0x0, 0x0, 0x0, 0x0)\n\n    loc_0x100004a1f: // orphan\n         // CODE XREF from sym.func.100004808 @ 0x1000048dd(x)\n         rdi = r13                // int64_t errnum\n         sym.func.10000727d  ()   // sym.func.10000727d(0x0)\n         goto loc_0x1000049fe     // case.default.0x1000048dd // case.default.0x1000048dd(0x0, 0x0, 0x0, 0x0)\n         // CODE XREF from sym.func.100004808 @ 0x1000048dd(x)\n         rdi = r13                // char *arg1\n         sym.func.100007252  ()   // sym.func.100007252(0x0)\n         goto loc_0x1000049fe     // case.default.0x1000048dd // case.default.0x1000048dd(0x0, 0x0, 0x0, 0x0)\n\n    loc_0x100004a29: // orphan\n         // CODE XREF from sym.func.100004808 @ 0x1000048dd(x)\n         rdi = r13                // char *arg1\n         sym.func.100007252  ()   // sym.func.100007252(0x0)\n         goto loc_0x1000049fe     // case.default.0x1000048dd // case.default.0x1000048dd(0x0, 0x0, 0x0, 0x0)\n         // CODE XREF from sym.func.100004808 @ 0x10000494d(x)\n         sym.imp.__error  ()\n                                  // void __error(-1, -1, -1)\n         dword [rax] = ebx\n\n    loc_0x100004a3a: // orphan\n         // CODE XREF from sym.func.100004808 @ 0x10000494d(x)\n         sym.imp.__error  ()\n                                  // void __error(-1, -1, -1)\n         dword [rax] = ebx\n         // CODE XREFS from sym.func.100004808 @ 0x1000048a2(x), 0x100004a1d(x)\n         sym.imp.__error  ()\n                                  // void __error(-1, -1, -1)\n         ebx = 1\n         var = dword [rax] - 0x51\n         if  (!var) goto loc_0x100004a57 // unlikely\n\n    loc_0x100004a41: // orphan\n         // CODE XREFS from sym.func.100004808 @ 0x1000048a2(x), 0x100004a1d(x)\n         sym.imp.__error  ()\n                                  // void __error(-1, -1, -1)\n         ebx = 1\n         var = dword [rax] - 0x51\n         if  (!var) goto loc_0x100004a57 // unlikely\n         sym.imp.__error  ()\n                                  // void __error(-1, -1, -1)\n         ebx = dword [rax]\n\n    loc_0x100004a50: // orphan\n         sym.imp.__error  ()\n                                  // void __error(-1, -1, -1)\n         ebx = dword [rax]\n         // CODE XREF from sym.func.100004808 @ 0x100004a4e(x)\n         rdi = r14                // int status\n         sym.imp.fts_close_INODE64  ()\n                                  // int fts_close_INODE64(?)\n         sym.imp.__error  ()\n                                  // void __error(-1, -1, -1)\n         dword [rax] = ebx\n         sym.imp.__error  ()\n                                  // void __error(-1, -1, -1)\n         var = dword [rax] - 0\n         if  (var) goto loc_0x100004a7f // unlikely\n\n    loc_0x100004a57: // orphan\n         // CODE XREF from sym.func.100004808 @ 0x100004a4e(x)\n         rdi = r14                // int status\n         sym.imp.fts_close_INODE64  ()\n                                  // int fts_close_INODE64(?)\n         sym.imp.__error  ()\n                                  // void __error(-1, -1, -1)\n         dword [rax] = ebx\n         sym.imp.__error  ()\n                                  // void __error(-1, -1, -1)\n         var = dword [rax] - 0\n         if  (var) goto loc_0x100004a7f // unlikely\n         // CODE XREFS from case.0x1000048dd.2 @ +0xf(x), +0x5b(x)\n         rsp += 0x18\n         rbx = pop  ()\n         r12 = pop  ()\n         r13 = pop  ()\n         r14 = pop  ()\n         r15 = pop  ()\n         rbp = pop  ()\n         re\n\n    loc_0x100004a70: // orphan\n         // CODE XREFS from case.0x1000048dd.2 @ +0xf(x), +0x5b(x)\n         rsp += 0x18\n         rbx = pop  ()\n         r12 = pop  ()\n         r13 = pop  ()\n         r14 = pop  ()\n         r15 = pop  ()\n         rbp = pop  ()\n         re\n         // CODE XREF from sym.func.100004808 @ 0x100004a6e(x)\n         sym.func.10000723d  ()\n\n    loc_0x100004a7f: // orphan\n         // CODE XREF from sym.func.100004808 @ 0x100004a6e(x)\n         sym.func.10000723d  ()\n\n}\n"}
