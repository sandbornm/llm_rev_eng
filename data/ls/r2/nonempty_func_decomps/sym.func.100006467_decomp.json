"{\"annotations\":[{\"start\":64,\"end\":64,\"offset\":4294992999,\"type\":\"offset\"},{\"start\":112,\"end\":112,\"offset\":4294992999,\"type\":\"offset\"},{\"start\":132,\"end\":132,\"offset\":4294993000,\"type\":\"offset\"},{\"start\":150,\"end\":150,\"offset\":4294993003,\"type\":\"offset\"},{\"start\":170,\"end\":170,\"offset\":4294993005,\"type\":\"offset\"},{\"start\":190,\"end\":190,\"offset\":4294993007,\"type\":\"offset\"},{\"start\":210,\"end\":210,\"offset\":4294993009,\"type\":\"offset\"},{\"start\":230,\"end\":230,\"offset\":4294993011,\"type\":\"offset\"},{\"start\":250,\"end\":250,\"offset\":4294993012,\"type\":\"offset\"},{\"start\":270,\"end\":270,\"offset\":4294993013,\"type\":\"offset\"},{\"start\":304,\"end\":304,\"offset\":4294993016,\"type\":\"offset\"},{\"start\":328,\"end\":328,\"offset\":4294993019,\"type\":\"offset\"},{\"start\":412,\"end\":412,\"offset\":4294993184,\"type\":\"offset\"},{\"start\":491,\"end\":491,\"offset\":4294993184,\"type\":\"offset\"},{\"start\":508,\"end\":508,\"offset\":4294993188,\"type\":\"offset\"},{\"start\":530,\"end\":530,\"offset\":4294993189,\"type\":\"offset\"},{\"start\":552,\"end\":552,\"offset\":4294993191,\"type\":\"offset\"},{\"start\":574,\"end\":574,\"offset\":4294993193,\"type\":\"offset\"},{\"start\":596,\"end\":596,\"offset\":4294993195,\"type\":\"offset\"},{\"start\":618,\"end\":618,\"offset\":4294993197,\"type\":\"offset\"},{\"start\":640,\"end\":640,\"offset\":4294993198,\"type\":\"offset\"},{\"start\":693,\"end\":693,\"offset\":4294993025,\"type\":\"offset\"},{\"start\":722,\"end\":722,\"offset\":4294993028,\"type\":\"offset\"},{\"start\":777,\"end\":777,\"offset\":4294993028,\"type\":\"offset\"},{\"start\":809,\"end\":809,\"offset\":4294993035,\"type\":\"offset\"},{\"start\":856,\"end\":1022,\"offset\":4294993035,\"type\":\"offset\"},{\"start\":1220,\"end\":1610,\"offset\":4294993035,\"type\":\"offset\"},{\"start\":2032,\"end\":2183,\"offset\":4294993035,\"type\":\"offset\"},{\"start\":2366,\"end\":2783,\"offset\":4294993035,\"type\":\"offset\"},{\"start\":3232,\"end\":3463,\"offset\":4294993035,\"type\":\"offset\"},{\"start\":3726,\"end\":3915,\"offset\":4294993035,\"type\":\"offset\"},{\"start\":4136,\"end\":4214,\"offset\":4294993035,\"type\":\"offset\"},{\"start\":4324,\"end\":4632,\"offset\":4294993035,\"type\":\"offset\"}],\"code\":\"int sym.func.100006467 (int esi, int edx) {\\n    loc_0x100006467:\\n        // DATA XREF from main @ 0x1000045cc(r)\\n        push  (rbp)\\n        rbp = rsp\\n        push  (r15)\\n        push  (r14)\\n        push  (r13)\\n        push  (r12)\\n        push  (rbx)\\n        push  (rax)\\n        rbx = qword [rdi] // arg1\\n        var = rbx & rbx\\n        if  (!var) goto loc_0x100006520 // likely\\n            \\n    loc_0x100006520:\\n        // CODE XREFS from sym.func.100006467 @ 0x10000647b(x), 0x100006506(x)\\n        rsp += 8\\n        rbx = pop  ()\\n        r12 = pop  ()\\n        r13 = pop  ()\\n        r14 = pop  ()\\n        r15 = pop  ()\\n        rbp = pop  ()\\n        re\\n         // } else {\\n    loc_0x100006481:\\n        r14 = rdi    // arg1\\n        r13 = rip + 0x20c5 // section.10.__DATA.__data\\n        // 0x100008550 // U\\\"P.\\\"\\n        r12d = 0\\n        }\\n        return eax;             // CODE XREF from sym.func.100006467 @ 0x100006501(x)\\n             var = qword [rbx + 0x18] - 1\\n             if  (!var) goto loc_0x1000064fa // unlikely\\n\\n    loc_0x10000648e: // orphan\\n             // CODE XREF from sym.func.100006467 @ 0x100006501(x)\\n             var = qword [rbx + 0x18] - 1\\n             if  (!var) goto loc_0x1000064fa // unlikely\\n         rdi = rbx + 0x68         // const char *s\\n         sym.imp.strlen  ()\\n                                  // size_t strlen(\\\"\\\")\\n         rcx = r12d\\n         rcx += rax\\n         eax = 0\\n         var = qword [rbx + 0x10] - 0\\n         al = ne\\n         rax = rcx + rax*2\\n         ecx = dword [r13]\\n         var = rax - rcx\\n         if  (((unsigned) var) < 0) goto 0x1000064c8 // unlikely\\n\\n    loc_0x100006495: // orphan\\n         rdi = rbx + 0x68         // const char *s\\n         sym.imp.strlen  ()\\n                                  // size_t strlen(\\\"\\\")\\n         rcx = r12d\\n         rcx += rax\\n         eax = 0\\n         var = qword [rbx + 0x10] - 0\\n         al = ne\\n         rax = rcx + rax*2\\n         ecx = dword [r13]\\n         var = rax - rcx\\n         if  (((unsigned) var) < 0) goto 0x1000064c8 // unlikely\\n         edi = 0xa                // int c\\n         sym.imp.putchar  ()\\n                                  // int putchar(0x00000000)\\n         r12d = 0\\n\\n    loc_0x1000064bb: // orphan\\n         edi = 0xa                // int c\\n         sym.imp.putchar  ()\\n                                  // int putchar(0x00000000)\\n         r12d = 0\\n         // CODE XREF from sym.func.100006467 @ 0x1000064b9(x)\\n         r15d = r12d\\n         edx = dword [r14 + 0x18]\\n         esi = dword [r14 + 0x24] // int64_t arg3\\n         rdi = rbx                // int64_t arg1\\n         sym.func.100005604  ()   // sym.func.100005604(0x0, 0x0)\\n         r12d = eax\\n         r12d += r15d\\n         var = qword [rbx + 0x10] - 0\\n         if  (!var) goto loc_0x1000064fa // unlikely\\n\\n    loc_0x1000064c8: // orphan\\n         // CODE XREF from sym.func.100006467 @ 0x1000064b9(x)\\n         r15d = r12d\\n         edx = dword [r14 + 0x18]\\n         esi = dword [r14 + 0x24] // int64_t arg3\\n         rdi = rbx                // int64_t arg1\\n         sym.func.100005604  ()   // sym.func.100005604(0x0, 0x0)\\n         r12d = eax\\n         r12d += r15d\\n         var = qword [rbx + 0x10] - 0\\n         if  (!var) goto loc_0x1000064fa // unlikely\\n         rdi = rip + 0x17a8       // \\\", \\\"\\n                                  // 0x100007c97 // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\", \\\")\\n         r12d += 2\\n\\n    loc_0x1000064e8: // orphan\\n         rdi = rip + 0x17a8       // \\\", \\\"\\n                                  // 0x100007c97 // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\", \\\")\\n         r12d += 2\\n         // CODE XREFS from sym.func.100006467 @ 0x100006493(x), 0x1000064e6(x)\\n         rbx = qword [rbx + 0x10]\\n         var = rbx & rbx\\n         if  (var) goto loc_0x10000648e // likely\\n\\n    loc_0x1000064fa: // orphan\\n         // CODE XREFS from sym.func.100006467 @ 0x100006493(x), 0x1000064e6(x)\\n         rbx = qword [rbx + 0x10]\\n         var = rbx & rbx\\n         if  (var) goto loc_0x10000648e // likely\\n         var = r12d & r12d\\n         if  (!var) goto loc_0x100006520 // likely\\n\\n    loc_0x100006503: // orphan\\n         var = r12d & r12d\\n         if  (!var) goto loc_0x100006520 // likely\\n         edi = 0xa\\n         rsp += 8\\n         rbx = pop  ()\\n         r12 = pop  ()\\n         r13 = pop  ()\\n         r14 = pop  ()\\n         r15 = pop  ()\\n         rbp = pop  ()\\n         goto loc_0x100007518     // sym.imp.putchar // sym.imp.putchar\\n                                  // int putchar(0x00000000)\\n\\n    loc_0x100006508: // orphan\\n         edi = 0xa\\n         rsp += 8\\n         rbx = pop  ()\\n         r12 = pop  ()\\n         r13 = pop  ()\\n         r14 = pop  ()\\n         r15 = pop  ()\\n         rbp = pop  ()\\n         goto loc_0x100007518     // sym.imp.putchar // sym.imp.putchar\\n                                  // int putchar(0x00000000)\\n\\n}\\n\"}\n"