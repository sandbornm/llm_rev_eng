{"annotations":[{"start":64,"end":64,"offset":4294995097,"type":"offset"},{"start":126,"end":126,"offset":4294995097,"type":"offset"},{"start":146,"end":146,"offset":4294995098,"type":"offset"},{"start":164,"end":164,"offset":4294995101,"type":"offset"},{"start":184,"end":184,"offset":4294995103,"type":"offset"},{"start":204,"end":204,"offset":4294995105,"type":"offset"},{"start":224,"end":224,"offset":4294995107,"type":"offset"},{"start":244,"end":244,"offset":4294995109,"type":"offset"},{"start":264,"end":264,"offset":4294995110,"type":"offset"},{"start":284,"end":284,"offset":4294995117,"type":"offset"},{"start":313,"end":313,"offset":4294995120,"type":"offset"},{"start":380,"end":380,"offset":4294995127,"type":"offset"},{"start":406,"end":406,"offset":4294995130,"type":"offset"},{"start":436,"end":436,"offset":4294995134,"type":"offset"},{"start":457,"end":457,"offset":4294995137,"type":"offset"},{"start":479,"end":479,"offset":4294995144,"type":"offset"},{"start":508,"end":508,"offset":4294995148,"type":"offset"},{"start":544,"end":544,"offset":4294995153,"type":"offset"},{"start":580,"end":580,"offset":4294995158,"type":"offset"},{"start":616,"end":616,"offset":4294995163,"type":"offset"},{"start":652,"end":652,"offset":4294995168,"type":"offset"},{"start":688,"end":688,"offset":4294995173,"type":"offset"},{"start":724,"end":724,"offset":4294995178,"type":"offset"},{"start":760,"end":760,"offset":4294995183,"type":"offset"},{"start":815,"end":815,"offset":4294995186,"type":"offset"},{"start":877,"end":877,"offset":4294995186,"type":"offset"},{"start":954,"end":1464,"offset":4294995186,"type":"offset"},{"start":2006,"end":2118,"offset":4294995186,"type":"offset"},{"start":2262,"end":2338,"offset":4294995186,"type":"offset"},{"start":2446,"end":2568,"offset":4294995186,"type":"offset"},{"start":2722,"end":2906,"offset":4294995186,"type":"offset"},{"start":3122,"end":3678,"offset":4294995186,"type":"offset"},{"start":4266,"end":4465,"offset":4294995186,"type":"offset"},{"start":4696,"end":4836,"offset":4294995186,"type":"offset"},{"start":5008,"end":5213,"offset":4294995186,"type":"offset"},{"start":5450,"end":5595,"offset":4294995186,"type":"offset"},{"start":5772,"end":5811,"offset":4294995186,"type":"offset"},{"start":5882,"end":6167,"offset":4294995186,"type":"offset"},{"start":6484,"end":6701,"offset":4294995186,"type":"offset"},{"start":6950,"end":7168,"offset":4294995186,"type":"offset"},{"start":7418,"end":7663,"offset":4294995186,"type":"offset"},{"start":7940,"end":8131,"offset":4294995186,"type":"offset"},{"start":8354,"end":8520,"offset":4294995186,"type":"offset"}],"code":"int sym.func.100006c99 (int esi, int edx) {\n    loc_0x100006c99:\n        // CODE XREF from sym.func.1000056ef @ 0x10000571a(x)\n        push  (rbp)\n        rbp = rsp\n        push  (r15)\n        push  (r14)\n        push  (r13)\n        push  (r12)\n        push  (rbx)\n        rsp -= 0x98\n        rbx = rdi    // arg1\n        rax = qword [reloc.__stack_chk_guard] // [0x100008010:8]=0\n        rax = qword [rax]\n        qword [var_30h] = rax\n        xmm0 ^= xmm0\n        r15 = var_b0h\n        xmmword [r15] = xmm0\n        xmmword [r15 + 0x10] = xmm0\n        xmmword [r15 + 0x20] = xmm0\n        xmmword [r15 + 0x30] = xmm0\n        xmmword [r15 + 0x40] = xmm0\n        xmmword [r15 + 0x50] = xmm0\n        xmmword [r15 + 0x60] = xmm0\n        xmmword [r15 + 0x70] = xmm0\n        r14d = 0\n         // do {\n    loc_0x100006cf2:\n        // CODE XREF from sym.func.100006c99 @ 0x100006de1(x)\n        r12 = var_b4h\n         // } while (?);\n        }\n        return eax;             // CODE XREFS from sym.func.100006c99 @ 0x100006d84(x), 0x100006da7(x)\n             edx = 6                  // size_t n\n             rdi = r12                // wchar_t *pwc\n             rsi = rbx                // const char *s\n             rcx = r15                // mbstate_t *ps\n             sym.imp.mbrtowc  ()\n                                      // size_t mbrtowc(?, -1, 0x00010000, ?)\n             var = rax - 0xffffffffffffffff\n             if  (!var) goto loc_0x100006d48 // unlikely\n\n    loc_0x100006cf9: // orphan\n             // CODE XREFS from sym.func.100006c99 @ 0x100006d84(x), 0x100006da7(x)\n             edx = 6                  // size_t n\n             rdi = r12                // wchar_t *pwc\n             rsi = rbx                // const char *s\n             rcx = r15                // mbstate_t *ps\n             sym.imp.mbrtowc  ()\n                                      // size_t mbrtowc(?, -1, 0x00010000, ?)\n             var = rax - 0xffffffffffffffff\n             if  (!var) goto loc_0x100006d48 // unlikely\n         r13 = rax\n         var = rax - 0xfffffffffffffffe\n         if  (!var) goto loc_0x100006de6 // unlikely\n\n    loc_0x100006d12: // orphan\n         r13 = rax\n         var = rax - 0xfffffffffffffffe\n         if  (!var) goto loc_0x100006de6 // unlikely\n         var = r13 & r13\n         if  (!var) goto loc_0x100006df3 // likely\n\n    loc_0x100006d1f: // orphan\n         var = r13 & r13\n         if  (!var) goto loc_0x100006df3 // likely\n         edi = dword [var_b4h]\n         var = rdi - 0x7f\n         if  (((unsigned) var) > 0) goto 0x100006d89 // unlikely\n\n    loc_0x100006d28: // orphan\n         edi = dword [var_b4h]\n         var = rdi - 0x7f\n         if  (((unsigned) var) > 0) goto 0x100006d89 // unlikely\n         rax = qword [reloc._DefaultRuneLocale] // [0x100008008:8]=0\n         eax = dword [rax + rdi*4 + 0x3c]\n         ecx = 0x40000\n         eax &= ecx\n         goto loc_0x100006d93\n\n    loc_0x100006d34: // orphan\n         rax = qword [reloc._DefaultRuneLocale] // [0x100008008:8]=0\n         eax = dword [rax + rdi*4 + 0x3c]\n         ecx = 0x40000\n         eax &= ecx\n         goto loc_0x100006d93\n         // CODE XREF from sym.func.100006c99 @ 0x100006d10(x)\n         edi = 0x3f               // '?' // int c\n         sym.imp.putchar  ()\n                                  // int putchar(0x00000000)\n         rbx+\n         r14d+\n         xmm0 ^= xmm0\n         xmmword [var_b0h] = xmm0\n         xmmword [var_a0h] = xmm0\n         xmmword [var_90h] = xmm0\n         xmmword [var_80h] = xmm0\n         xmmword [var_70h] = xmm0\n         xmmword [var_60h] = xmm0\n         xmmword [var_50h] = xmm0\n         xmmword [var_40h] = xmm0\n         goto loc_0x100006cf9\n\n    loc_0x100006d48: // orphan\n         // CODE XREF from sym.func.100006c99 @ 0x100006d10(x)\n         edi = 0x3f               // '?' // int c\n         sym.imp.putchar  ()\n                                  // int putchar(0x00000000)\n         rbx+\n         r14d+\n         xmm0 ^= xmm0\n         xmmword [var_b0h] = xmm0\n         xmmword [var_a0h] = xmm0\n         xmmword [var_90h] = xmm0\n         xmmword [var_80h] = xmm0\n         xmmword [var_70h] = xmm0\n         xmmword [var_60h] = xmm0\n         xmmword [var_50h] = xmm0\n         xmmword [var_40h] = xmm0\n         goto loc_0x100006cf9\n         // CODE XREF from sym.func.100006c99 @ 0x100006d32(x)\n         esi = 0x40000            // long f\n         sym.imp.__maskrune  ()\n                                  // int __maskrune(-1, -1)\n\n    loc_0x100006d89: // orphan\n         // CODE XREF from sym.func.100006c99 @ 0x100006d32(x)\n         esi = 0x40000            // long f\n         sym.imp.__maskrune  ()\n                                  // int __maskrune(-1, -1)\n         // CODE XREF from sym.func.100006c99 @ 0x100006d46(x)\n         var = eax & eax\n         if  (var) goto loc_0x100006dac // unlikely\n\n    loc_0x100006d93: // orphan\n         // CODE XREF from sym.func.100006c99 @ 0x100006d46(x)\n         var = eax & eax\n         if  (var) goto loc_0x100006dac // unlikely\n         edi = 0x3f               // '?' // int c\n         sym.imp.putchar  ()\n                                  // int putchar(0x00000000)\n         rbx += r13\n         r14d+\n         goto loc_0x100006cf9\n\n    loc_0x100006d97: // orphan\n         edi = 0x3f               // '?' // int c\n         sym.imp.putchar  ()\n                                  // int putchar(0x00000000)\n         rbx += r13\n         r14d+\n         goto loc_0x100006cf9\n         // CODE XREF from sym.func.100006c99 @ 0x100006d95(x)\n         var = r13d & r13d\n         if  (var <= 0) goto loc_0x100006dc9 // likely\n\n    loc_0x100006dac: // orphan\n         // CODE XREF from sym.func.100006c99 @ 0x100006d95(x)\n         var = r13d & r13d\n         if  (var <= 0) goto loc_0x100006dc9 // likely\n         r12d = r13d\n         r15d = 0\n\n    loc_0x100006db1: // orphan\n         r12d = r13d\n         r15d = 0\n         // CODE XREF from sym.func.100006c99 @ 0x100006dc7(x)\n         edi = byte [rbx + r15]   // int c\n         sym.imp.putchar  ()\n                                  // int putchar(0x00000000)\n         r15+\n         var = r12 - r15\n         if  (var) goto loc_0x100006db7 // likely\n\n    loc_0x100006db7: // orphan\n         // CODE XREF from sym.func.100006c99 @ 0x100006dc7(x)\n         edi = byte [rbx + r15]   // int c\n         sym.imp.putchar  ()\n                                  // int putchar(0x00000000)\n         r15+\n         var = r12 - r15\n         if  (var) goto loc_0x100006db7 // likely\n         // CODE XREF from sym.func.100006c99 @ 0x100006daf(x)\n         rbx += r13\n         edi = dword [var_b4h]\n         sym.imp.wcwidth  ()\n         r14d += eax\n         r15 = var_b0h\n         goto loc_0x100006cf2\n\n    loc_0x100006dc9: // orphan\n         // CODE XREF from sym.func.100006c99 @ 0x100006daf(x)\n         rbx += r13\n         edi = dword [var_b4h]\n         sym.imp.wcwidth  ()\n         r14d += eax\n         r15 = var_b0h\n         goto loc_0x100006cf2\n         // CODE XREF from sym.func.100006c99 @ 0x100006d19(x)\n         edi = 0x3f               // '?' // int c\n         sym.imp.putchar  ()\n                                  // int putchar(0x00000000)\n         r14d+\n\n    loc_0x100006de6: // orphan\n         // CODE XREF from sym.func.100006c99 @ 0x100006d19(x)\n         edi = 0x3f               // '?' // int c\n         sym.imp.putchar  ()\n                                  // int putchar(0x00000000)\n         r14d+\n         // CODE XREF from sym.func.100006c99 @ 0x100006d22(x)\n         rax = qword [reloc.__stack_chk_guard] // [0x100008010:8]=0\n         rax = qword [rax]\n         var = rax - qword [var_30h]\n         if  (var) goto loc_0x100006e18 // likely\n\n    loc_0x100006df3: // orphan\n         // CODE XREF from sym.func.100006c99 @ 0x100006d22(x)\n         rax = qword [reloc.__stack_chk_guard] // [0x100008010:8]=0\n         rax = qword [rax]\n         var = rax - qword [var_30h]\n         if  (var) goto loc_0x100006e18 // likely\n         eax = r14d\n         rsp += 0x98\n         rbx = pop  ()\n         r12 = pop  ()\n         r13 = pop  ()\n         r14 = pop  ()\n         r15 = pop  ()\n         rbp = pop  ()\n         re\n\n    loc_0x100006e03: // orphan\n         eax = r14d\n         rsp += 0x98\n         rbx = pop  ()\n         r12 = pop  ()\n         r13 = pop  ()\n         r14 = pop  ()\n         r15 = pop  ()\n         rbp = pop  ()\n         re\n         // CODE XREF from sym.func.100006c99 @ 0x100006e01(x)\n         sym.imp.__stack_chk_fail  ()\n                                  // void __stack_chk_fail(void)\n\n    loc_0x100006e18: // orphan\n         // CODE XREF from sym.func.100006c99 @ 0x100006e01(x)\n         sym.imp.__stack_chk_fail  ()\n                                  // void __stack_chk_fail(void)\n\n}\n"}
