"{\"annotations\":[{\"start\":64,\"end\":64,\"offset\":4294994405,\"type\":\"offset\"},{\"start\":126,\"end\":126,\"offset\":4294994405,\"type\":\"offset\"},{\"start\":146,\"end\":146,\"offset\":4294994406,\"type\":\"offset\"},{\"start\":164,\"end\":164,\"offset\":4294994409,\"type\":\"offset\"},{\"start\":184,\"end\":184,\"offset\":4294994411,\"type\":\"offset\"},{\"start\":204,\"end\":204,\"offset\":4294994412,\"type\":\"offset\"},{\"start\":233,\"end\":233,\"offset\":4294994414,\"type\":\"offset\"},{\"start\":275,\"end\":275,\"offset\":4294994421,\"type\":\"offset\"},{\"start\":304,\"end\":304,\"offset\":4294994424,\"type\":\"offset\"},{\"start\":390,\"end\":390,\"offset\":4294994532,\"type\":\"offset\"},{\"start\":452,\"end\":452,\"offset\":4294994532,\"type\":\"offset\"},{\"start\":470,\"end\":470,\"offset\":4294994534,\"type\":\"offset\"},{\"start\":496,\"end\":496,\"offset\":4294994538,\"type\":\"offset\"},{\"start\":538,\"end\":538,\"offset\":4294994545,\"type\":\"offset\"},{\"start\":580,\"end\":580,\"offset\":4294994551,\"type\":\"offset\"},{\"start\":664,\"end\":664,\"offset\":4294994580,\"type\":\"offset\"},{\"start\":726,\"end\":726,\"offset\":4294994580,\"type\":\"offset\"},{\"start\":760,\"end\":760,\"offset\":4294994584,\"type\":\"offset\"},{\"start\":791,\"end\":791,\"offset\":4294994587,\"type\":\"offset\"},{\"start\":877,\"end\":877,\"offset\":4294994631,\"type\":\"offset\"},{\"start\":956,\"end\":956,\"offset\":4294994631,\"type\":\"offset\"},{\"start\":994,\"end\":994,\"offset\":4294994636,\"type\":\"offset\"},{\"start\":1025,\"end\":1025,\"offset\":4294994639,\"type\":\"offset\"},{\"start\":1111,\"end\":1111,\"offset\":4294994687,\"type\":\"offset\"},{\"start\":1190,\"end\":1190,\"offset\":4294994687,\"type\":\"offset\"},{\"start\":1212,\"end\":1212,\"offset\":4294994688,\"type\":\"offset\"},{\"start\":1234,\"end\":1234,\"offset\":4294994690,\"type\":\"offset\"},{\"start\":1256,\"end\":1256,\"offset\":4294994691,\"type\":\"offset\"},{\"start\":1309,\"end\":1309,\"offset\":4294994641,\"type\":\"offset\"},{\"start\":1351,\"end\":1351,\"offset\":4294994648,\"type\":\"offset\"},{\"start\":1396,\"end\":1396,\"offset\":4294994651,\"type\":\"offset\"},{\"start\":1428,\"end\":1428,\"offset\":4294994653,\"type\":\"offset\"},{\"start\":1454,\"end\":1454,\"offset\":4294994653,\"type\":\"offset\"},{\"start\":1489,\"end\":1489,\"offset\":4294994658,\"type\":\"offset\"},{\"start\":1513,\"end\":1513,\"offset\":4294994661,\"type\":\"offset\"},{\"start\":1708,\"end\":1708,\"offset\":4294994461,\"type\":\"offset\"},{\"start\":1745,\"end\":1745,\"offset\":4294994466,\"type\":\"offset\"},{\"start\":1773,\"end\":1773,\"offset\":4294994466,\"type\":\"offset\"},{\"start\":1846,\"end\":1846,\"offset\":4294994471,\"type\":\"offset\"},{\"start\":1908,\"end\":1908,\"offset\":4294994471,\"type\":\"offset\"},{\"start\":1942,\"end\":1942,\"offset\":4294994475,\"type\":\"offset\"},{\"start\":1973,\"end\":1973,\"offset\":4294994478,\"type\":\"offset\"},{\"start\":2101,\"end\":2101,\"offset\":4294994480,\"type\":\"offset\"},{\"start\":2140,\"end\":2140,\"offset\":4294994480,\"type\":\"offset\"},{\"start\":2196,\"end\":2196,\"offset\":4294994487,\"type\":\"offset\"},{\"start\":2212,\"end\":2212,\"offset\":4294994489,\"type\":\"offset\"},{\"start\":2239,\"end\":2239,\"offset\":4294994489,\"type\":\"offset\"},{\"start\":2308,\"end\":2308,\"offset\":4294994494,\"type\":\"offset\"},{\"start\":2370,\"end\":2370,\"offset\":4294994494,\"type\":\"offset\"},{\"start\":2408,\"end\":2408,\"offset\":4294994499,\"type\":\"offset\"},{\"start\":2439,\"end\":2439,\"offset\":4294994502,\"type\":\"offset\"},{\"start\":2567,\"end\":2567,\"offset\":4294994504,\"type\":\"offset\"},{\"start\":2606,\"end\":2606,\"offset\":4294994504,\"type\":\"offset\"},{\"start\":2662,\"end\":2662,\"offset\":4294994511,\"type\":\"offset\"},{\"start\":2678,\"end\":2678,\"offset\":4294994513,\"type\":\"offset\"},{\"start\":2705,\"end\":2705,\"offset\":4294994513,\"type\":\"offset\"},{\"start\":2774,\"end\":2774,\"offset\":4294994518,\"type\":\"offset\"},{\"start\":2836,\"end\":2836,\"offset\":4294994518,\"type\":\"offset\"},{\"start\":2864,\"end\":2864,\"offset\":4294994523,\"type\":\"offset\"},{\"start\":2886,\"end\":2886,\"offset\":4294994524,\"type\":\"offset\"},{\"start\":2908,\"end\":2908,\"offset\":4294994526,\"type\":\"offset\"},{\"start\":2930,\"end\":2930,\"offset\":4294994527,\"type\":\"offset\"},{\"start\":2997,\"end\":2997,\"offset\":4294994527,\"type\":\"offset\"},{\"start\":3087,\"end\":3441,\"offset\":4294994527,\"type\":\"offset\"},{\"start\":3827,\"end\":4138,\"offset\":4294994527,\"type\":\"offset\"}],\"code\":\"int sym.func.1000069e5 (int esi, int edx) {\\n    loc_0x1000069e5:\\n        // CALL XREF from sym.func.1000062c6 @ 0x100006345(x)\\n        push  (rbp)\\n        rbp = rsp\\n        push  (r14)\\n        push  (rbx)\\n        ebx = edi    // arg1\\n        rax = rip + 0x1c1f // 0x100008614\\n        var = byte [rax] - 0\\n        if  (!var) goto loc_0x100006a64 // unlikely\\n            \\n    loc_0x100006a64:\\n        // CODE XREF from sym.func.1000069e5 @ 0x1000069f8(x)\\n        eax = ebx\\n        rbx = rax + rax*2\\n        r14 = rip + 0x1c1f // 0x100008690\\n        var = dword [r14 + rbx*4 + 8] - 0\\n        if  (!var) goto loc_0x100006a94 // likely\\n            \\n    loc_0x100006a94:\\n        // CODE XREF from sym.func.1000069e5 @ 0x100006a77(x)\\n        edx = dword [r14 + rbx*4]\\n        var = edx - 0xffffffff\\n        if  (!var) goto loc_0x100006ac7 // unlikely\\n            \\n    loc_0x100006ac7:\\n        // CODE XREFS from sym.func.1000069e5 @ 0x100006a9b(x), 0x100006ab1(x)\\n        edx = dword [r14 + rbx*4 + 4]\\n        var = edx - 0xffffffff\\n        if  (!var) goto loc_0x100006aff // unlikely\\n            \\n    loc_0x100006aff:\\n        // CODE XREFS from sym.func.1000069e5 @ 0x100006acf(x), 0x100006ae5(x)\\n        rbx = pop  ()\\n        r14 = pop  ()\\n        rbp = pop  ()\\n        re\\n         // } else {\\n    loc_0x100006ad1:\\n        rax = rip + 0x1b18 // 0x1000085f0\\n        rdi = qword [rax] // const char *cap\\n        esi = 0      // int col\\n        sym.imp.tgoto  ()\\n        // char *tgoto(-1, -1, -1)\\n        var = rax & rax\\n        if  (!var) goto loc_0x100006aff // unlikely\\n         // } else {\\n         // } else {\\n         // } else {\\n        }\\n        return eax;\\n        goto loc_0x1000069fa\\n    loc_0x100006a1d:\\n        edi = 0x31   // '1' // int c\\n        sym.imp.putchar  ()\\n        // int putchar(0x25000000)\\n         // do {\\n    loc_0x100006a27:\\n        // CODE XREF from sym.func.1000069e5 @ 0x100006a1b(x)\\n        esi = dword [r14 + rbx*4]\\n        var = esi - 0xffffffff\\n        if  (!var) goto loc_0x100006a3e // unlikely\\n         // } while (?);\\n        }\\n        return eax;\\n    loc_0x100006a30:\\n        rdi = rip + 0x146c // str._3_d\\n        // 0x100007ea3 // \\\"//3%d\\\" // const char *format\\n        eax = 0\\n        sym.imp.printf  ()\\n        // int printf(\\\"//3%d\\\")\\n         // do {\\n    loc_0x100006a3e:\\n        // CODE XREF from sym.func.1000069e5 @ 0x100006a2e(x)\\n        esi = dword [r14 + rbx*4 + 4]\\n        var = esi - 0xffffffff\\n        if  (!var) goto loc_0x100006a56 // unlikely\\n         // } while (?);\\n        }\\n        return eax;\\n    loc_0x100006a48:\\n        rdi = rip + 0x1459 // str._4_d\\n        // 0x100007ea8 // \\\"//4%d\\\" // const char *format\\n        eax = 0\\n        sym.imp.printf  ()\\n        // int printf(\\\"//4%d\\\")\\n         // do {\\n    loc_0x100006a56:\\n        // CODE XREF from sym.func.1000069e5 @ 0x100006a46(x)\\n        edi = 0x6d   // 'm'\\n        rbx = pop  ()\\n        r14 = pop  ()\\n        rbp = pop  ()\\n        goto loc_0x100007518 // sym.imp.putchar // sym.imp.putchar\\n        // int putchar(0x00000000)\\n         // } while (?);\\n        }\\n        return eax;             rdx = rip - 0xe2         // sym.func.1000069d8\\n                                      // 0x1000069d8 // void *putc\\n             rdi = rax                // const char *str\\n             esi = 1                  // int affcnt\\n             sym.imp.tputs  ()\\n                                      // int tputs(-1, 0x00ffffff, 0x000b37e8e5894855)\\n\\n    loc_0x100006ab3: // orphan\\n             rdx = rip - 0xe2         // sym.func.1000069d8\\n                                      // 0x1000069d8 // void *putc\\n             rdi = rax                // const char *str\\n             esi = 1                  // int affcnt\\n             sym.imp.tputs  ()\\n                                      // int tputs(-1, 0x00ffffff, 0x000b37e8e5894855)\\n         rdx = rip - sym.func.1000069d8 // 0x1000069d8\\n         rdi = rax\\n         esi = 1\\n         rbx = pop  ()\\n         r14 = pop  ()\\n         rbp = pop  ()\\n         goto loc_0x1000075ae     // sym.imp.tputs // sym.imp.tputs\\n                                  // int tputs(-1, 0x00ffffff, 0x000b37e8e5894855)\\n\\n    loc_0x100006ae7: // orphan\\n         rdx = rip - sym.func.1000069d8 // 0x1000069d8\\n         rdi = rax\\n         esi = 1\\n         rbx = pop  ()\\n         r14 = pop  ()\\n         rbp = pop  ()\\n         goto loc_0x1000075ae     // sym.imp.tputs // sym.imp.tputs\\n                                  // int tputs(-1, 0x00ffffff, 0x000b37e8e5894855)\\n\\n}\\n\"}\n"