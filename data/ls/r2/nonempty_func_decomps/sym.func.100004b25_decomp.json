"{\"annotations\":[{\"start\":64,\"end\":64,\"offset\":4294986533,\"type\":\"offset\"},{\"start\":143,\"end\":143,\"offset\":4294986533,\"type\":\"offset\"},{\"start\":163,\"end\":163,\"offset\":4294986534,\"type\":\"offset\"},{\"start\":181,\"end\":181,\"offset\":4294986537,\"type\":\"offset\"},{\"start\":201,\"end\":201,\"offset\":4294986539,\"type\":\"offset\"},{\"start\":221,\"end\":221,\"offset\":4294986541,\"type\":\"offset\"},{\"start\":241,\"end\":241,\"offset\":4294986543,\"type\":\"offset\"},{\"start\":261,\"end\":261,\"offset\":4294986545,\"type\":\"offset\"},{\"start\":281,\"end\":281,\"offset\":4294986546,\"type\":\"offset\"},{\"start\":302,\"end\":302,\"offset\":4294986553,\"type\":\"offset\"},{\"start\":331,\"end\":331,\"offset\":4294986556,\"type\":\"offset\"},{\"start\":370,\"end\":370,\"offset\":4294986563,\"type\":\"offset\"},{\"start\":437,\"end\":437,\"offset\":4294986570,\"type\":\"offset\"},{\"start\":463,\"end\":463,\"offset\":4294986573,\"type\":\"offset\"},{\"start\":493,\"end\":493,\"offset\":4294986577,\"type\":\"offset\"},{\"start\":548,\"end\":548,\"offset\":4294986583,\"type\":\"offset\"},{\"start\":576,\"end\":576,\"offset\":4294986590,\"type\":\"offset\"},{\"start\":632,\"end\":632,\"offset\":4294986596,\"type\":\"offset\"},{\"start\":715,\"end\":715,\"offset\":4294986612,\"type\":\"offset\"},{\"start\":777,\"end\":777,\"offset\":4294986612,\"type\":\"offset\"},{\"start\":824,\"end\":824,\"offset\":4294986612,\"type\":\"offset\"},{\"start\":885,\"end\":885,\"offset\":4294986619,\"type\":\"offset\"},{\"start\":912,\"end\":912,\"offset\":4294986619,\"type\":\"offset\"},{\"start\":952,\"end\":952,\"offset\":4294986624,\"type\":\"offset\"},{\"start\":973,\"end\":973,\"offset\":4294986627,\"type\":\"offset\"},{\"start\":1007,\"end\":1007,\"offset\":4294986634,\"type\":\"offset\"},{\"start\":1041,\"end\":1041,\"offset\":4294986641,\"type\":\"offset\"},{\"start\":1075,\"end\":1075,\"offset\":4294986648,\"type\":\"offset\"},{\"start\":1109,\"end\":1109,\"offset\":4294986655,\"type\":\"offset\"},{\"start\":1138,\"end\":1138,\"offset\":4294986666,\"type\":\"offset\"},{\"start\":1162,\"end\":1162,\"offset\":4294986669,\"type\":\"offset\"},{\"start\":1193,\"end\":1193,\"offset\":4294986676,\"type\":\"offset\"},{\"start\":1277,\"end\":1277,\"offset\":4294986823,\"type\":\"offset\"},{\"start\":1339,\"end\":1339,\"offset\":4294986823,\"type\":\"offset\"},{\"start\":1356,\"end\":1356,\"offset\":4294986826,\"type\":\"offset\"},{\"start\":1372,\"end\":1372,\"offset\":4294986828,\"type\":\"offset\"},{\"start\":1403,\"end\":1403,\"offset\":4294986835,\"type\":\"offset\"},{\"start\":1420,\"end\":1420,\"offset\":4294986838,\"type\":\"offset\"},{\"start\":1449,\"end\":1449,\"offset\":4294986848,\"type\":\"offset\"},{\"start\":1478,\"end\":1478,\"offset\":4294986858,\"type\":\"offset\"},{\"start\":1494,\"end\":1494,\"offset\":4294986860,\"type\":\"offset\"},{\"start\":1525,\"end\":1525,\"offset\":4294986867,\"type\":\"offset\"},{\"start\":1541,\"end\":1541,\"offset\":4294986869,\"type\":\"offset\"},{\"start\":1572,\"end\":1572,\"offset\":4294986876,\"type\":\"offset\"},{\"start\":1639,\"end\":1639,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":1718,\"end\":1718,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":1839,\"end\":2021,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":2235,\"end\":2309,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":2415,\"end\":2737,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":3091,\"end\":3254,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":3449,\"end\":3562,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":3707,\"end\":3958,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":4241,\"end\":4395,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":4581,\"end\":4661,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":4773,\"end\":4803,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":4865,\"end\":4969,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":5105,\"end\":5255,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":5437,\"end\":5467,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":5529,\"end\":5698,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":5899,\"end\":6009,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":6151,\"end\":6206,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":6293,\"end\":6546,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":6831,\"end\":6863,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":6927,\"end\":7101,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":7307,\"end\":7337,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":7399,\"end\":7494,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":7621,\"end\":7792,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":7995,\"end\":8012,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":8061,\"end\":8235,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":8441,\"end\":8485,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":8561,\"end\":8641,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":8753,\"end\":8988,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":9255,\"end\":9273,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":9323,\"end\":9497,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":9703,\"end\":9747,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":9823,\"end\":9904,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":10017,\"end\":10412,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":10839,\"end\":10870,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":10933,\"end\":11138,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":11375,\"end\":11418,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":11493,\"end\":11662,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":11863,\"end\":11997,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":12163,\"end\":12336,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":12541,\"end\":12616,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":12723,\"end\":12810,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":12929,\"end\":13019,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":13141,\"end\":13253,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":13397,\"end\":13427,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":13489,\"end\":13624,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":13791,\"end\":13900,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":14041,\"end\":14166,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":14323,\"end\":14712,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":15133,\"end\":15371,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":15641,\"end\":15792,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":15975,\"end\":16743,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":17543,\"end\":17753,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":17995,\"end\":18796,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":19629,\"end\":19818,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":20039,\"end\":20426,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":20845,\"end\":21098,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":21383,\"end\":21717,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":22083,\"end\":22408,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":22765,\"end\":22784,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":22835,\"end\":23678,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":24553,\"end\":24728,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":24935,\"end\":25017,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":25131,\"end\":25523,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":25947,\"end\":26336,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":26757,\"end\":26837,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":26949,\"end\":27333,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":27749,\"end\":28556,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":29395,\"end\":30101,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":30839,\"end\":30961,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":31115,\"end\":31693,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":32303,\"end\":32416,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":32561,\"end\":32990,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":33451,\"end\":34679,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":35939,\"end\":36219,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":36531,\"end\":36708,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":36917,\"end\":37082,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":37279,\"end\":37542,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":37837,\"end\":37988,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":38171,\"end\":38355,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":38571,\"end\":38690,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":38841,\"end\":38952,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":39095,\"end\":39288,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":39513,\"end\":39589,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":39697,\"end\":39788,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":39911,\"end\":40000,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":40121,\"end\":40327,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":40565,\"end\":40768,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":41003,\"end\":41240,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":41509,\"end\":41961,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":42445,\"end\":42477,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":42541,\"end\":42734,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":42959,\"end\":43421,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":43915,\"end\":44191,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":44499,\"end\":44657,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":44847,\"end\":45036,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":45257,\"end\":45334,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":45443,\"end\":45473,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":45535,\"end\":45647,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":45791,\"end\":46070,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":46381,\"end\":46473,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":46597,\"end\":46845,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":47125,\"end\":48801,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":50509,\"end\":50878,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":51279,\"end\":51424,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":51601,\"end\":51633,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":51697,\"end\":51824,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":51983,\"end\":52159,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":52367,\"end\":52548,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":52761,\"end\":53109,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":53489,\"end\":53628,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":53799,\"end\":53909,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":54051,\"end\":54161,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":54303,\"end\":54387,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":54503,\"end\":54970,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":55469,\"end\":55596,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":55755,\"end\":55850,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":55977,\"end\":56089,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":56233,\"end\":56328,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":56455,\"end\":56550,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":56677,\"end\":57047,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":57449,\"end\":57621,\"offset\":4294987132,\"type\":\"offset\"},{\"start\":57825,\"end\":57991,\"offset\":4294987132,\"type\":\"offset\"}],\"code\":\"int sym.func.100004b25 (int esi, int edx) {\\n    loc_0x100004b25:\\n        // CALL XREFS from sym.func.100004808 @ 0x10000485e(x), 0x1000049db(x)\\n        push  (rbp)\\n        rbp = rsp\\n        push  (r15)\\n        push  (r14)\\n        push  (r13)\\n        push  (r12)\\n        push  (rbx)\\n        rsp -= 0x558\\n        r13 = rsi    // arg2\\n        qword [var_528h] = rdi // arg1\\n        rax = qword [reloc.__stack_chk_guard] // [0x100008010:8]=0\\n        rax = qword [rax]\\n        qword [var_30h] = rax\\n        eax = dword [0x1000085c4] // [0x1000085c4:4]=1\\n        byte [var_4a1h] = 1\\n        eax |= dword [0x100008588] // [0x100008588:4]=0\\n        if  (var) goto loc_0x100004b74 // likely\\n            \\n    loc_0x100004b74:\\n        // CODE XREF from sym.func.100004b25 @ 0x100004b64(x)\\n        rdi = rip + 0x305d // str.LS_COLWIDTHS\\n        // 0x100007bd8 // \\\"LS_COLWIDTHS\\\" // const char *name\\n        sym.imp.getenv  ()\\n        // char *getenv(\\\"LS_COLWIDTHS\\\")\\n        xmm0 ^= xmm0\\n        xmmword [var_4a0h] = xmm0\\n        xmmword [var_490h] = xmm0\\n        xmmword [var_480h] = xmm0\\n        xmmword [var_470h] = xmm0\\n        qword [var_460h] = 0\\n        var = rax & rax\\n        qword [var_4f0h] = r13\\n        if  (!var) goto loc_0x100004c47 // likely\\n            \\n    loc_0x100004c47:\\n        // CODE XREF from sym.func.100004b25 @ 0x100004bb4(x)\\n        r14d = 0\\n        eax = 0\\n        qword [var_4b8h] = rax\\n        r12d = 0\\n        dword [var_4b0h] = 0\\n        dword [var_4a8h] = 0\\n        eax = 0\\n        qword [var_4d0h] = rax\\n        eax = 0\\n        qword [var_4e8h] = rax\\n        goto loc_0x100004d7c\\n         // do {\\n    loc_0x100004d7c:\\n        // CODE XREFS from sym.func.100004b25 @ 0x100004c7c(x), 0x100004d5c(x)\\n        r8d = 0\\n         // } while (?);\\n         // } while (?);\\n         // } while (?);\\n        }\\n        return eax;             // CODE XREF from sym.func.100004b25 @ 0x100004c43(x)\\n             al = byte [rbx]\\n             var = al - 0x3a\\n             if  (!var) goto loc_0x100004c30 // unlikely\\n\\n    loc_0x100004bcd: // orphan\\n             // CODE XREF from sym.func.100004b25 @ 0x100004c43(x)\\n             al = byte [rbx]\\n             var = al - 0x3a\\n             if  (!var) goto loc_0x100004c30 // unlikely\\n         var = al & al\\n         if  (!var) goto loc_0x100004c81 // likely\\n\\n    loc_0x100004bd3: // orphan\\n         var = al & al\\n         if  (!var) goto loc_0x100004c81 // likely\\n         rdi = rbx                // const char *str\\n         rsi = endptr             // char * *endptr\\n         edx = 0xa                // int base\\n         sym.imp.strtoul  ()\\n                                  // long strtoul(-1, ?, 0x00000700)\\n         qword [rbp + r12*8 - 0x4a0] = rax\\n         rbx = qword [endptr]\\n\\n    loc_0x100004bdb: // orphan\\n         rdi = rbx                // const char *str\\n         rsi = endptr             // char * *endptr\\n         edx = 0xa                // int base\\n         sym.imp.strtoul  ()\\n                                  // long strtoul(-1, ?, 0x00000700)\\n         qword [rbp + r12*8 - 0x4a0] = rax\\n         rbx = qword [endptr]\\n         // CODE XREF from sym.func.100004b25 @ 0x100004c26(x)\\n         r15d = byte [rbx]\\n         var = r15d & r15d\\n         js 0x100004c14           // unlikely\\n\\n    loc_0x100004bfe: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004c26(x)\\n         r15d = byte [rbx]\\n         var = r15d & r15d\\n         js 0x100004c14           // unlikely\\n         eax = r15d\\n         eax = dword [r13 + rax*4 + 0x3c]\\n         eax &= r14d\\n         goto loc_0x100004c21\\n\\n    loc_0x100004c07: // orphan\\n         eax = r15d\\n         eax = dword [r13 + rax*4 + 0x3c]\\n         eax &= r14d\\n         goto loc_0x100004c21\\n         // CODE XREF from sym.func.100004b25 @ 0x100004c05(x)\\n         esi = 0x4000             // long f\\n         edi = r15d               // long c\\n         sym.imp.__maskrune  ()\\n                                  // int __maskrune(-1, 0xfeedfacf)\\n\\n    loc_0x100004c14: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004c05(x)\\n         esi = 0x4000             // long f\\n         edi = r15d               // long c\\n         sym.imp.__maskrune  ()\\n                                  // int __maskrune(-1, 0xfeedfacf)\\n         // CODE XREF from sym.func.100004b25 @ 0x100004c12(x)\\n         rbx+\\n         var = eax & eax\\n         if  (var) goto loc_0x100004bfe // unlikely\\n\\n    loc_0x100004c21: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004c12(x)\\n         rbx+\\n         var = eax & eax\\n         if  (var) goto loc_0x100004bfe // unlikely\\n         var = r15b - 0x3a\\n         if  (!var) goto loc_0x100004c3c // unlikely\\n\\n    loc_0x100004c28: // orphan\\n         var = r15b - 0x3a\\n         if  (!var) goto loc_0x100004c3c // unlikely\\n         goto loc_0x100004c81\\n\\n    loc_0x100004c2e: // orphan\\n         goto loc_0x100004c81\\n         // CODE XREF from sym.func.100004b25 @ 0x100004bd1(x)\\n         qword [rbp + r12*8 - 0x4a0] = 0\\n\\n    loc_0x100004c30: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004bd1(x)\\n         qword [rbp + r12*8 - 0x4a0] = 0\\n         // CODE XREF from sym.func.100004b25 @ 0x100004c2c(x)\\n         r12+\\n         var = r12 - 9\\n         if  (var) goto loc_0x100004bcd // likely\\n\\n    loc_0x100004c3c: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004c2c(x)\\n         r12+\\n         var = r12 - 9\\n         if  (var) goto loc_0x100004bcd // likely\\n         goto loc_0x100004c9a\\n\\n    loc_0x100004c45: // orphan\\n         goto loc_0x100004c9a\\n         // CODE XREFS from sym.func.100004b25 @ 0x100004bd5(x), 0x100004c2e(x)\\n         var = r12d - 8\\n         if  (((unsigned) var) > 0) goto 0x100004c9a // unlikely\\n\\n    loc_0x100004c81: // orphan\\n         // CODE XREFS from sym.func.100004b25 @ 0x100004bd5(x), 0x100004c2e(x)\\n         var = r12d - 8\\n         if  (((unsigned) var) > 0) goto 0x100004c9a // unlikely\\n         var = dword [0x100008610] - 0 // [0x100008610:4]=1\\n         if  (var) goto loc_0x100004c9a // likely\\n\\n    loc_0x100004c87: // orphan\\n         var = dword [0x100008610] - 0 // [0x100008610:4]=1\\n         if  (var) goto loc_0x100004c9a // likely\\n         dword [0x100008618] = 0  // [0x100008618:4]=1\\n\\n    loc_0x100004c90: // orphan\\n         dword [0x100008618] = 0  // [0x100008618:4]=1\\n         // CODE XREFS from sym.func.100004b25 @ 0x100004c45(x), 0x100004c85(x), 0x100004c8e(x)\\n         rcx = qword [var_4a0h]\\n         rax = qword [var_498h]\\n         edx = 1\\n         var = rcx & rcx\\n         if  (!var) goto loc_0x100004cc7 // likely\\n\\n    loc_0x100004c9a: // orphan\\n         // CODE XREFS from sym.func.100004b25 @ 0x100004c45(x), 0x100004c85(x), 0x100004c8e(x)\\n         rcx = qword [var_4a0h]\\n         rax = qword [var_498h]\\n         edx = 1\\n         var = rcx & rcx\\n         if  (!var) goto loc_0x100004cc7 // likely\\n         r13 = qword [var_4f0h]\\n\\n    loc_0x100004cb2: // orphan\\n         r13 = qword [var_4f0h]\\n         // CODE XREF from sym.func.100004b25 @ 0x100004cc3(x)\\n         rdx += rdx\\n         rdx = rdx + rdx*4\\n         rcx-\\n         if  (var) goto loc_0x100004cb9 // likely\\n\\n    loc_0x100004cb9: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004cc3(x)\\n         rdx += rdx\\n         rdx = rdx + rdx*4\\n         rcx-\\n         if  (var) goto loc_0x100004cb9 // likely\\n         goto loc_0x100004cce\\n\\n    loc_0x100004cc5: // orphan\\n         goto loc_0x100004cce\\n         // CODE XREF from sym.func.100004b25 @ 0x100004cb0(x)\\n         r13 = qword [var_4f0h]\\n\\n    loc_0x100004cc7: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004cb0(x)\\n         r13 = qword [var_4f0h]\\n         // CODE XREF from sym.func.100004b25 @ 0x100004cc5(x)\\n         rcx = qword [var_490h]\\n         var = rax & rax\\n         if  (!var) goto loc_0x100004cf0 // likely\\n\\n    loc_0x100004cce: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004cc5(x)\\n         rcx = qword [var_490h]\\n         var = rax & rax\\n         if  (!var) goto loc_0x100004cf0 // likely\\n         esi = 1\\n\\n    loc_0x100004cda: // orphan\\n         esi = 1\\n         // CODE XREF from sym.func.100004b25 @ 0x100004ce9(x)\\n         rsi += rsi\\n         rsi = rsi + rsi*4\\n         rax-\\n         if  (var) goto loc_0x100004cdf // likely\\n\\n    loc_0x100004cdf: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004ce9(x)\\n         rsi += rsi\\n         rsi = rsi + rsi*4\\n         rax-\\n         if  (var) goto loc_0x100004cdf // likely\\n         rsi-\\n         goto loc_0x100004cf2\\n\\n    loc_0x100004ceb: // orphan\\n         rsi-\\n         goto loc_0x100004cf2\\n         // CODE XREF from sym.func.100004b25 @ 0x100004cd8(x)\\n         esi = 0\\n\\n    loc_0x100004cf0: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004cd8(x)\\n         esi = 0\\n         // CODE XREF from sym.func.100004b25 @ 0x100004cee(x)\\n         rax = qword [var_470h]\\n         var = rcx & rcx\\n         qword [var_4b8h] = rdx\\n         qword [var_4e8h] = rsi\\n         if  (!var) goto loc_0x100004d23 // likely\\n\\n    loc_0x100004cf2: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004cee(x)\\n         rax = qword [var_470h]\\n         var = rcx & rcx\\n         qword [var_4b8h] = rdx\\n         qword [var_4e8h] = rsi\\n         if  (!var) goto loc_0x100004d23 // likely\\n         r14d = 1\\n\\n    loc_0x100004d0c: // orphan\\n         r14d = 1\\n         // CODE XREF from sym.func.100004b25 @ 0x100004d1c(x)\\n         r14 += r14\\n         r14 = r14 + r14*4\\n         rcx-\\n         if  (var) goto loc_0x100004d12 // likely\\n\\n    loc_0x100004d12: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004d1c(x)\\n         r14 += r14\\n         r14 = r14 + r14*4\\n         rcx-\\n         if  (var) goto loc_0x100004d12 // likely\\n         r14-\\n         goto loc_0x100004d26\\n\\n    loc_0x100004d1e: // orphan\\n         r14-\\n         goto loc_0x100004d26\\n         // CODE XREF from sym.func.100004b25 @ 0x100004d0a(x)\\n         r14d = 0\\n\\n    loc_0x100004d23: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004d0a(x)\\n         r14d = 0\\n         // CODE XREF from sym.func.100004b25 @ 0x100004d21(x)\\n         ecx = dword [var_488h]\\n         dword [var_4b0h] = ecx\\n         ecx = dword [var_480h]\\n         dword [var_4a8h] = ecx\\n         ecx = dword [var_478h]\\n         qword [var_4d0h] = rcx\\n         r12 = qword [var_468h]\\n         qword [var_4b8h]--\\n         var = rax & rax\\n         if  (var <= 0) goto loc_0x100004d7c // likely\\n\\n    loc_0x100004d26: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004d21(x)\\n         ecx = dword [var_488h]\\n         dword [var_4b0h] = ecx\\n         ecx = dword [var_480h]\\n         dword [var_4a8h] = ecx\\n         ecx = dword [var_478h]\\n         qword [var_4d0h] = rcx\\n         r12 = qword [var_468h]\\n         qword [var_4b8h]--\\n         var = rax & rax\\n         if  (var <= 0) goto loc_0x100004d7c // likely\\n         rax+\\n         r8d = 1\\n\\n    loc_0x100004d5e: // orphan\\n         rax+\\n         r8d = 1\\n         // CODE XREF from sym.func.100004b25 @ 0x100004d75(x)\\n         r8 += r8\\n         r8 = r8 + r8*4\\n         rax-\\n         var = rax - 1\\n         if  (((unsigned) var) > 0) goto 0x100004d67 // likely\\n\\n    loc_0x100004d67: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004d75(x)\\n         r8 += r8\\n         r8 = r8 + r8*4\\n         rax-\\n         var = rax - 1\\n         if  (((unsigned) var) > 0) goto 0x100004d67 // likely\\n         r8-\\n         goto loc_0x100004d7f\\n\\n    loc_0x100004d77: // orphan\\n         r8-\\n         goto loc_0x100004d7f\\n         // CODE XREF from sym.func.100004b25 @ 0x100004d7a(x)\\n         dword [var_534h] = 0\\n         var = r13 & r13\\n         if  (!var) goto loc_0x10000536f // likely\\n\\n    loc_0x100004d7f: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004d7a(x)\\n         dword [var_534h] = 0\\n         var = r13 & r13\\n         if  (!var) goto loc_0x10000536f // likely\\n         rdi = r13\\n         eax = 0\\n         qword [var_518h] = rax\\n         ebx = 0\\n         eax = 0\\n         qword [var_4e0h] = rax\\n\\n    loc_0x100004d92: // orphan\\n         rdi = r13\\n         eax = 0\\n         qword [var_518h] = rax\\n         ebx = 0\\n         eax = 0\\n         qword [var_4e0h] = rax\\n         // CODE XREF from sym.func.100004b25 @ 0x100005363(x)\\n         eax = word [rdi + 0x58]\\n         var = ax - 0xa\\n         if  (!var) goto loc_0x100004f37 // unlikely\\n\\n    loc_0x100004da9: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100005363(x)\\n         eax = word [rdi + 0x58]\\n         var = ax - 0xa\\n         if  (!var) goto loc_0x100004f37 // unlikely\\n         var = ax - 7\\n         if  (!var) goto loc_0x100004f37 // unlikely\\n\\n    loc_0x100004db7: // orphan\\n         var = ax - 7\\n         if  (!var) goto loc_0x100004f37 // unlikely\\n         var = qword [var_528h] - 0\\n         if  (!var) goto loc_0x100004ddc // likely\\n\\n    loc_0x100004dc1: // orphan\\n         var = qword [var_528h] - 0\\n         if  (!var) goto loc_0x100004ddc // likely\\n         var = byte [rdi + 0x68] - 0x2e\\n         if  (var) goto loc_0x100004df8 // likely\\n\\n    loc_0x100004dcb: // orphan\\n         var = byte [rdi + 0x68] - 0x2e\\n         if  (var) goto loc_0x100004df8 // likely\\n         var = byte [0x10000863c] & 1 // [0x10000863c:1]=1\\n         if  (!var) goto loc_0x100004deb // unlikely\\n\\n    loc_0x100004dd1: // orphan\\n         var = byte [0x10000863c] & 1 // [0x10000863c:1]=1\\n         if  (!var) goto loc_0x100004deb // unlikely\\n         goto loc_0x100004df8\\n\\n    loc_0x100004dda: // orphan\\n         goto loc_0x100004df8\\n         // CODE XREF from sym.func.100004b25 @ 0x100004dc9(x)\\n         var = ax - 1\\n         if  (var) goto loc_0x100004df8 // likely\\n\\n    loc_0x100004ddc: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004dc9(x)\\n         var = ax - 1\\n         if  (var) goto loc_0x100004df8 // likely\\n         var = byte [0x100008658] & 1 // [0x100008658:1]=1\\n         if  (var) goto loc_0x100004df8 // likely\\n\\n    loc_0x100004de2: // orphan\\n         var = byte [0x100008658] & 1 // [0x100008658:1]=1\\n         if  (var) goto loc_0x100004df8 // likely\\n         // CODE XREF from sym.func.100004b25 @ 0x100004dd8(x)\\n         qword [rdi + 0x18] = 1\\n         goto loc_0x10000535c\\n\\n    loc_0x100004deb: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004dd8(x)\\n         qword [rdi + 0x18] = 1\\n         goto loc_0x10000535c\\n         // CODE XREFS from sym.func.100004b25 @ 0x100004dcf(x), 0x100004dda(x), 0x100004de0(x), 0x100004de9(x)\\n         esi = word [rdi + 0x42]\\n         var = r12 - rsi\\n         cmovbe r12,si\\n         eax = dword [0x1000085a0] // [0x1000085a0:4]=0\\n         eax |= dword [0x1000085a4] // [0x1000085a4:4]=0\\n         qword [var_4c0h] = rdi\\n         if  (!var) goto loc_0x100004e34 // likely\\n\\n    loc_0x100004df8: // orphan\\n         // CODE XREFS from sym.func.100004b25 @ 0x100004dcf(x), 0x100004dda(x), 0x100004de0(x), 0x100004de9(x)\\n         esi = word [rdi + 0x42]\\n         var = r12 - rsi\\n         cmovbe r12,si\\n         eax = dword [0x1000085a0] // [0x1000085a0:4]=0\\n         eax |= dword [0x1000085a4] // [0x1000085a4:4]=0\\n         qword [var_4c0h] = rdi\\n         if  (!var) goto loc_0x100004e34 // likely\\n         r15 = r12\\n         r12 = r8\\n         rdi += 0x68              // int64_t arg1\\n         sym.func.100006e1d  ()   // sym.func.100006e1d(0x68, 0x0)\\n         r8 = r12\\n         r12 = r15\\n         var = rax - r15\\n         cmova r12,ax\\n\\n    loc_0x100004e18: // orphan\\n         r15 = r12\\n         r12 = r8\\n         rdi += 0x68              // int64_t arg1\\n         sym.func.100006e1d  ()   // sym.func.100006e1d(0x68, 0x0)\\n         r8 = r12\\n         r12 = r15\\n         var = rax - r15\\n         cmova r12,ax\\n         // CODE XREF from sym.func.100004b25 @ 0x100004e16(x)\\n         var = byte [var_4a1h] - 0\\n         if  (!var) goto loc_0x100004f1f // unlikely\\n\\n    loc_0x100004e34: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004e16(x)\\n         var = byte [var_4a1h] - 0\\n         if  (!var) goto loc_0x100004f1f // unlikely\\n         dword [var_4c4h] = ebx\\n         rax = qword [var_4c0h]\\n         rsi = qword [rax + 0x60]\\n         rax = qword [rsi + 0x68]\\n         rcx = qword [var_4e8h]\\n         var = rax - rcx\\n         cmova rcx,ax\\n         qword [var_4e8h] = rcx\\n         rcx = qword [rsi + 8]\\n         rdx = qword [var_4b8h]\\n         var = rcx - rdx\\n         cmova rdx,cx\\n         qword [var_4b8h] = rdx\\n         ecx = word [rsi + 6]\\n         var = r14 - rcx\\n         cmova rcx,14\\n         qword [var_520h] = rcx\\n         rcx = qword [rsi + 0x60]\\n         var = rcx - r8\\n         cmovg r8,cx\\n         r15 = qword [var_4e0h]\\n         r15 += rax\\n         var = dword [0x100008588] - 0 // [0x100008588:4]=0\\n         qword [var_4e0h] = r15\\n         if  (!var) goto loc_0x100004f67 // likely\\n\\n    loc_0x100004e41: // orphan\\n         dword [var_4c4h] = ebx\\n         rax = qword [var_4c0h]\\n         rsi = qword [rax + 0x60]\\n         rax = qword [rsi + 0x68]\\n         rcx = qword [var_4e8h]\\n         var = rax - rcx\\n         cmova rcx,ax\\n         qword [var_4e8h] = rcx\\n         rcx = qword [rsi + 8]\\n         rdx = qword [var_4b8h]\\n         var = rcx - rdx\\n         cmova rdx,cx\\n         qword [var_4b8h] = rdx\\n         ecx = word [rsi + 6]\\n         var = r14 - rcx\\n         cmova rcx,14\\n         qword [var_520h] = rcx\\n         rcx = qword [rsi + 0x60]\\n         var = rcx - r8\\n         cmovg r8,cx\\n         r15 = qword [var_4e0h]\\n         r15 += rax\\n         var = dword [0x100008588] - 0 // [0x100008588:4]=0\\n         qword [var_4e0h] = r15\\n         if  (!var) goto loc_0x100004f67 // likely\\n         qword [var_500h] = r8\\n         var = dword [0x1000085c8] - 0 // [0x1000085c8:4]=1\\n         ecx = dword [rsi + 0x10]\\n         qword [var_4d8h] = rsi\\n         if  (!var) goto loc_0x100004f8c // unlikely\\n\\n    loc_0x100004ebf: // orphan\\n         qword [var_500h] = r8\\n         var = dword [0x1000085c8] - 0 // [0x1000085c8:4]=1\\n         ecx = dword [rsi + 0x10]\\n         qword [var_4d8h] = rsi\\n         if  (!var) goto loc_0x100004f8c // unlikely\\n         rbx = rsi\\n         esi = 0xd                // size_t size\\n         rdi = s                  // char *s\\n         r13 = rip + 0x2cf5       // \\\"%u\\\"\\n                                  // 0x100007be5\\n         rdx = r13                // const char *format // \\\"%u\\\"\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(\\\"\\\", 0x00030000, \\\"%u\\\", ?)\\n         ecx = dword [rbx + 0x14] //  ...\\n         esi = 0xd                // size_t size\\n         r14 = r12\\n         rbx = var_3dh\\n         rdi = rbx                // char *s\\n         rdx = r13                // const char *format // \\\"%u\\\"\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(\\\"\\\", 0x00030000, \\\"%u\\\", ?)\\n         r13 = s\\n         goto loc_0x100004fbe\\n\\n    loc_0x100004edd: // orphan\\n         rbx = rsi\\n         esi = 0xd                // size_t size\\n         rdi = s                  // char *s\\n         r13 = rip + 0x2cf5       // \\\"%u\\\"\\n                                  // 0x100007be5\\n         rdx = r13                // const char *format // \\\"%u\\\"\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(\\\"\\\", 0x00030000, \\\"%u\\\", ?)\\n         ecx = dword [rbx + 0x14] //  ...\\n         esi = 0xd                // size_t size\\n         r14 = r12\\n         rbx = var_3dh\\n         rdi = rbx                // char *s\\n         rdx = r13                // const char *format // \\\"%u\\\"\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(\\\"\\\", 0x00030000, \\\"%u\\\", ?)\\n         r13 = s\\n         goto loc_0x100004fbe\\n         // CODE XREF from sym.func.100004b25 @ 0x100004e3b(x)\\n         ecx = dword [var_4a8h]\\n         eax = dword [var_4b0h]\\n         rdi = qword [var_4c0h]\\n         goto loc_0x10000534e\\n\\n    loc_0x100004f1f: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004e3b(x)\\n         ecx = dword [var_4a8h]\\n         eax = dword [var_4b0h]\\n         rdi = qword [var_4c0h]\\n         goto loc_0x10000534e\\n         // CODE XREFS from sym.func.100004b25 @ 0x100004db1(x), 0x100004dbb(x)\\n         qword [var_508h] = r12\\n         r15d = ebx\\n         rbx = r8\\n         r12 = r13\\n         r13 = rdi\\n         sym.func.100007344  ()   // sym.func.100007344(0x0)\\n         rdi = r13\\n         r13 = r12\\n         r8 = rbx\\n         ebx = r15d\\n         r12 = qword [var_508h]\\n         goto loc_0x10000535c\\n\\n    loc_0x100004f37: // orphan\\n         // CODE XREFS from sym.func.100004b25 @ 0x100004db1(x), 0x100004dbb(x)\\n         qword [var_508h] = r12\\n         r15d = ebx\\n         rbx = r8\\n         r12 = r13\\n         r13 = rdi\\n         sym.func.100007344  ()   // sym.func.100007344(0x0)\\n         rdi = r13\\n         r13 = r12\\n         r8 = rbx\\n         ebx = r15d\\n         r12 = qword [var_508h]\\n         goto loc_0x10000535c\\n         // CODE XREF from sym.func.100004b25 @ 0x100004eb9(x)\\n         ecx = dword [var_4a8h]\\n         eax = dword [var_4b0h]\\n         ebx = dword [var_4c4h]\\n         rdi = qword [var_4c0h]\\n         r14 = qword [var_520h]\\n         goto loc_0x10000534e\\n\\n    loc_0x100004f67: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004eb9(x)\\n         ecx = dword [var_4a8h]\\n         eax = dword [var_4b0h]\\n         ebx = dword [var_4c4h]\\n         rdi = qword [var_4c0h]\\n         r14 = qword [var_520h]\\n         goto loc_0x10000534e\\n         // CODE XREF from sym.func.100004b25 @ 0x100004ed7(x)\\n         edi = ecx                // uid_t uid\\n         esi = 0                  // int nouser\\n         sym.imp.user_from_uid  ()\\n                                  // char *user_from_uid(-1, -1)\\n         var = rax & rax\\n         if  (!var) goto loc_0x10000552d // likely\\n\\n    loc_0x100004f8c: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004ed7(x)\\n         edi = ecx                // uid_t uid\\n         esi = 0                  // int nouser\\n         sym.imp.user_from_uid  ()\\n                                  // char *user_from_uid(-1, -1)\\n         var = rax & rax\\n         if  (!var) goto loc_0x10000552d // likely\\n         r13 = rax\\n         rax = qword [var_4d8h]\\n         edi = dword [rax + 0x14] // gid_t gid\\n         esi = 0                  // int nogroup\\n         sym.imp.group_from_gid  ()\\n                                  // char *group_from_gid(-1, -1)\\n         var = rax & rax\\n         if  (!var) goto loc_0x100005534 // likely\\n\\n    loc_0x100004f9e: // orphan\\n         r13 = rax\\n         rax = qword [var_4d8h]\\n         edi = dword [rax + 0x14] // gid_t gid\\n         esi = 0                  // int nogroup\\n         sym.imp.group_from_gid  ()\\n                                  // char *group_from_gid(-1, -1)\\n         var = rax & rax\\n         if  (!var) goto loc_0x100005534 // likely\\n         rbx = rax\\n\\n    loc_0x100004fbb: // orphan\\n         rbx = rax\\n         // CODE XREF from sym.func.100004b25 @ 0x100004f1a(x)\\n         qword [src] = r13\\n         rdi = r13                // const char *s\\n         sym.imp.strlen  ()\\n                                  // size_t strlen(-1)\\n         r14 = rax\\n         ecx = dword [var_4b0h]\\n         eax = ecx\\n         var = r14 - rax\\n         eax = r14d\\n         cmovbe eax,cx\\n         dword [var_50ch] = eax\\n         qword [var_4b0h] = rbx\\n         rdi = rbx                // const char *s\\n         sym.imp.strlen  ()\\n                                  // size_t strlen(-1)\\n         r13 = rax\\n         ecx = dword [var_4a8h]\\n         eax = ecx\\n         var = r13 - rax\\n         eax = r13d\\n         cmovbe eax,cx\\n         dword [var_4a8h] = eax\\n         var = dword [0x1000085d0] - 0 // [0x1000085d0:4]=1\\n         if  (!var) goto loc_0x10000507b // unlikely\\n\\n    loc_0x100004fbe: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004f1a(x)\\n         qword [src] = r13\\n         rdi = r13                // const char *s\\n         sym.imp.strlen  ()\\n                                  // size_t strlen(-1)\\n         r14 = rax\\n         ecx = dword [var_4b0h]\\n         eax = ecx\\n         var = r14 - rax\\n         eax = r14d\\n         cmovbe eax,cx\\n         dword [var_50ch] = eax\\n         qword [var_4b0h] = rbx\\n         rdi = rbx                // const char *s\\n         sym.imp.strlen  ()\\n                                  // size_t strlen(-1)\\n         r13 = rax\\n         ecx = dword [var_4a8h]\\n         eax = ecx\\n         var = r13 - rax\\n         eax = r13d\\n         cmovbe eax,cx\\n         dword [var_4a8h] = eax\\n         var = dword [0x1000085d0] - 0 // [0x1000085d0:4]=1\\n         if  (!var) goto loc_0x10000507b // unlikely\\n         rax = qword [var_4d8h]\\n         edi = dword [rax + 0x74]\\n         sym.imp.fflagstostr  ()\\n         var = rax & rax\\n         if  (!var) goto loc_0x100005526 // likely\\n\\n    loc_0x100005019: // orphan\\n         rax = qword [var_4d8h]\\n         edi = dword [rax + 0x74]\\n         sym.imp.fflagstostr  ()\\n         var = rax & rax\\n         if  (!var) goto loc_0x100005526 // likely\\n         var = byte [rax] - 0\\n         if  (var) goto loc_0x100005053 // unlikely\\n\\n    loc_0x100005031: // orphan\\n         var = byte [rax] - 0\\n         if  (var) goto loc_0x100005053 // unlikely\\n         rdi = rax                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         rdi = rip + 0x2bc0       // \\\"-\\\"\\n                                  // 0x100007c05 // const char *src\\n         sym.imp.strdup  ()\\n                                  // char *strdup(\\\"-\\\")\\n         var = rax & rax\\n         if  (!var) goto loc_0x100005526 // likely\\n\\n    loc_0x100005036: // orphan\\n         rdi = rax                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         rdi = rip + 0x2bc0       // \\\"-\\\"\\n                                  // 0x100007c05 // const char *src\\n         sym.imp.strdup  ()\\n                                  // char *strdup(\\\"-\\\")\\n         var = rax & rax\\n         if  (!var) goto loc_0x100005526 // likely\\n         // CODE XREF from sym.func.100004b25 @ 0x100005034(x)\\n         qword [var_518h] = rax\\n         rdi = rax                // const char *s\\n         sym.imp.strlen  ()\\n                                  // size_t strlen(-1)\\n         rcx = qword [var_4d0h]\\n         rcx = ecx\\n         var = rax - rcx\\n         cmova ecx,ax\\n         qword [var_4d0h] = rcx\\n         goto loc_0x10000507d\\n\\n    loc_0x100005053: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100005034(x)\\n         qword [var_518h] = rax\\n         rdi = rax                // const char *s\\n         sym.imp.strlen  ()\\n                                  // size_t strlen(-1)\\n         rcx = qword [var_4d0h]\\n         rcx = ecx\\n         var = rax - rcx\\n         cmova ecx,ax\\n         qword [var_4d0h] = rcx\\n         goto loc_0x10000507d\\n         // CODE XREF from sym.func.100004b25 @ 0x100005017(x)\\n         eax = 0\\n\\n    loc_0x10000507b: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100005017(x)\\n         eax = 0\\n         // CODE XREF from sym.func.100004b25 @ 0x100005079(x)\\n         r13 += r14\\n         rsi = rax + r13\\n         rsi += 0x3c              // size_t size\\n         edi = 1                  // size_t nmeb\\n         sym.imp.calloc  ()\\n                                  // void *calloc(0x00000000, 0x00000000)\\n         var = rax & rax\\n         if  (!var) goto loc_0x10000551f // likely\\n\\n    loc_0x10000507d: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100005079(x)\\n         r13 += r14\\n         rsi = rax + r13\\n         rsi += 0x3c              // size_t size\\n         edi = 1                  // size_t nmeb\\n         sym.imp.calloc  ()\\n                                  // void *calloc(0x00000000, 0x00000000)\\n         var = rax & rax\\n         if  (!var) goto loc_0x10000551f // likely\\n         rbx = r14\\n         r14 = rax\\n         rdi = rax + 0x35         // char *dest\\n         qword [rax] = rdi\\n         qword [dest] = rdi\\n         rsi = qword [src]        // const char *src\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(\\\"\\\", -1)\\n         rdi = rbx + r14\\n         rdi += 0x36              // char *dest // (cstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         qword [r14 + 8] = rdi\\n         rsi = qword [var_4b0h]   // const char *src\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(\\\"\\\", -1)\\n         r15 = qword [var_4c0h]\\n         var = word [r15 + 0x56] - 0 // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         qword [var_508h] = r12\\n         qword [var_570h] = r13\\n         if  (!var) goto loc_0x10000511b // likely\\n\\n    loc_0x10000509b: // orphan\\n         rbx = r14\\n         r14 = rax\\n         rdi = rax + 0x35         // char *dest\\n         qword [rax] = rdi\\n         qword [dest] = rdi\\n         rsi = qword [src]        // const char *src\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(\\\"\\\", -1)\\n         rdi = rbx + r14\\n         rdi += 0x36              // char *dest // (cstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         qword [r14 + 8] = rdi\\n         rsi = qword [var_4b0h]   // const char *src\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(\\\"\\\", -1)\\n         r15 = qword [var_4c0h]\\n         var = word [r15 + 0x56] - 0 // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         qword [var_508h] = r12\\n         qword [var_570h] = r13\\n         if  (!var) goto loc_0x10000511b // likely\\n         rax = qword [r15 + 8]    // (cstr 0x00000000) \\\"5\\\"\\n         rcx = qword [rax + 0x28]\\n         r8 = r15 + 0x68          // (cstr 0x00000000) \\\"5\\\"\\n         esi = 0x401              // size_t size // (cstr 0x00000000) \\\"5\\\"\\n         rbx = endptr             // (cstr 0x00000000) \\\"5\\\"\\n         rdi = rbx                // char *s // (cstr 0x00000000) \\\"5\\\"\\n         rdx = rip + 0x2b08       // str._s__s\\n                                  // 0x100007c1a // \\\"%s/%s\\\" // const char *format\\n         eax = 0                  // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(\\\"\\\", 0x00000000, \\\"%s/%s\\\", ?)\\n         goto loc_0x10000511f\\n\\n    loc_0x1000050f0: // orphan\\n         rax = qword [r15 + 8]    // (cstr 0x00000000) \\\"5\\\"\\n         rcx = qword [rax + 0x28]\\n         r8 = r15 + 0x68          // (cstr 0x00000000) \\\"5\\\"\\n         esi = 0x401              // size_t size // (cstr 0x00000000) \\\"5\\\"\\n         rbx = endptr             // (cstr 0x00000000) \\\"5\\\"\\n         rdi = rbx                // char *s // (cstr 0x00000000) \\\"5\\\"\\n         rdx = rip + 0x2b08       // str._s__s\\n                                  // 0x100007c1a // \\\"%s/%s\\\" // const char *format\\n         eax = 0                  // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(\\\"\\\", 0x00000000, \\\"%s/%s\\\", ?)\\n         goto loc_0x10000511f\\n         // CODE XREF from sym.func.100004b25 @ 0x1000050ee(x)\\n         rbx = r15 + 0x68         // (cstr 0x00000000) \\\"5\\\"\\n\\n    loc_0x10000511b: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x1000050ee(x)\\n         rbx = r15 + 0x68         // (cstr 0x00000000) \\\"5\\\"\\n         // CODE XREF from sym.func.100004b25 @ 0x100005119(x)\\n         qword [var_4b0h] = rbx\\n         rdi = rbx\\n         esi = 0                  // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         edx = 0                  // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         ecx = 1                  // (pstr 0x00000000) \\\"5\\\"\\n         sym.imp.listxattr  ()\\n         r13d = 0\\n         var = rax & rax          // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         qword [src] = rax\\n         cmovg r13,ax\\n         if  (var <= 0) goto loc_0x1000051f1 // likely\\n\\n    loc_0x10000511f: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100005119(x)\\n         qword [var_4b0h] = rbx\\n         rdi = rbx\\n         esi = 0                  // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         edx = 0                  // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         ecx = 1                  // (pstr 0x00000000) \\\"5\\\"\\n         sym.imp.listxattr  ()\\n         r13d = 0\\n         var = rax & rax          // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         qword [src] = rax\\n         cmovg r13,ax\\n         if  (var <= 0) goto loc_0x1000051f1 // likely\\n         var = dword [0x1000085dc] - 0 // [0x1000085dc:4]=1\\n         if  (!var) goto loc_0x1000051f1 // unlikely\\n\\n    loc_0x100005151: // orphan\\n         var = dword [0x1000085dc] - 0 // [0x1000085dc:4]=1\\n         if  (!var) goto loc_0x1000051f1 // unlikely\\n         rdi = r13                // size_t size\\n         sym.imp.malloc  ()\\n                                  //  void *malloc(-1)\\n         qword [r14 + 0x18] = rax\\n         rdi = qword [var_4b0h]\\n         rsi = rax\\n         rdx = r13\\n         ecx = 1                  // (pstr 0x00000000) \\\"5\\\"\\n         sym.imp.listxattr  ()\\n         rbx = qword [r14 + 0x18]\\n         r15 = qword [r14 + 0x20]\\n         r12d = dword [r14 + 0x30]\\n\\n    loc_0x10000515e: // orphan\\n         rdi = r13                // size_t size\\n         sym.imp.malloc  ()\\n                                  //  void *malloc(-1)\\n         qword [r14 + 0x18] = rax\\n         rdi = qword [var_4b0h]\\n         rsi = rax\\n         rdx = r13\\n         ecx = 1                  // (pstr 0x00000000) \\\"5\\\"\\n         sym.imp.listxattr  ()\\n         rbx = qword [r14 + 0x18]\\n         r15 = qword [r14 + 0x20]\\n         r12d = dword [r14 + 0x30]\\n         // CODE XREF from sym.func.100004b25 @ 0x1000051ef(x)\\n         rax = r12d\\n         rsi = rax*4 + 4          // size_t size // (pstr 0x00000000) \\\"5\\\"\\n         rdi = r15                // void *ptr\\n         sym.imp.reallocf  ()\\n                                  // void *reallocf(-1, 0x00000000)\\n         qword [r14 + 0x20] = rax\\n         rdi = qword [var_4b0h]\\n         rsi = rbx\\n         edx = 0                  // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         ecx = 0                  // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         r8d = 0                  // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         r9d = 1                  // (pstr 0x00000000) \\\"5\\\"\\n         sym.imp.getxattr  ()\\n         r15 = qword [r14 + 0x20]\\n         rcx = dword [r14 + 0x30]\\n         dword [r15 + rcx*4] = eax\\n         r12d = dword [r14 + 0x30]\\n         r12d+\\n         dword [r14 + 0x30] = r12d\\n         rdi = rbx                // const char *s\\n         sym.imp.strlen  ()\\n                                  // size_t strlen(-1)\\n         rbx += rax\\n         rbx+\\n         rax = qword [r14 + 0x18]\\n         rax += r13\\n         var = rbx - rax\\n         if  (((unsigned) var) < 0) goto 0x10000518d // unlikely\\n\\n    loc_0x10000518d: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x1000051ef(x)\\n         rax = r12d\\n         rsi = rax*4 + 4          // size_t size // (pstr 0x00000000) \\\"5\\\"\\n         rdi = r15                // void *ptr\\n         sym.imp.reallocf  ()\\n                                  // void *reallocf(-1, 0x00000000)\\n         qword [r14 + 0x20] = rax\\n         rdi = qword [var_4b0h]\\n         rsi = rbx\\n         edx = 0                  // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         ecx = 0                  // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         r8d = 0                  // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n         r9d = 1                  // (pstr 0x00000000) \\\"5\\\"\\n         sym.imp.getxattr  ()\\n         r15 = qword [r14 + 0x20]\\n         rcx = dword [r14 + 0x30]\\n         dword [r15 + rcx*4] = eax\\n         r12d = dword [r14 + 0x30]\\n         r12d+\\n         dword [r14 + 0x30] = r12d\\n         rdi = rbx                // const char *s\\n         sym.imp.strlen  ()\\n                                  // size_t strlen(-1)\\n         rbx += rax\\n         rbx+\\n         rax = qword [r14 + 0x18]\\n         rax += r13\\n         var = rbx - rax\\n         if  (((unsigned) var) < 0) goto 0x10000518d // unlikely\\n         // CODE XREFS from sym.func.100004b25 @ 0x10000514b(x), 0x100005158(x)\\n         rdi = qword [var_4b0h]\\n         esi = 0x100\\n         sym.imp.acl_get_link_np  ()\\n         qword [r14 + 0x28] = rax\\n         var = rax & rax\\n         if  (!var) goto loc_0x100005232 // likely\\n\\n    loc_0x1000051f1: // orphan\\n         // CODE XREFS from sym.func.100004b25 @ 0x10000514b(x), 0x100005158(x)\\n         rdi = qword [var_4b0h]\\n         esi = 0x100\\n         sym.imp.acl_get_link_np  ()\\n         qword [r14 + 0x28] = rax\\n         var = rax & rax\\n         if  (!var) goto loc_0x100005232 // likely\\n         rdi = rax\\n         esi = 0\\n         rdx = var_578h\\n         sym.imp.acl_get_entry  ()\\n         var = eax - 0xffffffff\\n         if  (var) goto loc_0x100005232 // likely\\n\\n    loc_0x10000520b: // orphan\\n         rdi = rax\\n         esi = 0\\n         rdx = var_578h\\n         sym.imp.acl_get_entry  ()\\n         var = eax - 0xffffffff\\n         if  (var) goto loc_0x100005232 // likely\\n         rdi = qword [r14 + 0x28] // void *obj_p\\n         sym.imp.acl_free  ()\\n                                  // int acl_free(-1)\\n         qword [r14 + 0x28] = 0\\n\\n    loc_0x100005221: // orphan\\n         rdi = qword [r14 + 0x28] // void *obj_p\\n         sym.imp.acl_free  ()\\n                                  // int acl_free(-1)\\n         qword [r14 + 0x28] = 0\\n         // CODE XREFS from sym.func.100004b25 @ 0x100005209(x), 0x10000521f(x)\\n         var = qword [src] - 0\\n         r13 = qword [var_4f0h]\\n         r12 = qword [var_508h]\\n         r15d = dword [var_4c4h]\\n         if  (var <= 0) goto loc_0x10000525f // likely\\n\\n    loc_0x100005232: // orphan\\n         // CODE XREFS from sym.func.100004b25 @ 0x100005209(x), 0x10000521f(x)\\n         var = qword [src] - 0\\n         r13 = qword [var_4f0h]\\n         r12 = qword [var_508h]\\n         r15d = dword [var_4c4h]\\n         if  (var <= 0) goto loc_0x10000525f // likely\\n         byte [r14 + 0x34] = 0x40 // '@'\\n                                  // [0x40:1]=0\\n         rdx = qword [var_4d8h]\\n         goto loc_0x100005279\\n\\n    loc_0x100005251: // orphan\\n         byte [r14 + 0x34] = 0x40 // '@'\\n                                  // [0x40:1]=0\\n         rdx = qword [var_4d8h]\\n         goto loc_0x100005279\\n         // CODE XREF from sym.func.100004b25 @ 0x10000524f(x)\\n         var = qword [r14 + 0x28] - 0\\n         rdx = qword [var_4d8h]\\n         if  (!var) goto loc_0x100005274 // likely\\n\\n    loc_0x10000525f: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x10000524f(x)\\n         var = qword [r14 + 0x28] - 0\\n         rdx = qword [var_4d8h]\\n         if  (!var) goto loc_0x100005274 // likely\\n         byte [r14 + 0x34] = 0x2b // '+'\\n                                  // [0x2b:1]=0\\n         goto loc_0x100005279\\n\\n    loc_0x10000526d: // orphan\\n         byte [r14 + 0x34] = 0x2b // '+'\\n                                  // [0x2b:1]=0\\n         goto loc_0x100005279\\n         // CODE XREF from sym.func.100004b25 @ 0x10000526b(x)\\n         byte [r14 + 0x34] = 0x20 // [0x20:1]=0\\n\\n    loc_0x100005274: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x10000526b(x)\\n         byte [r14 + 0x34] = 0x20 // [0x20:1]=0\\n         // CODE XREFS from sym.func.100004b25 @ 0x10000525d(x), 0x100005272(x)\\n         var = dword [0x1000085e0] - 0 // [0x1000085e0:4]=1\\n         if  (!var) goto loc_0x100005292 // unlikely\\n\\n    loc_0x100005279: // orphan\\n         // CODE XREFS from sym.func.100004b25 @ 0x10000525d(x), 0x100005272(x)\\n         var = dword [0x1000085e0] - 0 // [0x1000085e0:4]=1\\n         if  (!var) goto loc_0x100005292 // unlikely\\n         var = rdx & rdx\\n         if  (!var) goto loc_0x100005292 // likely\\n\\n    loc_0x100005282: // orphan\\n         var = rdx & rdx\\n         if  (!var) goto loc_0x100005292 // likely\\n         var = byte [rdx + 0x77] & 0x40\\n         if  (!var) goto loc_0x100005292 // likely\\n\\n    loc_0x100005287: // orphan\\n         var = byte [rdx + 0x77] & 0x40\\n         if  (!var) goto loc_0x100005292 // likely\\n         byte [r14 + 0x34] = 0x25 // '%'\\n                                  // [0x25:1]=0\\n\\n    loc_0x10000528d: // orphan\\n         byte [r14 + 0x34] = 0x25 // '%'\\n                                  // [0x25:1]=0\\n         // CODE XREFS from sym.func.100004b25 @ 0x100005280(x), 0x100005285(x), 0x10000528b(x)\\n         var = dword [0x1000085d8] - 0 // [0x1000085d8:4]=1\\n         if  (var) goto loc_0x1000052b2 // likely\\n\\n    loc_0x100005292: // orphan\\n         // CODE XREFS from sym.func.100004b25 @ 0x100005280(x), 0x100005285(x), 0x10000528b(x)\\n         var = dword [0x1000085d8] - 0 // [0x1000085d8:4]=1\\n         if  (var) goto loc_0x1000052b2 // likely\\n         rdi = qword [r14 + 0x28] // void *obj_p\\n         rbx = rdx\\n         sym.imp.acl_free  ()\\n                                  // int acl_free(-1)\\n         rdx = rbx\\n         qword [r14 + 0x28] = 0\\n\\n    loc_0x10000529b: // orphan\\n         rdi = qword [r14 + 0x28] // void *obj_p\\n         rbx = rdx\\n         sym.imp.acl_free  ()\\n                                  // int acl_free(-1)\\n         rdx = rbx\\n         qword [r14 + 0x28] = 0\\n         // CODE XREF from sym.func.100004b25 @ 0x100005299(x)\\n         eax = dword [rdx + 4]\\n         ecx = 0x4000\\n         eax |= ecx\\n         eax &= 0xf000\\n         var = eax - 0x6000\\n         if  (var) goto loc_0x1000052ec // likely\\n\\n    loc_0x1000052b2: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100005299(x)\\n         eax = dword [rdx + 4]\\n         ecx = 0x4000\\n         eax |= ecx\\n         eax &= 0xf000\\n         var = eax - 0x6000\\n         if  (var) goto loc_0x1000052ec // likely\\n         rcx = dword [rdx + 0x18]\\n         edi = 0                  // char *s\\n         esi = 0                  // size_t size\\n         rdx = rip + 0x2949       // str._jx\\n                                  // 0x100007c20 // \\\"%#jx\\\" // const char *format\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, -1, \\\"%#jx\\\", ?)\\n         var = dword [var_534h] - eax\\n         jae 0x1000052ec          // likely\\n\\n    loc_0x1000052c8: // orphan\\n         rcx = dword [rdx + 0x18]\\n         edi = 0                  // char *s\\n         esi = 0                  // size_t size\\n         rdx = rip + 0x2949       // str._jx\\n                                  // 0x100007c20 // \\\"%#jx\\\" // const char *format\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, -1, \\\"%#jx\\\", ?)\\n         var = dword [var_534h] - eax\\n         jae 0x1000052ec          // likely\\n         dword [var_534h] = eax\\n\\n    loc_0x1000052e6: // orphan\\n         dword [var_534h] = eax\\n         // CODE XREFS from sym.func.100004b25 @ 0x1000052c6(x), 0x1000052e4(x)\\n         var = dword [0x1000085d0] - 0 // [0x1000085d0:4]=1\\n         if  (!var) goto loc_0x100005326 // unlikely\\n\\n    loc_0x1000052ec: // orphan\\n         // CODE XREFS from sym.func.100004b25 @ 0x1000052c6(x), 0x1000052e4(x)\\n         var = dword [0x1000085d0] - 0 // [0x1000085d0:4]=1\\n         if  (!var) goto loc_0x100005326 // unlikely\\n         rax = qword [var_570h]\\n         rcx = qword [dest]\\n         rdi = rax + rcx\\n         rdi += 2                 // char *dest\\n         qword [r14 + 0x10] = rdi\\n         rbx = qword [var_518h]\\n         rsi = rbx                // const char *src\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(\\\"\\\", -1)\\n         rdi = rbx                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n\\n    loc_0x1000052f5: // orphan\\n         rax = qword [var_570h]\\n         rcx = qword [dest]\\n         rdi = rax + rcx\\n         rdi += 2                 // char *dest\\n         qword [r14 + 0x10] = rdi\\n         rbx = qword [var_518h]\\n         rsi = rbx                // const char *src\\n         sym.imp.strcpy  ()\\n                                  // char *strcpy(\\\"\\\", -1)\\n         rdi = rbx                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         // CODE XREF from sym.func.100004b25 @ 0x1000052f3(x)\\n         rdi = qword [var_4c0h]\\n         qword [rdi + 0x20] = r14\\n         r8 = qword [var_500h]\\n         r14 = qword [var_520h]\\n         eax = dword [var_50ch]\\n         ecx = dword [var_4a8h]\\n         ebx = r15d\\n\\n    loc_0x100005326: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x1000052f3(x)\\n         rdi = qword [var_4c0h]\\n         qword [rdi + 0x20] = r14\\n         r8 = qword [var_500h]\\n         r14 = qword [var_520h]\\n         eax = dword [var_50ch]\\n         ecx = dword [var_4a8h]\\n         ebx = r15d\\n         // CODE XREFS from sym.func.100004b25 @ 0x100004f32(x), 0x100004f87(x)\\n         ebx+\\n         dword [var_4a8h] = ecx\\n         dword [var_4b0h] = eax\\n\\n    loc_0x10000534e: // orphan\\n         // CODE XREFS from sym.func.100004b25 @ 0x100004f32(x), 0x100004f87(x)\\n         ebx+\\n         dword [var_4a8h] = ecx\\n         dword [var_4b0h] = eax\\n         // CODE XREFS from sym.func.100004b25 @ 0x100004df3(x), 0x100004f62(x)\\n         rdi = qword [rdi + 0x10]\\n         var = rdi & rdi\\n         if  (var) goto loc_0x100004da9 // likely\\n\\n    loc_0x10000535c: // orphan\\n         // CODE XREFS from sym.func.100004b25 @ 0x100004df3(x), 0x100004f62(x)\\n         rdi = qword [rdi + 0x10]\\n         var = rdi & rdi\\n         if  (var) goto loc_0x100004da9 // likely\\n         var = ebx & ebx\\n         if  (var) goto loc_0x10000539f // unlikely\\n\\n    loc_0x100005369: // orphan\\n         var = ebx & ebx\\n         if  (var) goto loc_0x10000539f // unlikely\\n         goto loc_0x100005378\\n\\n    loc_0x10000536d: // orphan\\n         goto loc_0x100005378\\n         // CODE XREF from sym.func.100004b25 @ 0x100004d8c(x)\\n         eax = 0\\n         qword [var_4e0h] = rax\\n\\n    loc_0x10000536f: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004d8c(x)\\n         eax = 0\\n         qword [var_4e0h] = rax\\n         // CODE XREF from sym.func.100004b25 @ 0x10000536d(x)\\n         eax = dword [0x100008588] // [0x100008588:4]=0\\n         eax |= dword [0x1000085d4] // [0x1000085d4:4]=1\\n         al = e\\n         var = qword [var_528h] - 0\\n         if  (!var) goto loc_0x100005539 // likely\\n\\n    loc_0x100005378: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x10000536d(x)\\n         eax = dword [0x100008588] // [0x100008588:4]=0\\n         eax |= dword [0x1000085d4] // [0x1000085d4:4]=1\\n         al = e\\n         var = qword [var_528h] - 0\\n         if  (!var) goto loc_0x100005539 // likely\\n         ebx = 0\\n         var = al & al\\n         if  (var) goto loc_0x100005539 // unlikely\\n\\n    loc_0x100005395: // orphan\\n         ebx = 0\\n         var = al & al\\n         if  (var) goto loc_0x100005539 // unlikely\\n         // CODE XREF from sym.func.100004b25 @ 0x10000536b(x)\\n         qword [var_560h] = r13\\n         dword [var_550h] = ebx\\n         dword [var_54ch] = r12d\\n         var = byte [var_4a1h] - 0\\n         if  (!var) goto loc_0x100005497 // unlikely\\n\\n    loc_0x10000539f: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x10000536b(x)\\n         qword [var_560h] = r13\\n         dword [var_550h] = ebx\\n         dword [var_54ch] = r12d\\n         var = byte [var_4a1h] - 0\\n         if  (!var) goto loc_0x100005497 // unlikely\\n         qword [var_500h] = r8\\n         rax = qword [var_4e0h]\\n         qword [var_558h] = rax\\n         rax = qword [var_4e8h]\\n         edx = 0\\n         qword [0x100008620] /=\\n         var = rdx - 1\\n         rax = rax - 0xffffffffffffffff\\n         r15 = rip + 0x2831       // str._llu\\n                                  // 0x100007c25 // \\\"%llu\\\"\\n         edi = 0                  // char *s\\n         esi = 0                  // size_t size\\n         rdx = r15                // const char *format // \\\"%llu\\\" str._llu\\n         rcx = rax                //  ...\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, -1, \\\"%llu\\\", ?)\\n         dword [var_548h] = eax\\n         rax = qword [var_4d0h]\\n         dword [var_544h] = eax\\n         eax = dword [var_4a8h]\\n         dword [var_540h] = eax\\n         edi = 0                  // char *s\\n         esi = 0                  // size_t size\\n         rdx = r15                // const char *format // \\\"%llu\\\" str._llu\\n         rcx = qword [var_4b8h]   //  ...\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, -1, \\\"%llu\\\", ?)\\n         dword [var_53ch] = eax\\n         edi = 0                  // char *s\\n         esi = 0                  // size_t size\\n         rdx = r15                // const char *format // \\\"%llu\\\" str._llu\\n         rcx = r14                //  ...\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, -1, \\\"%llu\\\", ?)\\n         dword [var_538h] = eax\\n         eax = 5\\n         var = dword [0x1000085c0] - 0 // [0x1000085c0:4]=1\\n         if  (var) goto loc_0x10000547d // likely\\n\\n    loc_0x1000053c0: // orphan\\n         qword [var_500h] = r8\\n         rax = qword [var_4e0h]\\n         qword [var_558h] = rax\\n         rax = qword [var_4e8h]\\n         edx = 0\\n         qword [0x100008620] /=\\n         var = rdx - 1\\n         rax = rax - 0xffffffffffffffff\\n         r15 = rip + 0x2831       // str._llu\\n                                  // 0x100007c25 // \\\"%llu\\\"\\n         edi = 0                  // char *s\\n         esi = 0                  // size_t size\\n         rdx = r15                // const char *format // \\\"%llu\\\" str._llu\\n         rcx = rax                //  ...\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, -1, \\\"%llu\\\", ?)\\n         dword [var_548h] = eax\\n         rax = qword [var_4d0h]\\n         dword [var_544h] = eax\\n         eax = dword [var_4a8h]\\n         dword [var_540h] = eax\\n         edi = 0                  // char *s\\n         esi = 0                  // size_t size\\n         rdx = r15                // const char *format // \\\"%llu\\\" str._llu\\n         rcx = qword [var_4b8h]   //  ...\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, -1, \\\"%llu\\\", ?)\\n         dword [var_53ch] = eax\\n         edi = 0                  // char *s\\n         esi = 0                  // size_t size\\n         rdx = r15                // const char *format // \\\"%llu\\\" str._llu\\n         rcx = r14                //  ...\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, -1, \\\"%llu\\\", ?)\\n         dword [var_538h] = eax\\n         eax = 5\\n         var = dword [0x1000085c0] - 0 // [0x1000085c0:4]=1\\n         if  (var) goto loc_0x10000547d // likely\\n         rdx = rip + 0x27bf       // str._lld\\n                                  // 0x100007c2a // \\\"%lld\\\" // const char *format\\n         edi = 0                  // char *s\\n         esi = 0                  // size_t size\\n         rcx = qword [var_500h]\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, -1, \\\"%lld\\\", ?)\\n\\n    loc_0x100005464: // orphan\\n         rdx = rip + 0x27bf       // str._lld\\n                                  // 0x100007c2a // \\\"%lld\\\" // const char *format\\n         edi = 0                  // char *s\\n         esi = 0                  // size_t size\\n         rcx = qword [var_500h]\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, -1, \\\"%lld\\\", ?)\\n         // CODE XREF from sym.func.100004b25 @ 0x100005462(x)\\n         var = dword [var_534h] - eax\\n         jae 0x10000548b          // likely\\n\\n    loc_0x10000547d: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100005462(x)\\n         var = dword [var_534h] - eax\\n         jae 0x10000548b          // likely\\n         dword [var_534h] = eax\\n\\n    loc_0x100005485: // orphan\\n         dword [var_534h] = eax\\n         // CODE XREF from sym.func.100004b25 @ 0x100005483(x)\\n         eax = dword [var_4b0h]\\n         dword [var_530h] = eax\\n\\n    loc_0x10000548b: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100005483(x)\\n         eax = dword [var_4b0h]\\n         dword [var_530h] = eax\\n         // CODE XREF from sym.func.100004b25 @ 0x1000053ba(x)\\n         var = dword [0x10000859c] - 0 // [0x10000859c:4]=1\\n         if  (!var) goto loc_0x1000054be // unlikely\\n\\n    loc_0x100005497: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x1000053ba(x)\\n         var = dword [0x10000859c] - 0 // [0x10000859c:4]=1\\n         if  (!var) goto loc_0x1000054be // unlikely\\n         eax = dword [var_534h]\\n         ecx = rax - 1\\n         edx = 0xaaaaaaab\\n         rdx = rdx * rcx\\n         rdx >>>= 0x21\\n         edx += eax\\n         dword [var_534h] = edx\\n\\n    loc_0x1000054a0: // orphan\\n         eax = dword [var_534h]\\n         ecx = rax - 1\\n         edx = 0xaaaaaaab\\n         rdx = rdx * rcx\\n         rdx >>>= 0x21\\n         edx += eax\\n         dword [var_534h] = edx\\n         // CODE XREF from sym.func.100004b25 @ 0x10000549e(x)\\n         rdi = var_560h\\n         qword [0x100008670]  ()  // [0x100008670:8]=0 // 0x100008670(0x177aa0, 0x0, 0x0, 0x0)\\n         byte [0x10000867c] = 1   // [0x10000867c:1]=1\\n         var = dword [0x100008588] - 0 // [0x100008588:4]=0\\n         if  (!var) goto loc_0x100005539 // likely\\n\\n    loc_0x1000054be: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x10000549e(x)\\n         rdi = var_560h\\n         qword [0x100008670]  ()  // [0x100008670:8]=0 // 0x100008670(0x177aa0, 0x0, 0x0, 0x0)\\n         byte [0x10000867c] = 1   // [0x10000867c:1]=1\\n         var = dword [0x100008588] - 0 // [0x100008588:4]=0\\n         if  (!var) goto loc_0x100005539 // likely\\n         // CODE XREF from sym.func.100004b25 @ 0x10000551d(x)\\n         var = r13 & r13\\n         if  (!var) goto loc_0x100005539 // likely\\n\\n    loc_0x1000054db: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x10000551d(x)\\n         var = r13 & r13\\n         if  (!var) goto loc_0x100005539 // likely\\n         rbx = qword [r13 + 0x20]\\n         var = rbx & rbx\\n         if  (!var) goto loc_0x100005519 // likely\\n\\n    loc_0x1000054e0: // orphan\\n         rbx = qword [r13 + 0x20]\\n         var = rbx & rbx\\n         if  (!var) goto loc_0x100005519 // likely\\n         rdi = qword [rbx + 0x28]\\n         var = rdi & rdi\\n         if  (!var) goto loc_0x1000054f7 // likely\\n\\n    loc_0x1000054e9: // orphan\\n         rdi = qword [rbx + 0x28]\\n         var = rdi & rdi\\n         if  (!var) goto loc_0x1000054f7 // likely\\n         sym.imp.acl_free  ()\\n                                  // int acl_free(-1)\\n\\n    loc_0x1000054f2: // orphan\\n         sym.imp.acl_free  ()\\n                                  // int acl_free(-1)\\n         // CODE XREF from sym.func.100004b25 @ 0x1000054f0(x)\\n         rdi = qword [rbx + 0x18] // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         rdi = qword [rbx + 0x20] // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         rdi = rbx                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         qword [r13 + 0x20] = 0\\n\\n    loc_0x1000054f7: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x1000054f0(x)\\n         rdi = qword [rbx + 0x18] // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         rdi = qword [rbx + 0x20] // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         rdi = rbx                // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         qword [r13 + 0x20] = 0\\n         // CODE XREF from sym.func.100004b25 @ 0x1000054e7(x)\\n         r13 = qword [r13 + 0x10]\\n         goto loc_0x1000054db\\n\\n    loc_0x100005519: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x1000054e7(x)\\n         r13 = qword [r13 + 0x10]\\n         goto loc_0x1000054db\\n         // CODE XREF from sym.func.100004b25 @ 0x100005095(x)\\n         sym.func.10000731a  ()\\n\\n    loc_0x10000551f: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100005095(x)\\n         sym.func.10000731a  ()\\n         // CODE XREFS from sym.func.100004b25 @ 0x10000502b(x), 0x10000504d(x)\\n         sym.func.10000732f  ()\\n\\n    loc_0x100005526: // orphan\\n         // CODE XREFS from sym.func.100004b25 @ 0x10000502b(x), 0x10000504d(x)\\n         sym.func.10000732f  ()\\n         // CODE XREF from sym.func.100004b25 @ 0x100004f98(x)\\n         sym.func.1000072f0  ()\\n\\n    loc_0x10000552d: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004f98(x)\\n         sym.func.1000072f0  ()\\n         // CODE XREF from sym.func.100004b25 @ 0x100004fb5(x)\\n         sym.func.100007305  ()\\n\\n    loc_0x100005534: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100004fb5(x)\\n         sym.func.100007305  ()\\n         // XREFS: CODE 0x10000538f  CODE 0x100005399  CODE 0x1000054d9  \\n         // XREFS: CODE 0x1000054de  CODE 0x100005524  CODE 0x10000552b  \\n         // XREFS: CODE 0x100005532  \\n         rax = qword [reloc.__stack_chk_guard] // [0x100008010:8]=0\\n         rax = qword [rax]\\n         var = rax - qword [var_30h]\\n         if  (var) goto loc_0x10000555b // unlikely\\n\\n    loc_0x100005539: // orphan\\n         // XREFS: CODE 0x10000538f  CODE 0x100005399  CODE 0x1000054d9  \\n         // XREFS: CODE 0x1000054de  CODE 0x100005524  CODE 0x10000552b  \\n         // XREFS: CODE 0x100005532  \\n         rax = qword [reloc.__stack_chk_guard] // [0x100008010:8]=0\\n         rax = qword [rax]\\n         var = rax - qword [var_30h]\\n         if  (var) goto loc_0x10000555b // unlikely\\n         rsp += 0x558\\n         rbx = pop  ()\\n         r12 = pop  ()\\n         r13 = pop  ()\\n         r14 = pop  ()\\n         r15 = pop  ()\\n         rbp = pop  ()\\n         re\\n\\n    loc_0x100005549: // orphan\\n         rsp += 0x558\\n         rbx = pop  ()\\n         r12 = pop  ()\\n         r13 = pop  ()\\n         r14 = pop  ()\\n         r15 = pop  ()\\n         rbp = pop  ()\\n         re\\n         // CODE XREF from sym.func.100004b25 @ 0x100005547(x)\\n         sym.imp.__stack_chk_fail  ()\\n                                  // void __stack_chk_fail(void)\\n\\n    loc_0x10000555b: // orphan\\n         // CODE XREF from sym.func.100004b25 @ 0x100005547(x)\\n         sym.imp.__stack_chk_fail  ()\\n                                  // void __stack_chk_fail(void)\\n\\n}\\n\"}\n"