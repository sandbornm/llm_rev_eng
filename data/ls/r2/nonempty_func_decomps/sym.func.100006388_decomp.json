"{\"annotations\":[{\"start\":64,\"end\":64,\"offset\":4294992776,\"type\":\"offset\"},{\"start\":126,\"end\":126,\"offset\":4294992776,\"type\":\"offset\"},{\"start\":188,\"end\":188,\"offset\":4294992776,\"type\":\"offset\"},{\"start\":250,\"end\":250,\"offset\":4294992776,\"type\":\"offset\"},{\"start\":270,\"end\":270,\"offset\":4294992777,\"type\":\"offset\"},{\"start\":288,\"end\":288,\"offset\":4294992780,\"type\":\"offset\"},{\"start\":308,\"end\":308,\"offset\":4294992781,\"type\":\"offset\"},{\"start\":328,\"end\":328,\"offset\":4294992782,\"type\":\"offset\"},{\"start\":370,\"end\":370,\"offset\":4294992789,\"type\":\"offset\"},{\"start\":399,\"end\":399,\"offset\":4294992792,\"type\":\"offset\"},{\"start\":485,\"end\":485,\"offset\":4294992814,\"type\":\"offset\"},{\"start\":547,\"end\":547,\"offset\":4294992814,\"type\":\"offset\"},{\"start\":589,\"end\":589,\"offset\":4294992821,\"type\":\"offset\"},{\"start\":615,\"end\":615,\"offset\":4294992824,\"type\":\"offset\"},{\"start\":647,\"end\":647,\"offset\":4294992826,\"type\":\"offset\"},{\"start\":695,\"end\":695,\"offset\":4294992826,\"type\":\"offset\"},{\"start\":718,\"end\":718,\"offset\":4294992833,\"type\":\"offset\"},{\"start\":766,\"end\":766,\"offset\":4294992833,\"type\":\"offset\"},{\"start\":789,\"end\":789,\"offset\":4294992840,\"type\":\"offset\"},{\"start\":840,\"end\":840,\"offset\":4294992844,\"type\":\"offset\"},{\"start\":880,\"end\":880,\"offset\":4294992847,\"type\":\"offset\"},{\"start\":915,\"end\":915,\"offset\":4294992852,\"type\":\"offset\"},{\"start\":972,\"end\":972,\"offset\":4294992855,\"type\":\"offset\"},{\"start\":998,\"end\":998,\"offset\":4294992855,\"type\":\"offset\"},{\"start\":1055,\"end\":1055,\"offset\":4294992860,\"type\":\"offset\"},{\"start\":1097,\"end\":1097,\"offset\":4294992867,\"type\":\"offset\"},{\"start\":1123,\"end\":1123,\"offset\":4294992870,\"type\":\"offset\"},{\"start\":1139,\"end\":1139,\"offset\":4294992875,\"type\":\"offset\"},{\"start\":1182,\"end\":1182,\"offset\":4294992878,\"type\":\"offset\"},{\"start\":1199,\"end\":1199,\"offset\":4294992882,\"type\":\"offset\"},{\"start\":1221,\"end\":1221,\"offset\":4294992883,\"type\":\"offset\"},{\"start\":1243,\"end\":1243,\"offset\":4294992884,\"type\":\"offset\"},{\"start\":1306,\"end\":1306,\"offset\":4294992884,\"type\":\"offset\"},{\"start\":1405,\"end\":1405,\"offset\":4294992794,\"type\":\"offset\"},{\"start\":1447,\"end\":1447,\"offset\":4294992801,\"type\":\"offset\"},{\"start\":1463,\"end\":1463,\"offset\":4294992803,\"type\":\"offset\"},{\"start\":1480,\"end\":1480,\"offset\":4294992807,\"type\":\"offset\"},{\"start\":1502,\"end\":1502,\"offset\":4294992808,\"type\":\"offset\"},{\"start\":1524,\"end\":1524,\"offset\":4294992809,\"type\":\"offset\"},{\"start\":1589,\"end\":1589,\"offset\":4294992809,\"type\":\"offset\"}],\"code\":\"int sym.func.100006388 (int esi, int edx) {\\n    loc_0x100006388:\\n        // CALL XREF from sym.func.100005604 @ 0x1000056bd(x)\\n        // CALL XREF from sym.func.100005725 @ 0x1000059d2(x)\\n        // CALL XREF from sym.func.100006972 @ 0x10000697a(x)\\n        push  (rbp)\\n        rbp = rsp\\n        push  (rbx)\\n        push  (rax)\\n        rax = rip + 0x227f // 0x100008614\\n        var = byte [rax] - 0\\n        if  (!var) goto loc_0x1000063ae // unlikely\\n            \\n    loc_0x1000063ae:\\n        // CODE XREF from sym.func.100006388 @ 0x100006398(x)\\n        rax = rip + 0x2253 // 0x100008608\\n        rax = qword [rax]\\n        var = edi & edi // arg1\\n        rcx = rip + 0x617 // sym.func.1000069d8\\n        // 0x1000069d8\\n        rbx = rip + 0x5ea // sym.func.1000069b2\\n        // 0x1000069b2\\n        if  (!var) rbx = rcx // sym.func.1000069d8\\n        rdi = rax    // const char *str\\n        esi = 1      // int affcnt\\n        rdx = rbx    // void *putc // sym.func.1000069d8\\n        sym.imp.tputs  ()\\n        // int tputs(-1, 0x00000000, 0x000b37e8e5894855)\\n        rax = rip + 0x2215 // 0x1000085f8\\n        rdi = qword [rax]\\n        esi = 1\\n        rdx = rbx    // sym.func.1000069d8\\n        rsp += 8\\n        rbx = pop  ()\\n        rbp = pop  ()\\n        goto loc_0x1000075ae // sym.imp.tputs // sym.imp.tputs\\n        // int tputs(-1, 0x00000000, 0x000b37e8e5894855)\\n         // } else {\\n    loc_0x10000639a:\\n        rdi = rip + 0x1afb // 0x100007e9c\\n        eax = 0\\n        rsp += 8\\n        rbx = pop  ()\\n        rbp = pop  ()\\n        goto loc_0x100007512 // sym.imp.printf // sym.imp.printf\\n        // int printf(\\\"\\\\x1b[m\\\")\\n        }\\n        return eax;\\n}\\n\"}\n"