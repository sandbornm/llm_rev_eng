"{\"annotations\":[{\"start\":64,\"end\":64,\"offset\":4294996605,\"type\":\"offset\"},{\"start\":126,\"end\":126,\"offset\":4294996605,\"type\":\"offset\"},{\"start\":146,\"end\":146,\"offset\":4294996606,\"type\":\"offset\"},{\"start\":164,\"end\":164,\"offset\":4294996609,\"type\":\"offset\"},{\"start\":184,\"end\":184,\"offset\":4294996610,\"type\":\"offset\"},{\"start\":204,\"end\":204,\"offset\":4294996611,\"type\":\"offset\"},{\"start\":245,\"end\":245,\"offset\":4294996615,\"type\":\"offset\"},{\"start\":292,\"end\":292,\"offset\":4294996618,\"type\":\"offset\"},{\"start\":321,\"end\":321,\"offset\":4294996618,\"type\":\"offset\"},{\"start\":351,\"end\":351,\"offset\":4294996623,\"type\":\"offset\"},{\"start\":391,\"end\":391,\"offset\":4294996623,\"type\":\"offset\"},{\"start\":448,\"end\":448,\"offset\":4294996630,\"type\":\"offset\"},{\"start\":466,\"end\":466,\"offset\":4294996633,\"type\":\"offset\"},{\"start\":484,\"end\":484,\"offset\":4294996636,\"type\":\"offset\"},{\"start\":500,\"end\":500,\"offset\":4294996638,\"type\":\"offset\"},{\"start\":526,\"end\":526,\"offset\":4294996638,\"type\":\"offset\"},{\"start\":558,\"end\":558,\"offset\":4294996643,\"type\":\"offset\"},{\"start\":610,\"end\":610,\"offset\":4294996650,\"type\":\"offset\"},{\"start\":627,\"end\":627,\"offset\":4294996654,\"type\":\"offset\"},{\"start\":649,\"end\":649,\"offset\":4294996655,\"type\":\"offset\"},{\"start\":685,\"end\":685,\"offset\":4294996656,\"type\":\"offset\"}],\"code\":\"int sym.func.10000727d (int esi, int edx) {\\n    loc_0x10000727d:\\n        // CALL XREF from sym.func.100004808 @ 0x100004a22(x)\\n        push  (rbp)\\n        rbp = rsp\\n        push  (rbx)\\n        push  (rax)\\n        rbx = qword [rdi + 0x30] // arg1\\n        edi = dword [rdi + 0x38] // int errnum\\n        sym.imp.strerror  ()\\n        // char *strerror(-1)\\n        rdi = rip + 0x930 // str._s:__s\\n        // 0x100007bc6 // \\\"%s: %s\\\" // const char *format\\n        rsi = rbx\\n        rdx = rax\\n        eax = 0\\n        sym.imp.warnx  ()\\n        // void warnx(\\\"%s: %s\\\")\\n        byte [0x100008678] = 1 // [0x100008678:1]=1\\n        rsp += 8\\n        rbx = pop  ()\\n        rbp = pop  () // rsp // rsp\\n        re\\n         // (break)\\n}\\n\"}\n"