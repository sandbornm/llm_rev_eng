"{\"annotations\":[{\"start\":64,\"end\":64,\"offset\":4294993911,\"type\":\"offset\"},{\"start\":112,\"end\":112,\"offset\":4294993911,\"type\":\"offset\"},{\"start\":132,\"end\":132,\"offset\":4294993912,\"type\":\"offset\"},{\"start\":150,\"end\":150,\"offset\":4294993915,\"type\":\"offset\"},{\"start\":170,\"end\":170,\"offset\":4294993917,\"type\":\"offset\"},{\"start\":190,\"end\":190,\"offset\":4294993919,\"type\":\"offset\"},{\"start\":210,\"end\":210,\"offset\":4294993921,\"type\":\"offset\"},{\"start\":230,\"end\":230,\"offset\":4294993923,\"type\":\"offset\"},{\"start\":250,\"end\":250,\"offset\":4294993924,\"type\":\"offset\"},{\"start\":270,\"end\":270,\"offset\":4294993928,\"type\":\"offset\"},{\"start\":302,\"end\":302,\"offset\":4294993931,\"type\":\"offset\"},{\"start\":359,\"end\":359,\"offset\":4294993931,\"type\":\"offset\"},{\"start\":382,\"end\":382,\"offset\":4294993938,\"type\":\"offset\"},{\"start\":418,\"end\":418,\"offset\":4294993942,\"type\":\"offset\"},{\"start\":448,\"end\":448,\"offset\":4294993946,\"type\":\"offset\"},{\"start\":516,\"end\":516,\"offset\":4294993949,\"type\":\"offset\"},{\"start\":543,\"end\":543,\"offset\":4294993949,\"type\":\"offset\"},{\"start\":572,\"end\":572,\"offset\":4294993954,\"type\":\"offset\"},{\"start\":602,\"end\":602,\"offset\":4294993958,\"type\":\"offset\"},{\"start\":644,\"end\":644,\"offset\":4294993965,\"type\":\"offset\"},{\"start\":666,\"end\":666,\"offset\":4294993969,\"type\":\"offset\"},{\"start\":682,\"end\":682,\"offset\":4294993971,\"type\":\"offset\"},{\"start\":736,\"end\":736,\"offset\":4294993973,\"type\":\"offset\"},{\"start\":798,\"end\":798,\"offset\":4294993973,\"type\":\"offset\"},{\"start\":824,\"end\":824,\"offset\":4294993977,\"type\":\"offset\"},{\"start\":850,\"end\":850,\"offset\":4294993981,\"type\":\"offset\"},{\"start\":867,\"end\":867,\"offset\":4294993985,\"type\":\"offset\"},{\"start\":897,\"end\":897,\"offset\":4294993989,\"type\":\"offset\"},{\"start\":921,\"end\":921,\"offset\":4294993995,\"type\":\"offset\"},{\"start\":945,\"end\":945,\"offset\":4294993999,\"type\":\"offset\"},{\"start\":981,\"end\":981,\"offset\":4294994003,\"type\":\"offset\"},{\"start\":1038,\"end\":1038,\"offset\":4294994003,\"type\":\"offset\"},{\"start\":1089,\"end\":1089,\"offset\":4294994010,\"type\":\"offset\"},{\"start\":1169,\"end\":1169,\"offset\":4294994014,\"type\":\"offset\"},{\"start\":1225,\"end\":1225,\"offset\":4294994019,\"type\":\"offset\"},{\"start\":1285,\"end\":1285,\"offset\":4294994023,\"type\":\"offset\"},{\"start\":1341,\"end\":1341,\"offset\":4294994027,\"type\":\"offset\"},{\"start\":1371,\"end\":1371,\"offset\":4294994031,\"type\":\"offset\"},{\"start\":1424,\"end\":1424,\"offset\":4294994036,\"type\":\"offset\"},{\"start\":1445,\"end\":1445,\"offset\":4294994040,\"type\":\"offset\"},{\"start\":1466,\"end\":1466,\"offset\":4294994044,\"type\":\"offset\"},{\"start\":1490,\"end\":1490,\"offset\":4294994046,\"type\":\"offset\"},{\"start\":1514,\"end\":1514,\"offset\":4294994048,\"type\":\"offset\"},{\"start\":1542,\"end\":1542,\"offset\":4294994051,\"type\":\"offset\"},{\"start\":1559,\"end\":1559,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":1631,\"end\":1874,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":2149,\"end\":2333,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":2549,\"end\":3079,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":3641,\"end\":3815,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":4021,\"end\":4140,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":4291,\"end\":4465,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":4671,\"end\":4816,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":4993,\"end\":5106,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":5251,\"end\":5519,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":5819,\"end\":6078,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":6369,\"end\":6540,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":6743,\"end\":6844,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":6977,\"end\":7428,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":7911,\"end\":8094,\"offset\":4294994054,\"type\":\"offset\"},{\"start\":8309,\"end\":8480,\"offset\":4294994054,\"type\":\"offset\"}],\"code\":\"int sym.func.1000067f7 (int esi, int edx) {\\n    loc_0x1000067f7:\\n        // CALL XREF from main @ 0x1000043c9(x)\\n        push  (rbp)\\n        rbp = rsp\\n        push  (r15)\\n        push  (r14)\\n        push  (r13)\\n        push  (r12)\\n        push  (rbx)\\n        rsp -= 0x28\\n        var = rdi & rdi // arg1\\n        rax = rip + 0x1241 // section.4.__TEXT.__cstring\\n        // 0x100007a53\\n        if  (!zf) rax = rdi // arg1\\n        qword [var_40h] = rax\\n        rdi = rax    // const char *s // section.4.__TEXT.__cstring\\n        sym.imp.strlen  ()\\n        // size_t strlen(\\\"\\\")\\n        qword [var_38h] = rax\\n        rdi = rip + 0x1e63 // 0x100008690\\n        rdx = var_2ah\\n        ecx = 0\\n        ebx = 0\\n         // do {\\n    loc_0x100006835:\\n        // CODE XREF from sym.func.1000067f7 @ 0x10000695d(x)\\n        r13 = rcx + rcx*2\\n        rax = rdi + r13*4\\n        rax += 8\\n        qword [var_50h] = rax\\n        dword [rax] = 0\\n        rax = rcx + rcx\\n        var = qword [var_38h] - rax\\n        rax = rip + 0x1653 // str.exfxcxdxbxegedabagacad\\n        // 0x100007ead // \\\"exfxcxdxbxegedabagacad\\\"\\n        r8 = rax + rcx*2 // \\\"exfxcxdxbxegedabagacad\\\" str.exfxcxdxbxegedabagacad\\n        r9 = rax + rcx*2 + 1 // \\\"xfxcxdxbxegedabagacad\\\"\\n        rsi = qword [var_40h] // section.4.__TEXT.__cstring\\n        rax = rsi + rcx*2 // section.4.__TEXT.__cstring\\n        qword [var_48h] = rcx\\n        rsi = rsi + rcx*2 + 1 // \\\"bin/ls\\\" str.bin_ls\\n        cmovbe rsi,9\\n        cmovbe rax,8\\n        al = byte [rax]\\n        cl = byte [rsi]\\n        byte [var_29h] = cl\\n        r14b = 1\\n        r15d = 0\\n         // } while (?);\\n        }\\n        return eax;             // CODE XREF from sym.func.1000067f7 @ 0x10000693b(x)\\n             r12d = ebx\\n             ebx = al\\n             ecx = ebx\\n             cl &= 0xf8\\n             var = cl - 0x30\\n             if  (var) goto loc_0x1000068c9 // likely\\n\\n    loc_0x100006889: // orphan\\n             // CODE XREF from sym.func.1000067f7 @ 0x10000693b(x)\\n             r12d = ebx\\n             ebx = al\\n             ecx = ebx\\n             cl &= 0xf8\\n             var = cl - 0x30\\n             if  (var) goto loc_0x1000068c9 // likely\\n         ebx += 0xffffffd0\\n         rax = rdi + r13*4\\n         dword [rax + r15*4] = ebx\\n         bx = 1\\n         var = r12w & r12w\\n         if  (var) goto loc_0x100006927 // unlikely\\n\\n    loc_0x100006899: // orphan\\n         ebx += 0xffffffd0\\n         rax = rdi + r13*4\\n         dword [rax + r15*4] = ebx\\n         bx = 1\\n         var = r12w & r12w\\n         if  (var) goto loc_0x100006927 // unlikely\\n         rdi = rip + 0x1401       // str.LSCOLORS_should_use_characters_a_h_instead_of_0_9__see_the_manual_page_\\n                                  // 0x100007cb6 // \\\"LSCOLORS should use characters a-h instead of 0-9 (see the manual page)\\\" // const char *format\\n         eax = 0\\n         sym.imp.warnx  ()\\n                                  // void warnx(\\\"LSCOLORS should use characters a-h instead of 0-9 (see the manual page)\\\")\\n         rdx = var_2ah\\n         rdi = rip + 0x1dc9       // 0x100008690\\n         goto loc_0x100006927\\n\\n    loc_0x1000068ae: // orphan\\n         rdi = rip + 0x1401       // str.LSCOLORS_should_use_characters_a_h_instead_of_0_9__see_the_manual_page_\\n                                  // 0x100007cb6 // \\\"LSCOLORS should use characters a-h instead of 0-9 (see the manual page)\\\" // const char *format\\n         eax = 0\\n         sym.imp.warnx  ()\\n                                  // void warnx(\\\"LSCOLORS should use characters a-h instead of 0-9 (see the manual page)\\\")\\n         rdx = var_2ah\\n         rdi = rip + 0x1dc9       // 0x100008690\\n         goto loc_0x100006927\\n         // CODE XREF from sym.func.1000067f7 @ 0x100006897(x)\\n         ecx = rax - 0x61\\n         var = cl - 7\\n         if  (((unsigned) var) > 0) goto 0x1000068de // likely\\n\\n    loc_0x1000068c9: // orphan\\n         // CODE XREF from sym.func.1000067f7 @ 0x100006897(x)\\n         ecx = rax - 0x61\\n         var = cl - 7\\n         if  (((unsigned) var) > 0) goto 0x1000068de // likely\\n         ebx += 0xffffff9f\\n         rax = rdi + r13*4\\n         dword [rax + r15*4] = ebx\\n         goto loc_0x1000068fb\\n\\n    loc_0x1000068d1: // orphan\\n         ebx += 0xffffff9f\\n         rax = rdi + r13*4\\n         dword [rax + r15*4] = ebx\\n         goto loc_0x1000068fb\\n         // CODE XREF from sym.func.1000067f7 @ 0x1000068cf(x)\\n         ecx = rax - 0x41\\n         var = cl - 7\\n         if  (((unsigned) var) > 0) goto 0x100006900 // likely\\n\\n    loc_0x1000068de: // orphan\\n         // CODE XREF from sym.func.1000067f7 @ 0x1000068cf(x)\\n         ecx = rax - 0x41\\n         var = cl - 7\\n         if  (((unsigned) var) > 0) goto 0x100006900 // likely\\n         ebx += 0xffffffbf\\n         rax = rdi + r13*4\\n         dword [rax + r15*4] = ebx\\n         rax = qword [var_50h]\\n         dword [rax] = 1\\n\\n    loc_0x1000068e6: // orphan\\n         ebx += 0xffffffbf\\n         rax = rdi + r13*4\\n         dword [rax + r15*4] = ebx\\n         rax = qword [var_50h]\\n         dword [rax] = 1\\n         // CODE XREF from sym.func.1000067f7 @ 0x1000068dc(x)\\n         ebx = r12d\\n         goto loc_0x100006927\\n\\n    loc_0x1000068fb: // orphan\\n         // CODE XREF from sym.func.1000067f7 @ 0x1000068dc(x)\\n         ebx = r12d\\n         goto loc_0x100006927\\n         // CODE XREF from sym.func.1000067f7 @ 0x1000068e4(x)\\n         edi = al                 // int c\\n         sym.imp.__tolower  ()\\n                                  // int __tolower(-1)\\n         var = eax - 0x78\\n         if  (var) goto loc_0x100006940 // likely\\n\\n    loc_0x100006900: // orphan\\n         // CODE XREF from sym.func.1000067f7 @ 0x1000068e4(x)\\n         edi = al                 // int c\\n         sym.imp.__tolower  ()\\n                                  // int __tolower(-1)\\n         var = eax - 0x78\\n         if  (var) goto loc_0x100006940 // likely\\n         // CODE XREF from sym.func.1000067f7 @ 0x100006950(x)\\n         rdi = rip + 0x1d7c       // 0x100008690\\n         rax = rdi + r13*4\\n         dword [rax + r15*4] = 0xffffffff // [0xffffffff:4]=0xedfacfff // -1\\n         ebx = r12d\\n         rdx = var_2ah\\n\\n    loc_0x10000690d: // orphan\\n         // CODE XREF from sym.func.1000067f7 @ 0x100006950(x)\\n         rdi = rip + 0x1d7c       // 0x100008690\\n         rax = rdi + r13*4\\n         dword [rax + r15*4] = 0xffffffff // [0xffffffff:4]=0xedfacfff // -1\\n         ebx = r12d\\n         rdx = var_2ah\\n         // CODE XREFS from sym.func.1000067f7 @ 0x1000068ac(x), 0x1000068c7(x), 0x1000068fe(x)\\n         var = r14b & 1\\n         if  (!var) goto loc_0x100006952 // likely\\n\\n    loc_0x100006927: // orphan\\n         // CODE XREFS from sym.func.1000067f7 @ 0x1000068ac(x), 0x1000068c7(x), 0x1000068fe(x)\\n         var = r14b & 1\\n         if  (!var) goto loc_0x100006952 // likely\\n         al = byte [r15 + rdx + 1]\\n         r15d = 1\\n         r14d = 0\\n         goto loc_0x100006889\\n\\n    loc_0x10000692d: // orphan\\n         al = byte [r15 + rdx + 1]\\n         r15d = 1\\n         r14d = 0\\n         goto loc_0x100006889\\n         // CODE XREF from sym.func.1000067f7 @ 0x10000690b(x)\\n         rdi = rip + 0x13b7       // str.invalid_character__c_in_LSCOLORS_env_var\\n                                  // 0x100007cfe // \\\"invalid character '%c' in LSCOLORS env var\\\" // const char *format\\n         esi = ebx\\n         eax = 0\\n         sym.imp.warnx  ()\\n                                  // void warnx(\\\"invalid character '%c' in LSCOLORS env var\\\")\\n         goto loc_0x10000690d\\n\\n    loc_0x100006940: // orphan\\n         // CODE XREF from sym.func.1000067f7 @ 0x10000690b(x)\\n         rdi = rip + 0x13b7       // str.invalid_character__c_in_LSCOLORS_env_var\\n                                  // 0x100007cfe // \\\"invalid character '%c' in LSCOLORS env var\\\" // const char *format\\n         esi = ebx\\n         eax = 0\\n         sym.imp.warnx  ()\\n                                  // void warnx(\\\"invalid character '%c' in LSCOLORS env var\\\")\\n         goto loc_0x10000690d\\n         // CODE XREF from sym.func.1000067f7 @ 0x10000692b(x)\\n         rcx = qword [var_48h]\\n         rcx+\\n         var = rcx - 0xb\\n         if  (var) goto loc_0x100006835 // likely\\n\\n    loc_0x100006952: // orphan\\n         // CODE XREF from sym.func.1000067f7 @ 0x10000692b(x)\\n         rcx = qword [var_48h]\\n         rcx+\\n         var = rcx - 0xb\\n         if  (var) goto loc_0x100006835 // likely\\n         rsp += 0x28\\n         rbx = pop  ()\\n         r12 = pop  ()\\n         r13 = pop  ()\\n         r14 = pop  ()\\n         r15 = pop  ()\\n         rbp = pop  ()\\n         re\\n\\n    loc_0x100006963: // orphan\\n         rsp += 0x28\\n         rbx = pop  ()\\n         r12 = pop  ()\\n         r13 = pop  ()\\n         r14 = pop  ()\\n         r15 = pop  ()\\n         rbp = pop  ()\\n         re\\n\\n}\\n\"}\n"