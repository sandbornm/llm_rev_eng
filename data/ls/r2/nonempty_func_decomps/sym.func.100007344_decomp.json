"{\"annotations\":[{\"start\":64,\"end\":64,\"offset\":4294996804,\"type\":\"offset\"},{\"start\":126,\"end\":126,\"offset\":4294996804,\"type\":\"offset\"},{\"start\":146,\"end\":146,\"offset\":4294996805,\"type\":\"offset\"},{\"start\":164,\"end\":164,\"offset\":4294996808,\"type\":\"offset\"},{\"start\":184,\"end\":184,\"offset\":4294996810,\"type\":\"offset\"},{\"start\":204,\"end\":204,\"offset\":4294996811,\"type\":\"offset\"},{\"start\":233,\"end\":233,\"offset\":4294996814,\"type\":\"offset\"},{\"start\":266,\"end\":266,\"offset\":4294996818,\"type\":\"offset\"},{\"start\":313,\"end\":313,\"offset\":4294996821,\"type\":\"offset\"},{\"start\":342,\"end\":342,\"offset\":4294996821,\"type\":\"offset\"},{\"start\":372,\"end\":372,\"offset\":4294996826,\"type\":\"offset\"},{\"start\":412,\"end\":412,\"offset\":4294996826,\"type\":\"offset\"},{\"start\":469,\"end\":469,\"offset\":4294996833,\"type\":\"offset\"},{\"start\":487,\"end\":487,\"offset\":4294996836,\"type\":\"offset\"},{\"start\":505,\"end\":505,\"offset\":4294996839,\"type\":\"offset\"},{\"start\":521,\"end\":521,\"offset\":4294996841,\"type\":\"offset\"},{\"start\":547,\"end\":547,\"offset\":4294996841,\"type\":\"offset\"},{\"start\":579,\"end\":579,\"offset\":4294996846,\"type\":\"offset\"},{\"start\":610,\"end\":610,\"offset\":4294996854,\"type\":\"offset\"},{\"start\":662,\"end\":662,\"offset\":4294996861,\"type\":\"offset\"},{\"start\":684,\"end\":684,\"offset\":4294996862,\"type\":\"offset\"},{\"start\":706,\"end\":706,\"offset\":4294996864,\"type\":\"offset\"},{\"start\":742,\"end\":742,\"offset\":4294996865,\"type\":\"offset\"}],\"code\":\"int sym.func.100007344 (int esi, int edx) {\\n    loc_0x100007344:\\n        // CALL XREF from sym.func.100004b25 @ 0x100004f4a(x)\\n        push  (rbp)\\n        rbp = rsp\\n        push  (r14)\\n        push  (rbx)\\n        rbx = rdi    // arg1\\n        r14 = rdi + 0x68 // arg1\\n        edi = dword [rdi + 0x38] // int errnum\\n        sym.imp.strerror  ()\\n        // char *strerror(-1)\\n        rdi = rip + 0x865 // str._s:__s\\n        // 0x100007bc6 // \\\"%s: %s\\\" // const char *format\\n        rsi = r14\\n        rdx = rax\\n        eax = 0\\n        sym.imp.warnx  ()\\n        // void warnx(\\\"%s: %s\\\")\\n        qword [rbx + 0x18] = 1\\n        byte [0x100008678] = 1 // [0x100008678:1]=1\\n        rbx = pop  ()\\n        r14 = pop  ()\\n        rbp = pop  () // rsp // rsp\\n        re\\n         // (break)\\n}\\n\"}\n"