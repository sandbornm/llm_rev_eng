"{\"annotations\":[{\"start\":64,\"end\":64,\"offset\":4294989605,\"type\":\"offset\"},{\"start\":112,\"end\":112,\"offset\":4294989605,\"type\":\"offset\"},{\"start\":132,\"end\":132,\"offset\":4294989606,\"type\":\"offset\"},{\"start\":150,\"end\":150,\"offset\":4294989609,\"type\":\"offset\"},{\"start\":170,\"end\":170,\"offset\":4294989611,\"type\":\"offset\"},{\"start\":190,\"end\":190,\"offset\":4294989613,\"type\":\"offset\"},{\"start\":210,\"end\":210,\"offset\":4294989615,\"type\":\"offset\"},{\"start\":230,\"end\":230,\"offset\":4294989617,\"type\":\"offset\"},{\"start\":250,\"end\":250,\"offset\":4294989618,\"type\":\"offset\"},{\"start\":271,\"end\":271,\"offset\":4294989625,\"type\":\"offset\"},{\"start\":300,\"end\":300,\"offset\":4294989628,\"type\":\"offset\"},{\"start\":367,\"end\":367,\"offset\":4294989635,\"type\":\"offset\"},{\"start\":393,\"end\":393,\"offset\":4294989638,\"type\":\"offset\"},{\"start\":423,\"end\":423,\"offset\":4294989642,\"type\":\"offset\"},{\"start\":457,\"end\":457,\"offset\":4294989645,\"type\":\"offset\"},{\"start\":481,\"end\":481,\"offset\":4294989648,\"type\":\"offset\"},{\"start\":565,\"end\":565,\"offset\":4294989658,\"type\":\"offset\"},{\"start\":627,\"end\":627,\"offset\":4294989658,\"type\":\"offset\"},{\"start\":669,\"end\":669,\"offset\":4294989665,\"type\":\"offset\"},{\"start\":695,\"end\":695,\"offset\":4294989667,\"type\":\"offset\"},{\"start\":737,\"end\":737,\"offset\":4294989674,\"type\":\"offset\"},{\"start\":764,\"end\":764,\"offset\":4294989676,\"type\":\"offset\"},{\"start\":850,\"end\":850,\"offset\":4294989722,\"type\":\"offset\"},{\"start\":912,\"end\":912,\"offset\":4294989722,\"type\":\"offset\"},{\"start\":936,\"end\":936,\"offset\":4294989725,\"type\":\"offset\"},{\"start\":1020,\"end\":1020,\"offset\":4294991560,\"type\":\"offset\"},{\"start\":1099,\"end\":1099,\"offset\":4294991560,\"type\":\"offset\"},{\"start\":1166,\"end\":1166,\"offset\":4294991567,\"type\":\"offset\"},{\"start\":1192,\"end\":1192,\"offset\":4294991570,\"type\":\"offset\"},{\"start\":1228,\"end\":1228,\"offset\":4294991574,\"type\":\"offset\"},{\"start\":1313,\"end\":1313,\"offset\":4294991594,\"type\":\"offset\"},{\"start\":1375,\"end\":1375,\"offset\":4294991594,\"type\":\"offset\"},{\"start\":1412,\"end\":1412,\"offset\":4294991594,\"type\":\"offset\"},{\"start\":1493,\"end\":1493,\"offset\":4294991576,\"type\":\"offset\"},{\"start\":1514,\"end\":1514,\"offset\":4294991583,\"type\":\"offset\"},{\"start\":1536,\"end\":1536,\"offset\":4294991584,\"type\":\"offset\"},{\"start\":1558,\"end\":1558,\"offset\":4294991586,\"type\":\"offset\"},{\"start\":1580,\"end\":1580,\"offset\":4294991588,\"type\":\"offset\"},{\"start\":1602,\"end\":1602,\"offset\":4294991590,\"type\":\"offset\"},{\"start\":1624,\"end\":1624,\"offset\":4294991592,\"type\":\"offset\"},{\"start\":1646,\"end\":1646,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":1750,\"end\":1916,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":2114,\"end\":2281,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":2480,\"end\":2775,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":3102,\"end\":3298,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":3526,\"end\":4000,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":4506,\"end\":5242,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":6010,\"end\":6086,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":6194,\"end\":6518,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":6874,\"end\":7030,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":7218,\"end\":7340,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":7494,\"end\":7694,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":7926,\"end\":7953,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":8012,\"end\":8202,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":8424,\"end\":8627,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":8862,\"end\":9058,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":9286,\"end\":9611,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":9968,\"end\":10205,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":10474,\"end\":10804,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":11166,\"end\":11395,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":11656,\"end\":11850,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":12076,\"end\":12132,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":12220,\"end\":12414,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":12640,\"end\":12696,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":12784,\"end\":12980,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":13208,\"end\":13264,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":13352,\"end\":13736,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":14152,\"end\":14241,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":14362,\"end\":14651,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":14972,\"end\":15116,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":15292,\"end\":15607,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":15954,\"end\":16041,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":16160,\"end\":16271,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":16414,\"end\":16683,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":16984,\"end\":17096,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":17240,\"end\":17434,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":17660,\"end\":17748,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":17868,\"end\":18329,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":18822,\"end\":19256,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":19722,\"end\":19983,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":20276,\"end\":20696,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":21148,\"end\":21877,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":22638,\"end\":23055,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":23504,\"end\":23637,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":23802,\"end\":23884,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":23998,\"end\":24111,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":24256,\"end\":25253,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":26282,\"end\":26533,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":26816,\"end\":26949,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":27114,\"end\":27397,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":27712,\"end\":27945,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":28210,\"end\":28382,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":28586,\"end\":28616,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":28678,\"end\":28916,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":29186,\"end\":29420,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":29686,\"end\":29859,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":30064,\"end\":30234,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":30436,\"end\":30615,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":30826,\"end\":31072,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":31350,\"end\":31558,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":31798,\"end\":32042,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":32318,\"end\":32459,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":32632,\"end\":34235,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":35870,\"end\":36118,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":36398,\"end\":36489,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":36612,\"end\":37314,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":38048,\"end\":38226,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":38436,\"end\":38546,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":38688,\"end\":38936,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":39216,\"end\":39307,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":39430,\"end\":40214,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":41030,\"end\":41207,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":41416,\"end\":41623,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":41862,\"end\":42218,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":42606,\"end\":42636,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":42698,\"end\":43572,\"offset\":4294991593,\"type\":\"offset\"},{\"start\":44478,\"end\":44573,\"offset\":4294991593,\"type\":\"offset\"}],\"code\":\"int sym.func.100005725 (int esi, int edx) {\\n    loc_0x100005725:\\n        // DATA XREF from main @ 0x1000045d5(r)\\n        push  (rbp)\\n        rbp = rsp\\n        push  (r15)\\n        push  (r14)\\n        push  (r13)\\n        push  (r12)\\n        push  (rbx)\\n        rsp -= 0x8b8\\n        rbx = rdi    // arg1\\n        rax = qword [reloc.__stack_chk_guard] // [0x100008010:8]=0\\n        rax = qword [rax]\\n        qword [var_30h] = rax\\n        r14 = qword [rdi] // arg1\\n        var = r14 & r14\\n        if  (!var) goto loc_0x10000575a // likely\\n            \\n    loc_0x10000575a:\\n        // CODE XREF from sym.func.100005725 @ 0x100005750(x)\\n        rax = rip + 0x2e27 // 0x100008588\\n        eax = dword [rax]\\n        rcx = rip + 0x2e6a // 0x1000085d4\\n        eax |= dword [rcx]\\n        if  (!var) goto loc_0x10000579a // unlikely\\n            \\n    loc_0x10000579a:\\n        // CODE XREF from sym.func.100005725 @ 0x10000576c(x)\\n        var = r14 & r14\\n        if  (!var) goto loc_0x100005ec8 // likely\\n            \\n    loc_0x100005ec8:\\n        // CODE XREFS from sym.func.100005725 @ 0x10000579d(x), 0x100005bcc(x)\\n        rax = qword [reloc.__stack_chk_guard] // [0x100008010:8]=0\\n        rax = qword [rax]\\n        var = rax - qword [var_30h]\\n        if  (var) goto loc_0x100005eea // unlikely\\n            \\n    loc_0x100005eea:\\n        // CODE XREF from sym.func.100005725 @ 0x100005ed6(x)\\n        sym.imp.__stack_chk_fail  ()\\n        // void __stack_chk_fail(void)\\n         // } else {\\n    loc_0x100005ed8:\\n        rsp += 0x8b8\\n        rbx = pop  ()\\n        r12 = pop  ()\\n        r13 = pop  ()\\n        r14 = pop  ()\\n        r15 = pop  ()\\n        rbp = pop  ()\\n        re\\n         // } else {\\n         // } else {\\n         // } else {\\n        }\\n        return eax;             // CODE XREF from sym.func.100005725 @ 0x100005bc6(x)\\n             var = qword [r14 + 0x18] - 1\\n             if  (!var) goto loc_0x100005bbf // unlikely\\n\\n    loc_0x1000057c2: // orphan\\n             // CODE XREF from sym.func.100005725 @ 0x100005bc6(x)\\n             var = qword [r14 + 0x18] - 1\\n             if  (!var) goto loc_0x100005bbf // unlikely\\n         r15 = qword [r14 + 0x60]\\n         rax = rip + 0x2dec       // 0x1000085c4\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x1000057f2 // unlikely\\n\\n    loc_0x1000057cd: // orphan\\n         r15 = qword [r14 + 0x60]\\n         rax = rip + 0x2dec       // 0x1000085c4\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x1000057f2 // unlikely\\n         esi = dword [rbx + 0x24]\\n         rdx = qword [r15 + 8]\\n         rdi = rip + 0x2464       // str._ju_\\n                                  // 0x100007c4f // \\\"%*ju \\\" // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%*ju \\\")\\n\\n    loc_0x1000057dd: // orphan\\n         esi = dword [rbx + 0x24]\\n         rdx = qword [r15 + 8]\\n         rdi = rip + 0x2464       // str._ju_\\n                                  // 0x100007c4f // \\\"%*ju \\\" // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%*ju \\\")\\n         // CODE XREF from sym.func.100005725 @ 0x1000057db(x)\\n         rax = rip + 0x2ddb       // 0x1000085d4\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x10000582a // unlikely\\n\\n    loc_0x1000057f2: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x1000057db(x)\\n         rax = rip + 0x2ddb       // 0x1000085d4\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x10000582a // unlikely\\n         esi = dword [rbx + 0x18]\\n         rax = qword [r15 + 0x68]\\n         cq\\n         rcx = rip + 0x2e12       // 0x100008620\\n         qword [rcx] /=\\n         var = rdx - 1            // arg3\\n         rax = rax - 0xffffffffffffffff\\n         rdi = rip + 0x2435       // \\\"%*lld \\\"\\n                                  // 0x100007c55 // const char *format\\n         rdx = rax\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%*lld \\\")\\n\\n    loc_0x1000057fe: // orphan\\n         esi = dword [rbx + 0x18]\\n         rax = qword [r15 + 0x68]\\n         cq\\n         rcx = rip + 0x2e12       // 0x100008620\\n         qword [rcx] /=\\n         var = rdx - 1            // arg3\\n         rax = rax - 0xffffffffffffffff\\n         rdi = rip + 0x2435       // \\\"%*lld \\\"\\n                                  // 0x100007c55 // const char *format\\n         rdx = rax\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%*lld \\\")\\n         // CODE XREF from sym.func.100005725 @ 0x1000057fc(x)\\n         edi = word [r15 + 4]     // int mode\\n         rsi = r12                // char *bp\\n         sym.imp.strmode  ()\\n                                  // void strmode(-1, -1)\\n         rsi = qword [r14 + 0x20]\\n         ecx = 0\\n         byte [var_866h] = cl\\n         al = byte [rsi + 0x34]\\n         byte [var_872h] = al\\n         byte [var_871h] = cl\\n         rax = rip + 0x2d63       // 0x1000085bc\\n         edx = dword [rax]\\n         rax = rip + 0x2d6a       // 0x1000085cc\\n         eax = dword [rax]\\n         ecx = dword [rbx + 0x28]\\n         r8d = word [r15 + 6]\\n         var = edx & edx\\n         qword [ptr] = rsi\\n         if  (!var) goto loc_0x100005895 // unlikely\\n\\n    loc_0x10000582a: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x1000057fc(x)\\n         edi = word [r15 + 4]     // int mode\\n         rsi = r12                // char *bp\\n         sym.imp.strmode  ()\\n                                  // void strmode(-1, -1)\\n         rsi = qword [r14 + 0x20]\\n         ecx = 0\\n         byte [var_866h] = cl\\n         al = byte [rsi + 0x34]\\n         byte [var_872h] = al\\n         byte [var_871h] = cl\\n         rax = rip + 0x2d63       // 0x1000085bc\\n         edx = dword [rax]\\n         rax = rip + 0x2d6a       // 0x1000085cc\\n         eax = dword [rax]\\n         ecx = dword [rbx + 0x28]\\n         r8d = word [r15 + 6]\\n         var = edx & edx\\n         qword [ptr] = rsi\\n         if  (!var) goto loc_0x100005895 // unlikely\\n         var = eax & eax\\n         if  (!var) goto loc_0x100005895 // likely\\n\\n    loc_0x100005877: // orphan\\n         var = eax & eax\\n         if  (!var) goto loc_0x100005895 // likely\\n         rdi = rip + 0x23da       // str._s_s__ju___\\n                                  // 0x100007c5c // \\\"%s%s %*ju   \\\" // const char *format\\n         rsi = r12\\n         rdx = var_872h\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%s%s %*ju   \\\")\\n         goto loc_0x1000058d2\\n\\n    loc_0x10000587b: // orphan\\n         rdi = rip + 0x23da       // str._s_s__ju___\\n                                  // 0x100007c5c // \\\"%s%s %*ju   \\\" // const char *format\\n         rsi = r12\\n         rdx = var_872h\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%s%s %*ju   \\\")\\n         goto loc_0x1000058d2\\n         // CODE XREFS from sym.func.100005725 @ 0x100005875(x), 0x100005879(x)\\n         var = edx & edx\\n         if  (!var) goto loc_0x1000058a7 // likely\\n\\n    loc_0x100005895: // orphan\\n         // CODE XREFS from sym.func.100005725 @ 0x100005875(x), 0x100005879(x)\\n         var = edx & edx\\n         if  (!var) goto loc_0x1000058a7 // likely\\n         r9d = dword [rbx + 0x20]\\n         rax = qword [rsi + 8]\\n         qword [rsp] = rax\\n         goto loc_0x1000058ba\\n\\n    loc_0x100005899: // orphan\\n         r9d = dword [rbx + 0x20]\\n         rax = qword [rsi + 8]\\n         qword [rsp] = rax\\n         goto loc_0x1000058ba\\n         // CODE XREF from sym.func.100005725 @ 0x100005897(x)\\n         r9d = dword [rbx + 0x30]\\n         rdx = qword [rsi]\\n         var = eax & eax\\n         if  (!var) goto loc_0x10000596a // likely\\n\\n    loc_0x1000058a7: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005897(x)\\n         r9d = dword [rbx + 0x30]\\n         rdx = qword [rsi]\\n         var = eax & eax\\n         if  (!var) goto loc_0x10000596a // likely\\n         qword [rsp] = rdx\\n\\n    loc_0x1000058b6: // orphan\\n         qword [rsp] = rdx\\n         // CODE XREF from sym.func.100005725 @ 0x1000058a5(x)\\n         rdi = rip + 0x23a8       // str._s_s__ju___s__\\n                                  // 0x100007c69 // \\\"%s%s %*ju %-*s  \\\"\\n\\n    loc_0x1000058ba: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x1000058a5(x)\\n         rdi = rip + 0x23a8       // str._s_s__ju___s__\\n                                  // 0x100007c69 // \\\"%s%s %*ju %-*s  \\\"\\n         // CODE XREF from sym.func.100005725 @ 0x100005985(x)\\n         rsi = r12\\n         rdx = var_872h\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(-1)\\n\\n    loc_0x1000058c1: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005985(x)\\n         rsi = r12\\n         rdx = var_872h\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(-1)\\n         // CODE XREF from sym.func.100005725 @ 0x100005893(x)\\n         rax = rip + 0x2cf7       // 0x1000085d0\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x1000058fa // unlikely\\n\\n    loc_0x1000058d2: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005893(x)\\n         rax = rip + 0x2cf7       // 0x1000085d0\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x1000058fa // unlikely\\n         esi = dword [rbx + 0x1c]\\n         rax = qword [ptr]\\n         rdx = qword [rax + 0x10]\\n         rdi = rip + 0x239e       // str.__s_\\n                                  // 0x100007c91 // \\\"%-*s \\\" // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%-*s \\\")\\n\\n    loc_0x1000058de: // orphan\\n         esi = dword [rbx + 0x1c]\\n         rax = qword [ptr]\\n         rdx = qword [rax + 0x10]\\n         rdi = rip + 0x239e       // str.__s_\\n                                  // 0x100007c91 // \\\"%-*s \\\" // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%-*s \\\")\\n         // CODE XREF from sym.func.100005725 @ 0x1000058dc(x)\\n         eax = dword [r15 + 4]\\n         ecx = 0x4000\\n         eax |= ecx\\n         eax &= 0xf000\\n         var = eax - 0x6000\\n         if  (var) goto loc_0x100005928 // likely\\n\\n    loc_0x1000058fa: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x1000058dc(x)\\n         eax = dword [r15 + 4]\\n         ecx = 0x4000\\n         eax |= ecx\\n         eax &= 0xf000\\n         var = eax - 0x6000\\n         if  (var) goto loc_0x100005928 // likely\\n         esi = dword [rbx + 0x2c]\\n         rdx = dword [r15 + 0x18]\\n         rdi = rip + 0x2529       // str._jx_\\n                                  // 0x100007e48 // \\\"%#*jx \\\" // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%#*jx \\\")\\n         goto loc_0x100005934\\n\\n    loc_0x100005911: // orphan\\n         esi = dword [rbx + 0x2c]\\n         rdx = dword [r15 + 0x18]\\n         rdi = rip + 0x2529       // str._jx_\\n                                  // 0x100007e48 // \\\"%#*jx \\\" // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%#*jx \\\")\\n         goto loc_0x100005934\\n         // CODE XREF from sym.func.100005725 @ 0x10000590f(x)\\n         edi = dword [rbx + 0x2c] // int64_t arg1\\n         rsi = qword [r15 + 0x60] // int64_t arg2\\n         sym.func.100005eef  ()   // sym.func.100005eef(0x0, 0x0)\\n\\n    loc_0x100005928: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x10000590f(x)\\n         edi = dword [rbx + 0x2c] // int64_t arg1\\n         rsi = qword [r15 + 0x60] // int64_t arg2\\n         sym.func.100005eef  ()   // sym.func.100005eef(0x0, 0x0)\\n         // CODE XREF from sym.func.100005725 @ 0x100005926(x)\\n         rax = rip + 0x2c59       // 0x100008594\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x100005946 // likely\\n\\n    loc_0x100005934: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005926(x)\\n         rax = rip + 0x2c59       // 0x100008594\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x100005946 // likely\\n         rax = r15 + 0x20\\n         goto loc_0x10000598e\\n\\n    loc_0x100005940: // orphan\\n         rax = r15 + 0x20\\n         goto loc_0x10000598e\\n         // CODE XREF from sym.func.100005725 @ 0x10000593e(x)\\n         rax = rip + 0x2c4b       // 0x100008598\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x100005958 // likely\\n\\n    loc_0x100005946: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x10000593e(x)\\n         rax = rip + 0x2c4b       // 0x100008598\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x100005958 // likely\\n         rax = r15 + 0x50\\n         goto loc_0x10000598e\\n\\n    loc_0x100005952: // orphan\\n         rax = r15 + 0x50\\n         goto loc_0x10000598e\\n         // CODE XREF from sym.func.100005725 @ 0x100005950(x)\\n         rax = rip + 0x2c31       // 0x100008590\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x10000598a // unlikely\\n\\n    loc_0x100005958: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005950(x)\\n         rax = rip + 0x2c31       // 0x100008590\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x10000598a // unlikely\\n         rax = r15 + 0x40\\n         goto loc_0x10000598e\\n\\n    loc_0x100005964: // orphan\\n         rax = r15 + 0x40\\n         goto loc_0x10000598e\\n         // CODE XREF from sym.func.100005725 @ 0x1000058b0(x)\\n         eax = dword [rbx + 0x20]\\n         rsi = qword [rsi + 8]\\n         qword [var_10h] = rsi\\n         dword [var_8h] = eax\\n         qword [rsp] = rdx\\n         rdi = rip + 0x22f5       // str._s_s__ju___s____s__\\n                                  // 0x100007c7a // \\\"%s%s %*ju %-*s  %-*s  \\\"\\n         goto loc_0x1000058c1\\n\\n    loc_0x10000596a: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x1000058b0(x)\\n         eax = dword [rbx + 0x20]\\n         rsi = qword [rsi + 8]\\n         qword [var_10h] = rsi\\n         dword [var_8h] = eax\\n         qword [rsp] = rdx\\n         rdi = rip + 0x22f5       // str._s_s__ju___s____s__\\n                                  // 0x100007c7a // \\\"%s%s %*ju %-*s  %-*s  \\\"\\n         goto loc_0x1000058c1\\n         // CODE XREF from sym.func.100005725 @ 0x100005962(x)\\n         rax = r15 + 0x30\\n\\n    loc_0x10000598a: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005962(x)\\n         rax = r15 + 0x30\\n         // CODE XREFS from sym.func.100005725 @ 0x100005944(x), 0x100005956(x), 0x100005968(x)\\n         rdi = qword [rax]        // time_t *arg1\\n         sym.func.100005f79  ()   // sym.func.100005f79(0x0)\\n         var = dword [r13] - 0\\n         if  (!var) goto loc_0x1000059ad // likely\\n\\n    loc_0x10000598e: // orphan\\n         // CODE XREFS from sym.func.100005725 @ 0x100005944(x), 0x100005956(x), 0x100005968(x)\\n         rdi = qword [rax]        // time_t *arg1\\n         sym.func.100005f79  ()   // sym.func.100005f79(0x0)\\n         var = dword [r13] - 0\\n         if  (!var) goto loc_0x1000059ad // likely\\n         edi = word [r15 + 4]     // uint32_t arg1\\n         sym.func.1000062c6  ()   // sym.func.1000062c6(0x0)\\n         dword [var_884h] = eax\\n\\n    loc_0x10000599d: // orphan\\n         edi = word [r15 + 4]     // uint32_t arg1\\n         sym.func.1000062c6  ()   // sym.func.1000062c6(0x0)\\n         dword [var_884h] = eax\\n         // CODE XREF from sym.func.100005725 @ 0x10000599b(x)\\n         qword [var_890h] = r15\\n         r12 = r14 + 0x68\\n         rdi = r12                // int64_t arg1\\n         sym.func.1000056ef  ()   // sym.func.1000056ef(0x68)\\n         var = dword [r13] - 0\\n         if  (!var) goto loc_0x1000059d7 // likely\\n\\n    loc_0x1000059ad: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x10000599b(x)\\n         qword [var_890h] = r15\\n         r12 = r14 + 0x68\\n         rdi = r12                // int64_t arg1\\n         sym.func.1000056ef  ()   // sym.func.1000056ef(0x68)\\n         var = dword [r13] - 0\\n         if  (!var) goto loc_0x1000059d7 // likely\\n         var = dword [var_884h] - 0\\n         if  (!var) goto loc_0x1000059d7 // likely\\n\\n    loc_0x1000059c7: // orphan\\n         var = dword [var_884h] - 0\\n         if  (!var) goto loc_0x1000059d7 // likely\\n         edi = 0                  // int64_t arg1\\n         sym.func.100006388  ()   // sym.func.100006388(0x0)\\n\\n    loc_0x1000059d0: // orphan\\n         edi = 0                  // int64_t arg1\\n         sym.func.100006388  ()   // sym.func.100006388(0x0)\\n         // CODE XREFS from sym.func.100005725 @ 0x1000059c5(x), 0x1000059ce(x)\\n         rax = rip + 0x2bd2       // 0x1000085b0\\n         var = dword [rax] - 0\\n         r15 = var_440h\\n         rbx = qword [var_890h]\\n         if  (!var) goto loc_0x1000059fa // unlikely\\n\\n    loc_0x1000059d7: // orphan\\n         // CODE XREFS from sym.func.100005725 @ 0x1000059c5(x), 0x1000059ce(x)\\n         rax = rip + 0x2bd2       // 0x1000085b0\\n         var = dword [rax] - 0\\n         r15 = var_440h\\n         rbx = qword [var_890h]\\n         if  (!var) goto loc_0x1000059fa // unlikely\\n         edi = word [rbx + 4]     // uint32_t arg1\\n         sym.func.1000063f9  ()   // sym.func.1000063f9(0x0)\\n\\n    loc_0x1000059f1: // orphan\\n         edi = word [rbx + 4]     // uint32_t arg1\\n         sym.func.1000063f9  ()   // sym.func.1000063f9(0x0)\\n         // CODE XREF from sym.func.100005725 @ 0x1000059ef(x)\\n         eax = word [rbx + 4]\\n         eax &= 0xf000\\n         var = eax - 0xa000\\n         if  (var) goto loc_0x100005abd // likely\\n\\n    loc_0x1000059fa: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x1000059ef(x)\\n         eax = word [rbx + 4]\\n         eax &= 0xf000\\n         var = eax - 0xa000\\n         if  (var) goto loc_0x100005abd // likely\\n         var = word [r14 + 0x56] - 0\\n         if  (!var) goto loc_0x100005a39 // likely\\n\\n    loc_0x100005a0e: // orphan\\n         var = word [r14 + 0x56] - 0\\n         if  (!var) goto loc_0x100005a39 // likely\\n         rax = qword [r14 + 8]\\n         rcx = qword [rax + 0x28]\\n         esi = 0x401              // size_t size\\n         rdi = r15                // char *s\\n         rdx = rip + 0x21ed       // str._s__s\\n                                  // 0x100007c1a // \\\"%s/%s\\\" // const char *format\\n         r8 = r12\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, 0x00000000, \\\"%s/%s\\\", ?)\\n         goto loc_0x100005a52\\n\\n    loc_0x100005a16: // orphan\\n         rax = qword [r14 + 8]\\n         rcx = qword [rax + 0x28]\\n         esi = 0x401              // size_t size\\n         rdi = r15                // char *s\\n         rdx = rip + 0x21ed       // str._s__s\\n                                  // 0x100007c1a // \\\"%s/%s\\\" // const char *format\\n         r8 = r12\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, 0x00000000, \\\"%s/%s\\\", ?)\\n         goto loc_0x100005a52\\n         // CODE XREF from sym.func.100005725 @ 0x100005a14(x)\\n         esi = 0x401              // size_t size\\n         rdi = r15                // char *s\\n         rdx = rip + 0x247c       // \\\"%s\\\"\\n                                  // 0x100007ec4 // const char *format\\n         rcx = r12                //  ...\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, 0x00000000, \\\"%s\\\", ?)\\n\\n    loc_0x100005a39: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005a14(x)\\n         esi = 0x401              // size_t size\\n         rdi = r15                // char *s\\n         rdx = rip + 0x247c       // \\\"%s\\\"\\n                                  // 0x100007ec4 // const char *format\\n         rcx = r12                //  ...\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, 0x00000000, \\\"%s\\\", ?)\\n         // CODE XREF from sym.func.100005725 @ 0x100005a37(x)\\n         rbx = var_850h\\n         edx = 0x400\\n         rdi = r15\\n         rsi = rbx\\n         sym.imp.readlink  ()\\n         var = eax - 0xffffffff\\n         if  (!var) goto loc_0x100005a90 // unlikely\\n\\n    loc_0x100005a52: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005a37(x)\\n         rbx = var_850h\\n         edx = 0x400\\n         rdi = r15\\n         rsi = rbx\\n         sym.imp.readlink  ()\\n         var = eax - 0xffffffff\\n         if  (!var) goto loc_0x100005a90 // unlikely\\n         cdq\\n         byte [rbp + rax - 0x850] = 0\\n         rdi = rip + 0x2455       // str.____\\n                                  // 0x100007ed4 // \\\" -> \\\" // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\" -> \\\")\\n         rdi = rbx                // int64_t arg1\\n         sym.func.1000056ef  ()   // sym.func.1000056ef(0x0)\\n         goto loc_0x100005abd\\n\\n    loc_0x100005a6e: // orphan\\n         cdq\\n         byte [rbp + rax - 0x850] = 0\\n         rdi = rip + 0x2455       // str.____\\n                                  // 0x100007ed4 // \\\" -> \\\" // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\" -> \\\")\\n         rdi = rbx                // int64_t arg1\\n         sym.func.1000056ef  ()   // sym.func.1000056ef(0x0)\\n         goto loc_0x100005abd\\n         // CODE XREF from sym.func.100005725 @ 0x100005a6c(x)\\n         rax = qword [reloc.__stderrp] // [0x100008018:8]=0\\n         rbx = qword [rax]\\n         sym.imp.__error  ()\\n                                  // void __error(-1, -1, -1)\\n         edi = dword [rax]        // int errnum\\n         sym.imp.strerror  ()\\n                                  // char *strerror(-1)\\n         rdi = rbx                // FILE *stream\\n         rsi = rip + 0x2417       // str._nls:__s:__s_n\\n                                  // 0x100007ec7 // \\\"\\\\nls: %s: %s\\\\n\\\" // const char *format\\n         rdx = r15\\n         rcx = rax\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, \\\"\\\\nls: %s: %s\\\\n\\\", ?)\\n\\n    loc_0x100005a90: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005a6c(x)\\n         rax = qword [reloc.__stderrp] // [0x100008018:8]=0\\n         rbx = qword [rax]\\n         sym.imp.__error  ()\\n                                  // void __error(-1, -1, -1)\\n         edi = dword [rax]        // int errnum\\n         sym.imp.strerror  ()\\n                                  // char *strerror(-1)\\n         rdi = rbx                // FILE *stream\\n         rsi = rip + 0x2417       // str._nls:__s:__s_n\\n                                  // 0x100007ec7 // \\\"\\\\nls: %s: %s\\\\n\\\" // const char *format\\n         rdx = r15\\n         rcx = rax\\n         eax = 0\\n         sym.imp.fprintf  ()\\n                                  // int fprintf(?, \\\"\\\\nls: %s: %s\\\\n\\\", ?)\\n         // CODE XREFS from sym.func.100005725 @ 0x100005a08(x), 0x100005a8e(x)\\n         qword [var_8b8h] = r14\\n         edi = 0xa                // int c\\n         sym.imp.putchar  ()\\n                                  // int putchar(0x00000000)\\n         rax = qword [ptr]\\n         r12d = dword [rax + 0x30]\\n         var = r12 & r12\\n         r14 = qword [var_8a0h]\\n         if  (!var) goto loc_0x100005b52 // unlikely\\n\\n    loc_0x100005abd: // orphan\\n         // CODE XREFS from sym.func.100005725 @ 0x100005a08(x), 0x100005a8e(x)\\n         qword [var_8b8h] = r14\\n         edi = 0xa                // int c\\n         sym.imp.putchar  ()\\n                                  // int putchar(0x00000000)\\n         rax = qword [ptr]\\n         r12d = dword [rax + 0x30]\\n         var = r12 & r12\\n         r14 = qword [var_8a0h]\\n         if  (!var) goto loc_0x100005b52 // unlikely\\n         rax = rip + 0x2af0       // 0x1000085dc\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x100005b52 // unlikely\\n\\n    loc_0x100005ae5: // orphan\\n         rax = rip + 0x2af0       // 0x1000085dc\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x100005b52 // unlikely\\n         var = r12d & r12d\\n         if  (var <= 0) goto loc_0x100005b52 // likely\\n\\n    loc_0x100005af1: // orphan\\n         var = r12d & r12d\\n         if  (var <= 0) goto loc_0x100005b52 // likely\\n         rax = qword [ptr]\\n         r13 = qword [rax + 0x20]\\n         rbx = qword [rax + 0x18]\\n         r15d = 0\\n\\n    loc_0x100005af6: // orphan\\n         rax = qword [ptr]\\n         r13 = qword [rax + 0x20]\\n         rbx = qword [rax + 0x18]\\n         r15d = 0\\n         // CODE XREF from sym.func.100005725 @ 0x100005b50(x)\\n         edi = 9                  // int c\\n         sym.imp.putchar  ()\\n                                  // int putchar(0x00000000)\\n         rdi = rbx                // int64_t arg1\\n         sym.func.1000056ef  ()   // sym.func.1000056ef(0x0)\\n         edi = 9                  // int c\\n         sym.imp.putchar  ()\\n                                  // int putchar(0x00000000)\\n         edi = dword [r14 + 0x2c] // int64_t arg1\\n         rsi = dword [r13 + r15*4] // int64_t arg2\\n         sym.func.100005eef  ()   // sym.func.100005eef(0x0, 0x0)\\n         edi = 0xa                // int c\\n         sym.imp.putchar  ()\\n                                  // int putchar(0x00000000)\\n         rdi = rbx                // const char *s\\n         sym.imp.strlen  ()\\n                                  // size_t strlen(-1)\\n         rbx += rax\\n         rbx+\\n         r15+\\n         var = r12 - r15\\n         if  (var) goto loc_0x100005b08 // likely\\n\\n    loc_0x100005b08: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005b50(x)\\n         edi = 9                  // int c\\n         sym.imp.putchar  ()\\n                                  // int putchar(0x00000000)\\n         rdi = rbx                // int64_t arg1\\n         sym.func.1000056ef  ()   // sym.func.1000056ef(0x0)\\n         edi = 9                  // int c\\n         sym.imp.putchar  ()\\n                                  // int putchar(0x00000000)\\n         edi = dword [r14 + 0x2c] // int64_t arg1\\n         rsi = dword [r13 + r15*4] // int64_t arg2\\n         sym.func.100005eef  ()   // sym.func.100005eef(0x0, 0x0)\\n         edi = 0xa                // int c\\n         sym.imp.putchar  ()\\n                                  // int putchar(0x00000000)\\n         rdi = rbx                // const char *s\\n         sym.imp.strlen  ()\\n                                  // size_t strlen(-1)\\n         rbx += rax\\n         rbx+\\n         r15+\\n         var = r12 - r15\\n         if  (var) goto loc_0x100005b08 // likely\\n         // CODE XREFS from sym.func.100005725 @ 0x100005ae3(x), 0x100005aef(x), 0x100005af4(x)\\n         rax = qword [ptr]\\n         r15 = qword [rax + 0x28]\\n         var = r15 & r15\\n         r12d = 0\\n         if  (!var) goto loc_0x100005ba3 // likely\\n\\n    loc_0x100005b52: // orphan\\n         // CODE XREFS from sym.func.100005725 @ 0x100005ae3(x), 0x100005aef(x), 0x100005af4(x)\\n         rax = qword [ptr]\\n         r15 = qword [rax + 0x28]\\n         var = r15 & r15\\n         r12d = 0\\n         if  (!var) goto loc_0x100005ba3 // likely\\n         rax = rip + 0x2a69       // 0x1000085d8\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x100005ba3 // unlikely\\n\\n    loc_0x100005b68: // orphan\\n         rax = rip + 0x2a69       // 0x1000085d8\\n         var = dword [rax] - 0\\n         if  (!var) goto loc_0x100005ba3 // unlikely\\n         rax = qword [var_890h]\\n         r14d = word [rax + 4]\\n         qword [var_850h] = 0\\n         rdi = r15\\n         esi = 0\\n         rbx = var_850h\\n         rdx = rbx\\n         sym.imp.acl_get_entry  ()\\n         var = eax & eax\\n         if  (!var) goto loc_0x100005bd1 // likely\\n\\n    loc_0x100005b74: // orphan\\n         rax = qword [var_890h]\\n         r14d = word [rax + 4]\\n         qword [var_850h] = 0\\n         rdi = r15\\n         esi = 0\\n         rbx = var_850h\\n         rdx = rbx\\n         sym.imp.acl_get_entry  ()\\n         var = eax & eax\\n         if  (!var) goto loc_0x100005bd1 // likely\\n         // CODE XREFS from sym.func.100005725 @ 0x100005b66(x), 0x100005b72(x), 0x100005e77(x)\\n         rbx = qword [var_8a0h]\\n         r14 = qword [var_8b8h]\\n         r12 = var_870h\\n         r13 = rip + 0x2a51       // 0x100008610\\n\\n    loc_0x100005ba3: // orphan\\n         // CODE XREFS from sym.func.100005725 @ 0x100005b66(x), 0x100005b72(x), 0x100005e77(x)\\n         rbx = qword [var_8a0h]\\n         r14 = qword [var_8b8h]\\n         r12 = var_870h\\n         r13 = rip + 0x2a51       // 0x100008610\\n         // CODE XREF from sym.func.100005725 @ 0x1000057c7(x)\\n         r14 = qword [r14 + 0x10]\\n         var = r14 & r14\\n         if  (var) goto loc_0x1000057c2 // likely\\n\\n    loc_0x100005bbf: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x1000057c7(x)\\n         r14 = qword [r14 + 0x10]\\n         var = r14 & r14\\n         if  (var) goto loc_0x1000057c2 // likely\\n         goto loc_0x100005ec8\\n\\n    loc_0x100005bcc: // orphan\\n         goto loc_0x100005ec8\\n         // CODE XREF from sym.func.100005725 @ 0x100005ba1(x)\\n         r14d &= 0xf000\\n         eax = 0\\n         var = r14d - 0x4000\\n         al = e\\n         r13d = 2\\n         r13d -= eax\\n         r14d = 0\\n         qword [var_8b0h] = r15\\n\\n    loc_0x100005bd1: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005ba1(x)\\n         r14d &= 0xf000\\n         eax = 0\\n         var = r14d - 0x4000\\n         al = e\\n         r13d = 2\\n         r13d -= eax\\n         r14d = 0\\n         qword [var_8b0h] = r15\\n         // CODE XREF from sym.func.100005725 @ 0x100005e71(x)\\n         rdi = qword [var_850h]\\n         rsi = var_894h\\n         sym.imp.acl_get_tag_type  ()\\n         var = eax & eax\\n         if  (var) goto loc_0x100005e53 // unlikely\\n\\n    loc_0x100005bf7: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005e71(x)\\n         rdi = qword [var_850h]\\n         rsi = var_894h\\n         sym.imp.acl_get_tag_type  ()\\n         var = eax & eax\\n         if  (var) goto loc_0x100005e53 // unlikely\\n         rdi = qword [var_850h]\\n         rsi = var_8a8h\\n         sym.imp.acl_get_flagset_np  ()\\n         var = eax & eax\\n         if  (var) goto loc_0x100005e53 // unlikely\\n\\n    loc_0x100005c12: // orphan\\n         rdi = qword [var_850h]\\n         rsi = var_8a8h\\n         sym.imp.acl_get_flagset_np  ()\\n         var = eax & eax\\n         if  (var) goto loc_0x100005e53 // unlikely\\n         rdi = qword [var_850h]\\n         rsi = var_8c0h\\n         sym.imp.acl_get_permset  ()\\n         var = eax & eax\\n         if  (var) goto loc_0x100005e53 // unlikely\\n\\n    loc_0x100005c2d: // orphan\\n         rdi = qword [var_850h]\\n         rsi = var_8c0h\\n         sym.imp.acl_get_permset  ()\\n         var = eax & eax\\n         if  (var) goto loc_0x100005e53 // unlikely\\n         rdi = qword [var_850h]\\n         sym.imp.acl_get_qualifier  ()\\n         qword [var_890h] = rax\\n         var = rax & rax\\n         if  (!var) goto loc_0x100005e53 // likely\\n\\n    loc_0x100005c48: // orphan\\n         rdi = qword [var_850h]\\n         sym.imp.acl_get_qualifier  ()\\n         qword [var_890h] = rax\\n         var = rax & rax\\n         if  (!var) goto loc_0x100005e53 // likely\\n         qword [var_440h] = 0\\n         edi = 0x105              // size_t size\\n         sym.imp.malloc  ()\\n                                  //  void *malloc(0x00000000)\\n         var = rax & rax\\n         if  (!var) goto loc_0x100005ec3 // likely\\n\\n    loc_0x100005c64: // orphan\\n         qword [var_440h] = 0\\n         edi = 0x105              // size_t size\\n         sym.imp.malloc  ()\\n                                  //  void *malloc(0x00000000)\\n         var = rax & rax\\n         if  (!var) goto loc_0x100005ec3 // likely\\n         rbx = rax\\n         rax = rip + 0x293c       // 0x1000085c8\\n         var = dword [rax] - 0\\n         r12 = qword [var_890h]\\n         qword [ptr] = rbx\\n         if  (var) goto loc_0x100005ccc // likely\\n\\n    loc_0x100005c82: // orphan\\n         rbx = rax\\n         rax = rip + 0x293c       // 0x1000085c8\\n         var = dword [rax] - 0\\n         r12 = qword [var_890h]\\n         qword [ptr] = rbx\\n         if  (var) goto loc_0x100005ccc // likely\\n         edx = 0x10\\n         edi = 6\\n         rsi = r12\\n         ecx = 0x1f\\n         r8 = var_440h\\n         r9 = var_898h\\n         sym.imp.mbr_identifier_translate  ()\\n         var = eax & eax\\n         if  (!var) goto loc_0x100005e7c // likely\\n\\n    loc_0x100005c9f: // orphan\\n         edx = 0x10\\n         edi = 6\\n         rsi = r12\\n         ecx = 0x1f\\n         r8 = var_440h\\n         r9 = var_898h\\n         sym.imp.mbr_identifier_translate  ()\\n         var = eax & eax\\n         if  (!var) goto loc_0x100005e7c // likely\\n         // CODE XREF from sym.func.100005725 @ 0x100005c9d(x)\\n         rdi = r12\\n         rsi = rbx\\n         sym.imp.uuid_unparse_upper  ()\\n\\n    loc_0x100005ccc: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005c9d(x)\\n         rdi = r12\\n         rsi = rbx\\n         sym.imp.uuid_unparse_upper  ()\\n         // CODE XREF from sym.func.100005725 @ 0x100005ebe(x)\\n         r15 = rip + 0x2642       // 0x100008320\\n         rdi = r12                // void *obj_p\\n         sym.imp.acl_free  ()\\n                                  // int acl_free(-1)\\n         eax = dword [var_894h]\\n         var = eax - 2\\n         rbx = rip + 0x203e       // str.unknown\\n                                  // 0x100007d34 // \\\"unknown\\\"\\n         rcx = rip + 0x2032       // str.deny\\n                                  // 0x100007d2f // \\\"deny\\\"\\n         if  (!var) rbx = rcx\\n         var = eax - 1\\n         rax = rip + 0x201e       // str.allow\\n                                  // 0x100007d29 // \\\"allow\\\"\\n         if  (!var) rbx = rax\\n         rdi = qword [var_8a8h]\\n         esi = 0x10\\n         sym.imp.acl_get_flag_np  ()\\n         var = eax & eax\\n         rcx = rip + 0x2021       // str._inherited\\n                                  // 0x100007d4a // \\\" inherited\\\"\\n         rax = rip + 0x1d23       // section.4.__TEXT.__cstring\\n                                  // 0x100007a53\\n         if  (!var) rcx = rax\\n         r12d = 0\\n         rdi = rip + 0x1ffe       // str.__d:__s_s__s_\\n                                  // 0x100007d3c // \\\" %d: %s%s %s \\\" // const char *format\\n         esi = r14d\\n         rdx = qword [ptr]\\n         r8 = rbx                 // \\\"unknown\\\" str.unknown\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\" %d: %s%s %s \\\")\\n         rdi = qword [ptr]        // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         ebx = 0x10\\n\\n    loc_0x100005cd7: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005ebe(x)\\n         r15 = rip + 0x2642       // 0x100008320\\n         rdi = r12                // void *obj_p\\n         sym.imp.acl_free  ()\\n                                  // int acl_free(-1)\\n         eax = dword [var_894h]\\n         var = eax - 2\\n         rbx = rip + 0x203e       // str.unknown\\n                                  // 0x100007d34 // \\\"unknown\\\"\\n         rcx = rip + 0x2032       // str.deny\\n                                  // 0x100007d2f // \\\"deny\\\"\\n         if  (!var) rbx = rcx\\n         var = eax - 1\\n         rax = rip + 0x201e       // str.allow\\n                                  // 0x100007d29 // \\\"allow\\\"\\n         if  (!var) rbx = rax\\n         rdi = qword [var_8a8h]\\n         esi = 0x10\\n         sym.imp.acl_get_flag_np  ()\\n         var = eax & eax\\n         rcx = rip + 0x2021       // str._inherited\\n                                  // 0x100007d4a // \\\" inherited\\\"\\n         rax = rip + 0x1d23       // section.4.__TEXT.__cstring\\n                                  // 0x100007a53\\n         if  (!var) rcx = rax\\n         r12d = 0\\n         rdi = rip + 0x1ffe       // str.__d:__s_s__s_\\n                                  // 0x100007d3c // \\\" %d: %s%s %s \\\" // const char *format\\n         esi = r14d\\n         rdx = qword [ptr]\\n         r8 = rbx                 // \\\"unknown\\\" str.unknown\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\" %d: %s%s %s \\\")\\n         rdi = qword [ptr]        // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         ebx = 0x10\\n         // CODE XREF from sym.func.100005725 @ 0x100005dc7(x)\\n         rdi = qword [var_8c0h]\\n         esi = dword [rbx + r15 - 0x10]\\n         sym.imp.acl_get_perm_np  ()\\n         var = eax & eax\\n         if  (!var) goto loc_0x100005dbc // likely\\n\\n    loc_0x100005d63: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005dc7(x)\\n         rdi = qword [var_8c0h]\\n         esi = dword [rbx + r15 - 0x10]\\n         sym.imp.acl_get_perm_np  ()\\n         var = eax & eax\\n         if  (!var) goto loc_0x100005dbc // likely\\n         var = dword [rbx + r15] & r13d\\n         if  (!var) goto loc_0x100005dbc // likely\\n\\n    loc_0x100005d78: // orphan\\n         var = dword [rbx + r15] & r13d\\n         if  (!var) goto loc_0x100005dbc // likely\\n         r15d = r12 + 1\\n         var = r12d & r12d\\n         rsi = rip + 0x1fcd       // \\\",\\\"\\n                                  // 0x100007d5a\\n         rax = rip + 0x1cbf       // section.4.__TEXT.__cstring\\n                                  // 0x100007a53\\n         if  (!var) rsi = rax     // section.4.__TEXT.__cstring\\n         rax = rip + 0x2581       // 0x100008320\\n         rdx = qword [rbx + rax - 8]\\n         rdi = rip + 0x1faa       // str._s_s\\n                                  // 0x100007d55 // \\\"%s%s\\\" // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%s%s\\\")\\n         r12d = r15d\\n         r15 = rip + 0x2564       // 0x100008320\\n\\n    loc_0x100005d7e: // orphan\\n         r15d = r12 + 1\\n         var = r12d & r12d\\n         rsi = rip + 0x1fcd       // \\\",\\\"\\n                                  // 0x100007d5a\\n         rax = rip + 0x1cbf       // section.4.__TEXT.__cstring\\n                                  // 0x100007a53\\n         if  (!var) rsi = rax     // section.4.__TEXT.__cstring\\n         rax = rip + 0x2581       // 0x100008320\\n         rdx = qword [rbx + rax - 8]\\n         rdi = rip + 0x1faa       // str._s_s\\n                                  // 0x100007d55 // \\\"%s%s\\\" // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%s%s\\\")\\n         r12d = r15d\\n         r15 = rip + 0x2564       // 0x100008320\\n         // CODE XREFS from sym.func.100005725 @ 0x100005d76(x), 0x100005d7c(x)\\n         rbx += 0x18\\n         var = rbx - 0x1a8\\n         if  (var) goto loc_0x100005d63 // likely\\n\\n    loc_0x100005dbc: // orphan\\n         // CODE XREFS from sym.func.100005725 @ 0x100005d76(x), 0x100005d7c(x)\\n         rbx += 0x18\\n         var = rbx - 0x1a8\\n         if  (var) goto loc_0x100005d63 // likely\\n         ebx = 0x10\\n         r15 = rip + 0x26fb       // \\\" \\\"\\n                                  // 0x1000084d0\\n\\n    loc_0x100005dc9: // orphan\\n         ebx = 0x10\\n         r15 = rip + 0x26fb       // \\\" \\\"\\n                                  // 0x1000084d0\\n         // CODE XREF from sym.func.100005725 @ 0x100005e36(x)\\n         rdi = qword [var_8a8h]\\n         esi = dword [rbx + r15 - 0x10]\\n         sym.imp.acl_get_flag_np  ()\\n         var = eax & eax\\n         if  (!var) goto loc_0x100005e2e // likely\\n\\n    loc_0x100005dd5: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005e36(x)\\n         rdi = qword [var_8a8h]\\n         esi = dword [rbx + r15 - 0x10]\\n         sym.imp.acl_get_flag_np  ()\\n         var = eax & eax\\n         if  (!var) goto loc_0x100005e2e // likely\\n         var = dword [rbx + r15] & r13d\\n         if  (!var) goto loc_0x100005e2e // likely\\n\\n    loc_0x100005dea: // orphan\\n         var = dword [rbx + r15] & r13d\\n         if  (!var) goto loc_0x100005e2e // likely\\n         r15d = r12 + 1\\n         var = r12d & r12d\\n         rsi = rip + 0x1f5b       // \\\",\\\"\\n                                  // 0x100007d5a\\n         rax = rip + 0x1c4d       // section.4.__TEXT.__cstring\\n                                  // 0x100007a53\\n         if  (!var) rsi = rax     // section.4.__TEXT.__cstring\\n         rax = rip + 0x26bf       // \\\" \\\"\\n                                  // 0x1000084d0\\n         rdx = qword [rbx + rax - 8]\\n         rdi = rip + 0x1f38       // str._s_s\\n                                  // 0x100007d55 // \\\"%s%s\\\" // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%s%s\\\")\\n         r12d = r15d\\n         r15 = rip + 0x26a2       // \\\" \\\"\\n                                  // 0x1000084d0\\n\\n    loc_0x100005df0: // orphan\\n         r15d = r12 + 1\\n         var = r12d & r12d\\n         rsi = rip + 0x1f5b       // \\\",\\\"\\n                                  // 0x100007d5a\\n         rax = rip + 0x1c4d       // section.4.__TEXT.__cstring\\n                                  // 0x100007a53\\n         if  (!var) rsi = rax     // section.4.__TEXT.__cstring\\n         rax = rip + 0x26bf       // \\\" \\\"\\n                                  // 0x1000084d0\\n         rdx = qword [rbx + rax - 8]\\n         rdi = rip + 0x1f38       // str._s_s\\n                                  // 0x100007d55 // \\\"%s%s\\\" // const char *format\\n         eax = 0\\n         sym.imp.printf  ()\\n                                  // int printf(\\\"%s%s\\\")\\n         r12d = r15d\\n         r15 = rip + 0x26a2       // \\\" \\\"\\n                                  // 0x1000084d0\\n         // CODE XREFS from sym.func.100005725 @ 0x100005de8(x), 0x100005dee(x)\\n         rbx += 0x18\\n         var = rbx - 0x70\\n         if  (var) goto loc_0x100005dd5 // likely\\n\\n    loc_0x100005e2e: // orphan\\n         // CODE XREFS from sym.func.100005725 @ 0x100005de8(x), 0x100005dee(x)\\n         rbx += 0x18\\n         var = rbx - 0x70\\n         if  (var) goto loc_0x100005dd5 // likely\\n         edi = 0xa                // int c\\n         sym.imp.putchar  ()\\n                                  // int putchar(0x00000000)\\n         r12d = 0\\n         rbx = var_850h\\n         r15 = qword [var_8b0h]\\n\\n    loc_0x100005e38: // orphan\\n         edi = 0xa                // int c\\n         sym.imp.putchar  ()\\n                                  // int putchar(0x00000000)\\n         r12d = 0\\n         rbx = var_850h\\n         r15 = qword [var_8b0h]\\n         // CODE XREFS from sym.func.100005725 @ 0x100005c0c(x), 0x100005c27(x), 0x100005c42(x), 0x100005c5e(x)\\n         r14d+\\n         var = r12 - qword [var_850h]\\n         esi = 0\\n         esi = esi - esi\\n         rdi = r15\\n         rdx = rbx\\n         sym.imp.acl_get_entry  ()\\n         var = eax & eax\\n         if  (!var) goto loc_0x100005bf7 // likely\\n\\n    loc_0x100005e53: // orphan\\n         // CODE XREFS from sym.func.100005725 @ 0x100005c0c(x), 0x100005c27(x), 0x100005c42(x), 0x100005c5e(x)\\n         r14d+\\n         var = r12 - qword [var_850h]\\n         esi = 0\\n         esi = esi - esi\\n         rdi = r15\\n         rdx = rbx\\n         sym.imp.acl_get_entry  ()\\n         var = eax & eax\\n         if  (!var) goto loc_0x100005bf7 // likely\\n         goto loc_0x100005ba3\\n\\n    loc_0x100005e77: // orphan\\n         goto loc_0x100005ba3\\n         // CODE XREF from sym.func.100005725 @ 0x100005cc6(x)\\n         var = dword [var_898h] - 1\\n         rcx = rip + 0x1edd       // str.group\\n                                  // 0x100007d67 // \\\"group\\\"\\n         rax = rip + 0x1ed1       // str.user\\n                                  // 0x100007d62 // \\\"user\\\"\\n         if  (!var) rcx = rax\\n         r8 = qword [var_440h]\\n         esi = 0x105              // size_t size\\n         rdi = rbx                // char *s\\n         rdx = rip + 0x1eb1       // str._s:_s\\n                                  // 0x100007d5c // \\\"%s:%s\\\" // const char *format\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, 0x00000000, \\\"%s:%s\\\", ?)\\n         rdi = qword [var_440h]   // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         goto loc_0x100005cd7\\n\\n    loc_0x100005e7c: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005cc6(x)\\n         var = dword [var_898h] - 1\\n         rcx = rip + 0x1edd       // str.group\\n                                  // 0x100007d67 // \\\"group\\\"\\n         rax = rip + 0x1ed1       // str.user\\n                                  // 0x100007d62 // \\\"user\\\"\\n         if  (!var) rcx = rax\\n         r8 = qword [var_440h]\\n         esi = 0x105              // size_t size\\n         rdi = rbx                // char *s\\n         rdx = rip + 0x1eb1       // str._s:_s\\n                                  // 0x100007d5c // \\\"%s:%s\\\" // const char *format\\n         eax = 0\\n         sym.imp.snprintf  ()\\n                                  // int snprintf(-1, 0x00000000, \\\"%s:%s\\\", ?)\\n         rdi = qword [var_440h]   // void *ptr\\n         sym.imp.free  ()\\n                                  // void free(-1)\\n         goto loc_0x100005cd7\\n         // CODE XREF from sym.func.100005725 @ 0x100005c7c(x)\\n         sym.func.1000073a7  ()\\n\\n    loc_0x100005ec3: // orphan\\n         // CODE XREF from sym.func.100005725 @ 0x100005c7c(x)\\n         sym.func.1000073a7  ()\\n\\n}\\n\"}\n"