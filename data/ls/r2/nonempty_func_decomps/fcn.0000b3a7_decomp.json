"{\"annotations\":[{\"start\":53,\"end\":53,\"offset\":45991,\"type\":\"offset\"},{\"start\":104,\"end\":104,\"offset\":45991,\"type\":\"offset\"},{\"start\":124,\"end\":124,\"offset\":45992,\"type\":\"offset\"},{\"start\":142,\"end\":142,\"offset\":45995,\"type\":\"offset\"},{\"start\":180,\"end\":180,\"offset\":45995,\"type\":\"offset\"},{\"start\":198,\"end\":198,\"offset\":46002,\"type\":\"offset\"},{\"start\":216,\"end\":216,\"offset\":46004,\"type\":\"offset\"},{\"start\":263,\"end\":263,\"offset\":46005,\"type\":\"offset\"},{\"start\":335,\"end\":335,\"offset\":46007,\"type\":\"offset\"},{\"start\":409,\"end\":409,\"offset\":46012,\"type\":\"offset\"},{\"start\":460,\"end\":460,\"offset\":46012,\"type\":\"offset\"},{\"start\":480,\"end\":480,\"offset\":46013,\"type\":\"offset\"},{\"start\":498,\"end\":498,\"offset\":46016,\"type\":\"offset\"},{\"start\":538,\"end\":538,\"offset\":46016,\"type\":\"offset\"},{\"start\":556,\"end\":556,\"offset\":46023,\"type\":\"offset\"},{\"start\":595,\"end\":595,\"offset\":46023,\"type\":\"offset\"},{\"start\":613,\"end\":613,\"offset\":46030,\"type\":\"offset\"},{\"start\":663,\"end\":663,\"offset\":46030,\"type\":\"offset\"},{\"start\":681,\"end\":681,\"offset\":46037,\"type\":\"offset\"},{\"start\":728,\"end\":728,\"offset\":46042,\"type\":\"offset\"},{\"start\":753,\"end\":753,\"offset\":46047,\"type\":\"offset\"}],\"code\":\"int fcn.0000b3a7 (int esi, int edx) {\\n    loc_0xb3a7:\\n        // CALL XREF from fcn.000096ef @ +0x7d4(x)\\n        push  (rbp)\\n        rbp = rsp\\n        rsi = rip + 0x861 // \\\"malloc\\\"\\n        // 0xbc13\\n        push  (1)\\n        rdi = pop  () // (pstr 0x00000000) \\\"5\\\"\\n        eax = 0       // (pstr 0x00000000) \\\"5\\\" // (pstr 0x00000000) \\\"5\\\"\\n        fcn.0000b44c  ()\\n        // chop\\n         // do {\\n    loc_0xb3bc:\\n        // CALL XREF from fcn.0000a3f9 @ +0x3e9(x)\\n        push  (rbp)\\n        rbp = rsp\\n        rdi = rip + 0x8d3 // \\\"printcol\\\"\\n        // 0xbc9a\\n        rsi = rip + 0x86b // \\\"print.c\\\"\\n        // 0xbc39\\n        rcx = rip + 0x8ce // \\\"base < dp->entries\\\"\\n        // 0xbca3\\n        edx = 0x23f   // (cstr 0x00000000) \\\"5\\\"\\n        fcn.0000b3e0  ()\\n        invali\\n         // } while (?);\\n        }\\n        return eax;\\n}\\n\"}\n"